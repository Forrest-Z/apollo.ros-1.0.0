// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/localization/localization.proto

#include "apollo_msgs/proto/localization/localization.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3D;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Uncertainty;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto
namespace apollo {
namespace localization {
class UncertaintyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Uncertainty>
      _instance;
} _Uncertainty_default_instance_;
class LocalizationEstimateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalizationEstimate>
      _instance;
} _LocalizationEstimate_default_instance_;
}  // namespace localization
}  // namespace apollo
namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto {
static void InitDefaultsUncertainty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::localization::_Uncertainty_default_instance_;
    new (ptr) ::apollo::localization::Uncertainty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::localization::Uncertainty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Uncertainty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUncertainty}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_Point3D.base,}};

static void InitDefaultsLocalizationEstimate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::localization::_LocalizationEstimate_default_instance_;
    new (ptr) ::apollo::localization::LocalizationEstimate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::localization::LocalizationEstimate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_LocalizationEstimate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsLocalizationEstimate}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::scc_info_Header.base,
      &protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::scc_info_Uncertainty.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Uncertainty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LocalizationEstimate.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, position_std_dev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, orientation_std_dev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, linear_velocity_std_dev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, linear_acceleration_std_dev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::Uncertainty, angular_velocity_std_dev_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::LocalizationEstimate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::LocalizationEstimate, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::LocalizationEstimate, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::LocalizationEstimate, uncertainty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::localization::LocalizationEstimate, measurement_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apollo::localization::Uncertainty)},
  { 10, -1, sizeof(::apollo::localization::LocalizationEstimate)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::localization::_Uncertainty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::localization::_LocalizationEstimate_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "apollo_msgs/proto/localization/localization.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n1apollo_msgs/proto/localization/localiz"
      "ation.proto\022\023apollo.localization\032%apollo"
      "_msgs/proto/common/header.proto\032)apollo_"
      "msgs/proto/localization/pose.proto\032\'apol"
      "lo_msgs/proto/common/geometry.proto\"\244\002\n\013"
      "Uncertainty\0220\n\020position_std_dev\030\001 \001(\0132\026."
      "apollo.common.Point3D\0223\n\023orientation_std"
      "_dev\030\002 \001(\0132\026.apollo.common.Point3D\0227\n\027li"
      "near_velocity_std_dev\030\003 \001(\0132\026.apollo.com"
      "mon.Point3D\022;\n\033linear_acceleration_std_d"
      "ev\030\004 \001(\0132\026.apollo.common.Point3D\0228\n\030angu"
      "lar_velocity_std_dev\030\005 \001(\0132\026.apollo.comm"
      "on.Point3D\"\267\001\n\024LocalizationEstimate\022%\n\006h"
      "eader\030\001 \001(\0132\025.apollo.common.Header\022\'\n\004po"
      "se\030\002 \001(\0132\031.apollo.localization.Pose\0225\n\013u"
      "ncertainty\030\003 \001(\0132 .apollo.localization.U"
      "ncertainty\022\030\n\020measurement_time\030\004 \001(\001b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 684);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apollo_msgs/proto/localization/localization.proto", &protobuf_RegisterTypes);
  ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto
namespace apollo {
namespace localization {

// ===================================================================

void Uncertainty::InitAsDefaultInstance() {
  ::apollo::localization::_Uncertainty_default_instance_._instance.get_mutable()->position_std_dev_ = const_cast< ::apollo::common::Point3D*>(
      ::apollo::common::Point3D::internal_default_instance());
  ::apollo::localization::_Uncertainty_default_instance_._instance.get_mutable()->orientation_std_dev_ = const_cast< ::apollo::common::Point3D*>(
      ::apollo::common::Point3D::internal_default_instance());
  ::apollo::localization::_Uncertainty_default_instance_._instance.get_mutable()->linear_velocity_std_dev_ = const_cast< ::apollo::common::Point3D*>(
      ::apollo::common::Point3D::internal_default_instance());
  ::apollo::localization::_Uncertainty_default_instance_._instance.get_mutable()->linear_acceleration_std_dev_ = const_cast< ::apollo::common::Point3D*>(
      ::apollo::common::Point3D::internal_default_instance());
  ::apollo::localization::_Uncertainty_default_instance_._instance.get_mutable()->angular_velocity_std_dev_ = const_cast< ::apollo::common::Point3D*>(
      ::apollo::common::Point3D::internal_default_instance());
}
void Uncertainty::clear_position_std_dev() {
  if (GetArenaNoVirtual() == NULL && position_std_dev_ != NULL) {
    delete position_std_dev_;
  }
  position_std_dev_ = NULL;
}
void Uncertainty::clear_orientation_std_dev() {
  if (GetArenaNoVirtual() == NULL && orientation_std_dev_ != NULL) {
    delete orientation_std_dev_;
  }
  orientation_std_dev_ = NULL;
}
void Uncertainty::clear_linear_velocity_std_dev() {
  if (GetArenaNoVirtual() == NULL && linear_velocity_std_dev_ != NULL) {
    delete linear_velocity_std_dev_;
  }
  linear_velocity_std_dev_ = NULL;
}
void Uncertainty::clear_linear_acceleration_std_dev() {
  if (GetArenaNoVirtual() == NULL && linear_acceleration_std_dev_ != NULL) {
    delete linear_acceleration_std_dev_;
  }
  linear_acceleration_std_dev_ = NULL;
}
void Uncertainty::clear_angular_velocity_std_dev() {
  if (GetArenaNoVirtual() == NULL && angular_velocity_std_dev_ != NULL) {
    delete angular_velocity_std_dev_;
  }
  angular_velocity_std_dev_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Uncertainty::kPositionStdDevFieldNumber;
const int Uncertainty::kOrientationStdDevFieldNumber;
const int Uncertainty::kLinearVelocityStdDevFieldNumber;
const int Uncertainty::kLinearAccelerationStdDevFieldNumber;
const int Uncertainty::kAngularVelocityStdDevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Uncertainty::Uncertainty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::scc_info_Uncertainty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.Uncertainty)
}
Uncertainty::Uncertainty(const Uncertainty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position_std_dev()) {
    position_std_dev_ = new ::apollo::common::Point3D(*from.position_std_dev_);
  } else {
    position_std_dev_ = NULL;
  }
  if (from.has_orientation_std_dev()) {
    orientation_std_dev_ = new ::apollo::common::Point3D(*from.orientation_std_dev_);
  } else {
    orientation_std_dev_ = NULL;
  }
  if (from.has_linear_velocity_std_dev()) {
    linear_velocity_std_dev_ = new ::apollo::common::Point3D(*from.linear_velocity_std_dev_);
  } else {
    linear_velocity_std_dev_ = NULL;
  }
  if (from.has_linear_acceleration_std_dev()) {
    linear_acceleration_std_dev_ = new ::apollo::common::Point3D(*from.linear_acceleration_std_dev_);
  } else {
    linear_acceleration_std_dev_ = NULL;
  }
  if (from.has_angular_velocity_std_dev()) {
    angular_velocity_std_dev_ = new ::apollo::common::Point3D(*from.angular_velocity_std_dev_);
  } else {
    angular_velocity_std_dev_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.localization.Uncertainty)
}

void Uncertainty::SharedCtor() {
  ::memset(&position_std_dev_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_std_dev_) -
      reinterpret_cast<char*>(&position_std_dev_)) + sizeof(angular_velocity_std_dev_));
}

Uncertainty::~Uncertainty() {
  // @@protoc_insertion_point(destructor:apollo.localization.Uncertainty)
  SharedDtor();
}

void Uncertainty::SharedDtor() {
  if (this != internal_default_instance()) delete position_std_dev_;
  if (this != internal_default_instance()) delete orientation_std_dev_;
  if (this != internal_default_instance()) delete linear_velocity_std_dev_;
  if (this != internal_default_instance()) delete linear_acceleration_std_dev_;
  if (this != internal_default_instance()) delete angular_velocity_std_dev_;
}

void Uncertainty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Uncertainty::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Uncertainty& Uncertainty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::scc_info_Uncertainty.base);
  return *internal_default_instance();
}


void Uncertainty::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.Uncertainty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_std_dev_ != NULL) {
    delete position_std_dev_;
  }
  position_std_dev_ = NULL;
  if (GetArenaNoVirtual() == NULL && orientation_std_dev_ != NULL) {
    delete orientation_std_dev_;
  }
  orientation_std_dev_ = NULL;
  if (GetArenaNoVirtual() == NULL && linear_velocity_std_dev_ != NULL) {
    delete linear_velocity_std_dev_;
  }
  linear_velocity_std_dev_ = NULL;
  if (GetArenaNoVirtual() == NULL && linear_acceleration_std_dev_ != NULL) {
    delete linear_acceleration_std_dev_;
  }
  linear_acceleration_std_dev_ = NULL;
  if (GetArenaNoVirtual() == NULL && angular_velocity_std_dev_ != NULL) {
    delete angular_velocity_std_dev_;
  }
  angular_velocity_std_dev_ = NULL;
  _internal_metadata_.Clear();
}

bool Uncertainty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.Uncertainty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.common.Point3D position_std_dev = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position_std_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.Point3D orientation_std_dev = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_orientation_std_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.Point3D linear_velocity_std_dev = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_velocity_std_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.Point3D linear_acceleration_std_dev = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_acceleration_std_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.Point3D angular_velocity_std_dev = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular_velocity_std_dev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.Uncertainty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.Uncertainty)
  return false;
#undef DO_
}

void Uncertainty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.Uncertainty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Point3D position_std_dev = 1;
  if (this->has_position_std_dev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position_std_dev(), output);
  }

  // .apollo.common.Point3D orientation_std_dev = 2;
  if (this->has_orientation_std_dev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_orientation_std_dev(), output);
  }

  // .apollo.common.Point3D linear_velocity_std_dev = 3;
  if (this->has_linear_velocity_std_dev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_linear_velocity_std_dev(), output);
  }

  // .apollo.common.Point3D linear_acceleration_std_dev = 4;
  if (this->has_linear_acceleration_std_dev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_linear_acceleration_std_dev(), output);
  }

  // .apollo.common.Point3D angular_velocity_std_dev = 5;
  if (this->has_angular_velocity_std_dev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_angular_velocity_std_dev(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.Uncertainty)
}

::google::protobuf::uint8* Uncertainty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.Uncertainty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Point3D position_std_dev = 1;
  if (this->has_position_std_dev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position_std_dev(), deterministic, target);
  }

  // .apollo.common.Point3D orientation_std_dev = 2;
  if (this->has_orientation_std_dev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_orientation_std_dev(), deterministic, target);
  }

  // .apollo.common.Point3D linear_velocity_std_dev = 3;
  if (this->has_linear_velocity_std_dev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_linear_velocity_std_dev(), deterministic, target);
  }

  // .apollo.common.Point3D linear_acceleration_std_dev = 4;
  if (this->has_linear_acceleration_std_dev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_linear_acceleration_std_dev(), deterministic, target);
  }

  // .apollo.common.Point3D angular_velocity_std_dev = 5;
  if (this->has_angular_velocity_std_dev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_angular_velocity_std_dev(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.Uncertainty)
  return target;
}

size_t Uncertainty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.Uncertainty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.common.Point3D position_std_dev = 1;
  if (this->has_position_std_dev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_std_dev_);
  }

  // .apollo.common.Point3D orientation_std_dev = 2;
  if (this->has_orientation_std_dev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *orientation_std_dev_);
  }

  // .apollo.common.Point3D linear_velocity_std_dev = 3;
  if (this->has_linear_velocity_std_dev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_velocity_std_dev_);
  }

  // .apollo.common.Point3D linear_acceleration_std_dev = 4;
  if (this->has_linear_acceleration_std_dev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *linear_acceleration_std_dev_);
  }

  // .apollo.common.Point3D angular_velocity_std_dev = 5;
  if (this->has_angular_velocity_std_dev()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angular_velocity_std_dev_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Uncertainty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.Uncertainty)
  GOOGLE_DCHECK_NE(&from, this);
  const Uncertainty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Uncertainty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.Uncertainty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.Uncertainty)
    MergeFrom(*source);
  }
}

void Uncertainty::MergeFrom(const Uncertainty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.Uncertainty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position_std_dev()) {
    mutable_position_std_dev()->::apollo::common::Point3D::MergeFrom(from.position_std_dev());
  }
  if (from.has_orientation_std_dev()) {
    mutable_orientation_std_dev()->::apollo::common::Point3D::MergeFrom(from.orientation_std_dev());
  }
  if (from.has_linear_velocity_std_dev()) {
    mutable_linear_velocity_std_dev()->::apollo::common::Point3D::MergeFrom(from.linear_velocity_std_dev());
  }
  if (from.has_linear_acceleration_std_dev()) {
    mutable_linear_acceleration_std_dev()->::apollo::common::Point3D::MergeFrom(from.linear_acceleration_std_dev());
  }
  if (from.has_angular_velocity_std_dev()) {
    mutable_angular_velocity_std_dev()->::apollo::common::Point3D::MergeFrom(from.angular_velocity_std_dev());
  }
}

void Uncertainty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.Uncertainty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Uncertainty::CopyFrom(const Uncertainty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.Uncertainty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Uncertainty::IsInitialized() const {
  return true;
}

void Uncertainty::Swap(Uncertainty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Uncertainty::InternalSwap(Uncertainty* other) {
  using std::swap;
  swap(position_std_dev_, other->position_std_dev_);
  swap(orientation_std_dev_, other->orientation_std_dev_);
  swap(linear_velocity_std_dev_, other->linear_velocity_std_dev_);
  swap(linear_acceleration_std_dev_, other->linear_acceleration_std_dev_);
  swap(angular_velocity_std_dev_, other->angular_velocity_std_dev_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Uncertainty::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalizationEstimate::InitAsDefaultInstance() {
  ::apollo::localization::_LocalizationEstimate_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::localization::_LocalizationEstimate_default_instance_._instance.get_mutable()->pose_ = const_cast< ::apollo::localization::Pose*>(
      ::apollo::localization::Pose::internal_default_instance());
  ::apollo::localization::_LocalizationEstimate_default_instance_._instance.get_mutable()->uncertainty_ = const_cast< ::apollo::localization::Uncertainty*>(
      ::apollo::localization::Uncertainty::internal_default_instance());
}
void LocalizationEstimate::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void LocalizationEstimate::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalizationEstimate::kHeaderFieldNumber;
const int LocalizationEstimate::kPoseFieldNumber;
const int LocalizationEstimate::kUncertaintyFieldNumber;
const int LocalizationEstimate::kMeasurementTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalizationEstimate::LocalizationEstimate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::scc_info_LocalizationEstimate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.localization.LocalizationEstimate)
}
LocalizationEstimate::LocalizationEstimate(const LocalizationEstimate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::apollo::localization::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_uncertainty()) {
    uncertainty_ = new ::apollo::localization::Uncertainty(*from.uncertainty_);
  } else {
    uncertainty_ = NULL;
  }
  measurement_time_ = from.measurement_time_;
  // @@protoc_insertion_point(copy_constructor:apollo.localization.LocalizationEstimate)
}

void LocalizationEstimate::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&measurement_time_) -
      reinterpret_cast<char*>(&header_)) + sizeof(measurement_time_));
}

LocalizationEstimate::~LocalizationEstimate() {
  // @@protoc_insertion_point(destructor:apollo.localization.LocalizationEstimate)
  SharedDtor();
}

void LocalizationEstimate::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete uncertainty_;
}

void LocalizationEstimate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LocalizationEstimate::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalizationEstimate& LocalizationEstimate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::scc_info_LocalizationEstimate.base);
  return *internal_default_instance();
}


void LocalizationEstimate::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.localization.LocalizationEstimate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && uncertainty_ != NULL) {
    delete uncertainty_;
  }
  uncertainty_ = NULL;
  measurement_time_ = 0;
  _internal_metadata_.Clear();
}

bool LocalizationEstimate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.localization.LocalizationEstimate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.localization.Pose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.localization.Uncertainty uncertainty = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uncertainty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double measurement_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &measurement_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.localization.LocalizationEstimate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.localization.LocalizationEstimate)
  return false;
#undef DO_
}

void LocalizationEstimate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.localization.LocalizationEstimate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .apollo.localization.Pose pose = 2;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  // .apollo.localization.Uncertainty uncertainty = 3;
  if (this->has_uncertainty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uncertainty(), output);
  }

  // double measurement_time = 4;
  if (this->measurement_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->measurement_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.localization.LocalizationEstimate)
}

::google::protobuf::uint8* LocalizationEstimate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.localization.LocalizationEstimate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .apollo.localization.Pose pose = 2;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  // .apollo.localization.Uncertainty uncertainty = 3;
  if (this->has_uncertainty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uncertainty(), deterministic, target);
  }

  // double measurement_time = 4;
  if (this->measurement_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->measurement_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.localization.LocalizationEstimate)
  return target;
}

size_t LocalizationEstimate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.localization.LocalizationEstimate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .apollo.localization.Pose pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .apollo.localization.Uncertainty uncertainty = 3;
  if (this->has_uncertainty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uncertainty_);
  }

  // double measurement_time = 4;
  if (this->measurement_time() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocalizationEstimate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.localization.LocalizationEstimate)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalizationEstimate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalizationEstimate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.localization.LocalizationEstimate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.localization.LocalizationEstimate)
    MergeFrom(*source);
  }
}

void LocalizationEstimate::MergeFrom(const LocalizationEstimate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.localization.LocalizationEstimate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
  if (from.has_pose()) {
    mutable_pose()->::apollo::localization::Pose::MergeFrom(from.pose());
  }
  if (from.has_uncertainty()) {
    mutable_uncertainty()->::apollo::localization::Uncertainty::MergeFrom(from.uncertainty());
  }
  if (from.measurement_time() != 0) {
    set_measurement_time(from.measurement_time());
  }
}

void LocalizationEstimate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.localization.LocalizationEstimate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalizationEstimate::CopyFrom(const LocalizationEstimate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.localization.LocalizationEstimate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizationEstimate::IsInitialized() const {
  return true;
}

void LocalizationEstimate::Swap(LocalizationEstimate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalizationEstimate::InternalSwap(LocalizationEstimate* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(pose_, other->pose_);
  swap(uncertainty_, other->uncertainty_);
  swap(measurement_time_, other->measurement_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LocalizationEstimate::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace localization
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::localization::Uncertainty* Arena::CreateMaybeMessage< ::apollo::localization::Uncertainty >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::localization::Uncertainty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::localization::LocalizationEstimate* Arena::CreateMaybeMessage< ::apollo::localization::LocalizationEstimate >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::localization::LocalizationEstimate >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
