// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/control/lat_controller_conf.proto

#ifndef PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto
#define PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto 

namespace protobuf_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto
namespace apollo {
namespace control {
class LatControllerConf;
class LatControllerConfDefaultTypeInternal;
extern LatControllerConfDefaultTypeInternal _LatControllerConf_default_instance_;
}  // namespace control
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::control::LatControllerConf* Arena::CreateMaybeMessage<::apollo::control::LatControllerConf>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace control {

// ===================================================================

class LatControllerConf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.control.LatControllerConf) */ {
 public:
  LatControllerConf();
  virtual ~LatControllerConf();

  LatControllerConf(const LatControllerConf& from);

  inline LatControllerConf& operator=(const LatControllerConf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LatControllerConf(LatControllerConf&& from) noexcept
    : LatControllerConf() {
    *this = ::std::move(from);
  }

  inline LatControllerConf& operator=(LatControllerConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LatControllerConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LatControllerConf* internal_default_instance() {
    return reinterpret_cast<const LatControllerConf*>(
               &_LatControllerConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LatControllerConf* other);
  friend void swap(LatControllerConf& a, LatControllerConf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LatControllerConf* New() const final {
    return CreateMaybeMessage<LatControllerConf>(NULL);
  }

  LatControllerConf* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LatControllerConf>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LatControllerConf& from);
  void MergeFrom(const LatControllerConf& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LatControllerConf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double matrix_q = 11;
  int matrix_q_size() const;
  void clear_matrix_q();
  static const int kMatrixQFieldNumber = 11;
  double matrix_q(int index) const;
  void set_matrix_q(int index, double value);
  void add_matrix_q(double value);
  const ::google::protobuf::RepeatedField< double >&
      matrix_q() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_matrix_q();

  // double ts = 1;
  void clear_ts();
  static const int kTsFieldNumber = 1;
  double ts() const;
  void set_ts(double value);

  // double cf = 3;
  void clear_cf();
  static const int kCfFieldNumber = 3;
  double cf() const;
  void set_cf(double value);

  // double cr = 4;
  void clear_cr();
  static const int kCrFieldNumber = 4;
  double cr() const;
  void set_cr(double value);

  // int32 preview_window = 2;
  void clear_preview_window();
  static const int kPreviewWindowFieldNumber = 2;
  ::google::protobuf::int32 preview_window() const;
  void set_preview_window(::google::protobuf::int32 value);

  // int32 mass_fl = 6;
  void clear_mass_fl();
  static const int kMassFlFieldNumber = 6;
  ::google::protobuf::int32 mass_fl() const;
  void set_mass_fl(::google::protobuf::int32 value);

  // double wheelbase = 5;
  void clear_wheelbase();
  static const int kWheelbaseFieldNumber = 5;
  double wheelbase() const;
  void set_wheelbase(double value);

  // int32 mass_fr = 7;
  void clear_mass_fr();
  static const int kMassFrFieldNumber = 7;
  ::google::protobuf::int32 mass_fr() const;
  void set_mass_fr(::google::protobuf::int32 value);

  // int32 mass_rl = 8;
  void clear_mass_rl();
  static const int kMassRlFieldNumber = 8;
  ::google::protobuf::int32 mass_rl() const;
  void set_mass_rl(::google::protobuf::int32 value);

  // double eps = 10;
  void clear_eps();
  static const int kEpsFieldNumber = 10;
  double eps() const;
  void set_eps(double value);

  // int32 mass_rr = 9;
  void clear_mass_rr();
  static const int kMassRrFieldNumber = 9;
  ::google::protobuf::int32 mass_rr() const;
  void set_mass_rr(::google::protobuf::int32 value);

  // int32 cutoff_freq = 12;
  void clear_cutoff_freq();
  static const int kCutoffFreqFieldNumber = 12;
  ::google::protobuf::int32 cutoff_freq() const;
  void set_cutoff_freq(::google::protobuf::int32 value);

  // int32 mean_filter_window_size = 13;
  void clear_mean_filter_window_size();
  static const int kMeanFilterWindowSizeFieldNumber = 13;
  ::google::protobuf::int32 mean_filter_window_size() const;
  void set_mean_filter_window_size(::google::protobuf::int32 value);

  // int32 steer_transmission_ratio = 14;
  void clear_steer_transmission_ratio();
  static const int kSteerTransmissionRatioFieldNumber = 14;
  ::google::protobuf::int32 steer_transmission_ratio() const;
  void set_steer_transmission_ratio(::google::protobuf::int32 value);

  // int32 steer_single_direction_max_degree = 15;
  void clear_steer_single_direction_max_degree();
  static const int kSteerSingleDirectionMaxDegreeFieldNumber = 15;
  ::google::protobuf::int32 steer_single_direction_max_degree() const;
  void set_steer_single_direction_max_degree(::google::protobuf::int32 value);

  // int32 max_iteration = 16;
  void clear_max_iteration();
  static const int kMaxIterationFieldNumber = 16;
  ::google::protobuf::int32 max_iteration() const;
  void set_max_iteration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.control.LatControllerConf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > matrix_q_;
  mutable int _matrix_q_cached_byte_size_;
  double ts_;
  double cf_;
  double cr_;
  ::google::protobuf::int32 preview_window_;
  ::google::protobuf::int32 mass_fl_;
  double wheelbase_;
  ::google::protobuf::int32 mass_fr_;
  ::google::protobuf::int32 mass_rl_;
  double eps_;
  ::google::protobuf::int32 mass_rr_;
  ::google::protobuf::int32 cutoff_freq_;
  ::google::protobuf::int32 mean_filter_window_size_;
  ::google::protobuf::int32 steer_transmission_ratio_;
  ::google::protobuf::int32 steer_single_direction_max_degree_;
  ::google::protobuf::int32 max_iteration_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LatControllerConf

// double ts = 1;
inline void LatControllerConf::clear_ts() {
  ts_ = 0;
}
inline double LatControllerConf::ts() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.ts)
  return ts_;
}
inline void LatControllerConf::set_ts(double value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.ts)
}

// int32 preview_window = 2;
inline void LatControllerConf::clear_preview_window() {
  preview_window_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::preview_window() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.preview_window)
  return preview_window_;
}
inline void LatControllerConf::set_preview_window(::google::protobuf::int32 value) {
  
  preview_window_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.preview_window)
}

// double cf = 3;
inline void LatControllerConf::clear_cf() {
  cf_ = 0;
}
inline double LatControllerConf::cf() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.cf)
  return cf_;
}
inline void LatControllerConf::set_cf(double value) {
  
  cf_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.cf)
}

// double cr = 4;
inline void LatControllerConf::clear_cr() {
  cr_ = 0;
}
inline double LatControllerConf::cr() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.cr)
  return cr_;
}
inline void LatControllerConf::set_cr(double value) {
  
  cr_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.cr)
}

// double wheelbase = 5;
inline void LatControllerConf::clear_wheelbase() {
  wheelbase_ = 0;
}
inline double LatControllerConf::wheelbase() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.wheelbase)
  return wheelbase_;
}
inline void LatControllerConf::set_wheelbase(double value) {
  
  wheelbase_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.wheelbase)
}

// int32 mass_fl = 6;
inline void LatControllerConf::clear_mass_fl() {
  mass_fl_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::mass_fl() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.mass_fl)
  return mass_fl_;
}
inline void LatControllerConf::set_mass_fl(::google::protobuf::int32 value) {
  
  mass_fl_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.mass_fl)
}

// int32 mass_fr = 7;
inline void LatControllerConf::clear_mass_fr() {
  mass_fr_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::mass_fr() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.mass_fr)
  return mass_fr_;
}
inline void LatControllerConf::set_mass_fr(::google::protobuf::int32 value) {
  
  mass_fr_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.mass_fr)
}

// int32 mass_rl = 8;
inline void LatControllerConf::clear_mass_rl() {
  mass_rl_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::mass_rl() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.mass_rl)
  return mass_rl_;
}
inline void LatControllerConf::set_mass_rl(::google::protobuf::int32 value) {
  
  mass_rl_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.mass_rl)
}

// int32 mass_rr = 9;
inline void LatControllerConf::clear_mass_rr() {
  mass_rr_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::mass_rr() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.mass_rr)
  return mass_rr_;
}
inline void LatControllerConf::set_mass_rr(::google::protobuf::int32 value) {
  
  mass_rr_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.mass_rr)
}

// double eps = 10;
inline void LatControllerConf::clear_eps() {
  eps_ = 0;
}
inline double LatControllerConf::eps() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.eps)
  return eps_;
}
inline void LatControllerConf::set_eps(double value) {
  
  eps_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.eps)
}

// repeated double matrix_q = 11;
inline int LatControllerConf::matrix_q_size() const {
  return matrix_q_.size();
}
inline void LatControllerConf::clear_matrix_q() {
  matrix_q_.Clear();
}
inline double LatControllerConf::matrix_q(int index) const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.matrix_q)
  return matrix_q_.Get(index);
}
inline void LatControllerConf::set_matrix_q(int index, double value) {
  matrix_q_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.matrix_q)
}
inline void LatControllerConf::add_matrix_q(double value) {
  matrix_q_.Add(value);
  // @@protoc_insertion_point(field_add:apollo.control.LatControllerConf.matrix_q)
}
inline const ::google::protobuf::RepeatedField< double >&
LatControllerConf::matrix_q() const {
  // @@protoc_insertion_point(field_list:apollo.control.LatControllerConf.matrix_q)
  return matrix_q_;
}
inline ::google::protobuf::RepeatedField< double >*
LatControllerConf::mutable_matrix_q() {
  // @@protoc_insertion_point(field_mutable_list:apollo.control.LatControllerConf.matrix_q)
  return &matrix_q_;
}

// int32 cutoff_freq = 12;
inline void LatControllerConf::clear_cutoff_freq() {
  cutoff_freq_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::cutoff_freq() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.cutoff_freq)
  return cutoff_freq_;
}
inline void LatControllerConf::set_cutoff_freq(::google::protobuf::int32 value) {
  
  cutoff_freq_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.cutoff_freq)
}

// int32 mean_filter_window_size = 13;
inline void LatControllerConf::clear_mean_filter_window_size() {
  mean_filter_window_size_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::mean_filter_window_size() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.mean_filter_window_size)
  return mean_filter_window_size_;
}
inline void LatControllerConf::set_mean_filter_window_size(::google::protobuf::int32 value) {
  
  mean_filter_window_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.mean_filter_window_size)
}

// int32 steer_transmission_ratio = 14;
inline void LatControllerConf::clear_steer_transmission_ratio() {
  steer_transmission_ratio_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::steer_transmission_ratio() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.steer_transmission_ratio)
  return steer_transmission_ratio_;
}
inline void LatControllerConf::set_steer_transmission_ratio(::google::protobuf::int32 value) {
  
  steer_transmission_ratio_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.steer_transmission_ratio)
}

// int32 steer_single_direction_max_degree = 15;
inline void LatControllerConf::clear_steer_single_direction_max_degree() {
  steer_single_direction_max_degree_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::steer_single_direction_max_degree() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.steer_single_direction_max_degree)
  return steer_single_direction_max_degree_;
}
inline void LatControllerConf::set_steer_single_direction_max_degree(::google::protobuf::int32 value) {
  
  steer_single_direction_max_degree_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.steer_single_direction_max_degree)
}

// int32 max_iteration = 16;
inline void LatControllerConf::clear_max_iteration() {
  max_iteration_ = 0;
}
inline ::google::protobuf::int32 LatControllerConf::max_iteration() const {
  // @@protoc_insertion_point(field_get:apollo.control.LatControllerConf.max_iteration)
  return max_iteration_;
}
inline void LatControllerConf::set_max_iteration(::google::protobuf::int32 value) {
  
  max_iteration_ = value;
  // @@protoc_insertion_point(field_set:apollo.control.LatControllerConf.max_iteration)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace control
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcontrol_2flat_5fcontroller_5fconf_2eproto
