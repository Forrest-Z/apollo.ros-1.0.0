// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/prediction/prediction_obstacle.proto

#ifndef PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto
#define PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "apollo_msgs/proto/common/header.pb.h"
#include "apollo_msgs/proto/perception/perception_obstacle.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto 

namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto
namespace apollo {
namespace prediction {
class PredictionObstacle;
class PredictionObstacleDefaultTypeInternal;
extern PredictionObstacleDefaultTypeInternal _PredictionObstacle_default_instance_;
class PredictionObstacles;
class PredictionObstaclesDefaultTypeInternal;
extern PredictionObstaclesDefaultTypeInternal _PredictionObstacles_default_instance_;
class Trajectory;
class TrajectoryDefaultTypeInternal;
extern TrajectoryDefaultTypeInternal _Trajectory_default_instance_;
class TrajectoryPoint;
class TrajectoryPointDefaultTypeInternal;
extern TrajectoryPointDefaultTypeInternal _TrajectoryPoint_default_instance_;
}  // namespace prediction
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::prediction::PredictionObstacle* Arena::CreateMaybeMessage<::apollo::prediction::PredictionObstacle>(Arena*);
template<> ::apollo::prediction::PredictionObstacles* Arena::CreateMaybeMessage<::apollo::prediction::PredictionObstacles>(Arena*);
template<> ::apollo::prediction::Trajectory* Arena::CreateMaybeMessage<::apollo::prediction::Trajectory>(Arena*);
template<> ::apollo::prediction::TrajectoryPoint* Arena::CreateMaybeMessage<::apollo::prediction::TrajectoryPoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace prediction {

// ===================================================================

class TrajectoryPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.TrajectoryPoint) */ {
 public:
  TrajectoryPoint();
  virtual ~TrajectoryPoint();

  TrajectoryPoint(const TrajectoryPoint& from);

  inline TrajectoryPoint& operator=(const TrajectoryPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrajectoryPoint(TrajectoryPoint&& from) noexcept
    : TrajectoryPoint() {
    *this = ::std::move(from);
  }

  inline TrajectoryPoint& operator=(TrajectoryPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrajectoryPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryPoint* internal_default_instance() {
    return reinterpret_cast<const TrajectoryPoint*>(
               &_TrajectoryPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TrajectoryPoint* other);
  friend void swap(TrajectoryPoint& a, TrajectoryPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryPoint* New() const final {
    return CreateMaybeMessage<TrajectoryPoint>(NULL);
  }

  TrajectoryPoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TrajectoryPoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TrajectoryPoint& from);
  void MergeFrom(const TrajectoryPoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrajectoryPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // double velocity = 4;
  void clear_velocity();
  static const int kVelocityFieldNumber = 4;
  double velocity() const;
  void set_velocity(double value);

  // double t = 5;
  void clear_t();
  static const int kTFieldNumber = 5;
  double t() const;
  void set_t(double value);

  // double heading = 6;
  void clear_heading();
  static const int kHeadingFieldNumber = 6;
  double heading() const;
  void set_heading(double value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.TrajectoryPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  double velocity_;
  double t_;
  double heading_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Trajectory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Trajectory) */ {
 public:
  Trajectory();
  virtual ~Trajectory();

  Trajectory(const Trajectory& from);

  inline Trajectory& operator=(const Trajectory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Trajectory(Trajectory&& from) noexcept
    : Trajectory() {
    *this = ::std::move(from);
  }

  inline Trajectory& operator=(Trajectory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Trajectory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Trajectory* internal_default_instance() {
    return reinterpret_cast<const Trajectory*>(
               &_Trajectory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Trajectory* other);
  friend void swap(Trajectory& a, Trajectory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Trajectory* New() const final {
    return CreateMaybeMessage<Trajectory>(NULL);
  }

  Trajectory* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Trajectory>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Trajectory& from);
  void MergeFrom(const Trajectory& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Trajectory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
  int trajectory_point_size() const;
  void clear_trajectory_point();
  static const int kTrajectoryPointFieldNumber = 2;
  ::apollo::prediction::TrajectoryPoint* mutable_trajectory_point(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >*
      mutable_trajectory_point();
  const ::apollo::prediction::TrajectoryPoint& trajectory_point(int index) const;
  ::apollo::prediction::TrajectoryPoint* add_trajectory_point();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >&
      trajectory_point() const;

  // double probability = 1;
  void clear_probability();
  static const int kProbabilityFieldNumber = 1;
  double probability() const;
  void set_probability(double value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.Trajectory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint > trajectory_point_;
  double probability_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PredictionObstacle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionObstacle) */ {
 public:
  PredictionObstacle();
  virtual ~PredictionObstacle();

  PredictionObstacle(const PredictionObstacle& from);

  inline PredictionObstacle& operator=(const PredictionObstacle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionObstacle(PredictionObstacle&& from) noexcept
    : PredictionObstacle() {
    *this = ::std::move(from);
  }

  inline PredictionObstacle& operator=(PredictionObstacle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionObstacle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionObstacle* internal_default_instance() {
    return reinterpret_cast<const PredictionObstacle*>(
               &_PredictionObstacle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PredictionObstacle* other);
  friend void swap(PredictionObstacle& a, PredictionObstacle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionObstacle* New() const final {
    return CreateMaybeMessage<PredictionObstacle>(NULL);
  }

  PredictionObstacle* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictionObstacle>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PredictionObstacle& from);
  void MergeFrom(const PredictionObstacle& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionObstacle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  int trajectory_size() const;
  void clear_trajectory();
  static const int kTrajectoryFieldNumber = 4;
  ::apollo::prediction::Trajectory* mutable_trajectory(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >*
      mutable_trajectory();
  const ::apollo::prediction::Trajectory& trajectory(int index) const;
  ::apollo::prediction::Trajectory* add_trajectory();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >&
      trajectory() const;

  // .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  bool has_perception_obstacle() const;
  void clear_perception_obstacle();
  static const int kPerceptionObstacleFieldNumber = 1;
  private:
  const ::apollo::perception::PerceptionObstacle& _internal_perception_obstacle() const;
  public:
  const ::apollo::perception::PerceptionObstacle& perception_obstacle() const;
  ::apollo::perception::PerceptionObstacle* release_perception_obstacle();
  ::apollo::perception::PerceptionObstacle* mutable_perception_obstacle();
  void set_allocated_perception_obstacle(::apollo::perception::PerceptionObstacle* perception_obstacle);

  // double time_stamp = 2;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 2;
  double time_stamp() const;
  void set_time_stamp(double value);

  // double predicted_period = 3;
  void clear_predicted_period();
  static const int kPredictedPeriodFieldNumber = 3;
  double predicted_period() const;
  void set_predicted_period(double value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionObstacle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory > trajectory_;
  ::apollo::perception::PerceptionObstacle* perception_obstacle_;
  double time_stamp_;
  double predicted_period_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PredictionObstacles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionObstacles) */ {
 public:
  PredictionObstacles();
  virtual ~PredictionObstacles();

  PredictionObstacles(const PredictionObstacles& from);

  inline PredictionObstacles& operator=(const PredictionObstacles& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PredictionObstacles(PredictionObstacles&& from) noexcept
    : PredictionObstacles() {
    *this = ::std::move(from);
  }

  inline PredictionObstacles& operator=(PredictionObstacles&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PredictionObstacles& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionObstacles* internal_default_instance() {
    return reinterpret_cast<const PredictionObstacles*>(
               &_PredictionObstacles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PredictionObstacles* other);
  friend void swap(PredictionObstacles& a, PredictionObstacles& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PredictionObstacles* New() const final {
    return CreateMaybeMessage<PredictionObstacles>(NULL);
  }

  PredictionObstacles* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PredictionObstacles>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PredictionObstacles& from);
  void MergeFrom(const PredictionObstacles& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionObstacles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  int prediction_obstacle_size() const;
  void clear_prediction_obstacle();
  static const int kPredictionObstacleFieldNumber = 2;
  ::apollo::prediction::PredictionObstacle* mutable_prediction_obstacle(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >*
      mutable_prediction_obstacle();
  const ::apollo::prediction::PredictionObstacle& prediction_obstacle(int index) const;
  ::apollo::prediction::PredictionObstacle* add_prediction_obstacle();
  const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >&
      prediction_obstacle() const;

  // .apollo.common.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::apollo::common::Header& _internal_header() const;
  public:
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* release_header();
  ::apollo::common::Header* mutable_header();
  void set_allocated_header(::apollo::common::Header* header);

  // .apollo.perception.PerceptionErrorCode perception_error_code = 3;
  void clear_perception_error_code();
  static const int kPerceptionErrorCodeFieldNumber = 3;
  ::apollo::perception::PerceptionErrorCode perception_error_code() const;
  void set_perception_error_code(::apollo::perception::PerceptionErrorCode value);

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionObstacles)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle > prediction_obstacle_;
  ::apollo::common::Header* header_;
  int perception_error_code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrajectoryPoint

// double x = 1;
inline void TrajectoryPoint::clear_x() {
  x_ = 0;
}
inline double TrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.x)
  return x_;
}
inline void TrajectoryPoint::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.x)
}

// double y = 2;
inline void TrajectoryPoint::clear_y() {
  y_ = 0;
}
inline double TrajectoryPoint::y() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.y)
  return y_;
}
inline void TrajectoryPoint::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.y)
}

// double z = 3;
inline void TrajectoryPoint::clear_z() {
  z_ = 0;
}
inline double TrajectoryPoint::z() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.z)
  return z_;
}
inline void TrajectoryPoint::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.z)
}

// double velocity = 4;
inline void TrajectoryPoint::clear_velocity() {
  velocity_ = 0;
}
inline double TrajectoryPoint::velocity() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.velocity)
  return velocity_;
}
inline void TrajectoryPoint::set_velocity(double value) {
  
  velocity_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.velocity)
}

// double t = 5;
inline void TrajectoryPoint::clear_t() {
  t_ = 0;
}
inline double TrajectoryPoint::t() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.t)
  return t_;
}
inline void TrajectoryPoint::set_t(double value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.t)
}

// double heading = 6;
inline void TrajectoryPoint::clear_heading() {
  heading_ = 0;
}
inline double TrajectoryPoint::heading() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.heading)
  return heading_;
}
inline void TrajectoryPoint::set_heading(double value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.heading)
}

// -------------------------------------------------------------------

// Trajectory

// double probability = 1;
inline void Trajectory::clear_probability() {
  probability_ = 0;
}
inline double Trajectory::probability() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.probability)
  return probability_;
}
inline void Trajectory::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Trajectory.probability)
}

// repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
inline int Trajectory::trajectory_point_size() const {
  return trajectory_point_.size();
}
inline void Trajectory::clear_trajectory_point() {
  trajectory_point_.Clear();
}
inline ::apollo::prediction::TrajectoryPoint* Trajectory::mutable_trajectory_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >*
Trajectory::mutable_trajectory_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Trajectory.trajectory_point)
  return &trajectory_point_;
}
inline const ::apollo::prediction::TrajectoryPoint& Trajectory::trajectory_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Get(index);
}
inline ::apollo::prediction::TrajectoryPoint* Trajectory::add_trajectory_point() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >&
Trajectory::trajectory_point() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_;
}

// -------------------------------------------------------------------

// PredictionObstacle

// .apollo.perception.PerceptionObstacle perception_obstacle = 1;
inline bool PredictionObstacle::has_perception_obstacle() const {
  return this != internal_default_instance() && perception_obstacle_ != NULL;
}
inline const ::apollo::perception::PerceptionObstacle& PredictionObstacle::_internal_perception_obstacle() const {
  return *perception_obstacle_;
}
inline const ::apollo::perception::PerceptionObstacle& PredictionObstacle::perception_obstacle() const {
  const ::apollo::perception::PerceptionObstacle* p = perception_obstacle_;
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.perception_obstacle)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::perception::PerceptionObstacle*>(
      &::apollo::perception::_PerceptionObstacle_default_instance_);
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::release_perception_obstacle() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacle.perception_obstacle)
  
  ::apollo::perception::PerceptionObstacle* temp = perception_obstacle_;
  perception_obstacle_ = NULL;
  return temp;
}
inline ::apollo::perception::PerceptionObstacle* PredictionObstacle::mutable_perception_obstacle() {
  
  if (perception_obstacle_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::perception::PerceptionObstacle>(GetArenaNoVirtual());
    perception_obstacle_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.perception_obstacle)
  return perception_obstacle_;
}
inline void PredictionObstacle::set_allocated_perception_obstacle(::apollo::perception::PerceptionObstacle* perception_obstacle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(perception_obstacle_);
  }
  if (perception_obstacle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      perception_obstacle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, perception_obstacle, submessage_arena);
    }
    
  } else {
    
  }
  perception_obstacle_ = perception_obstacle;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacle.perception_obstacle)
}

// double time_stamp = 2;
inline void PredictionObstacle::clear_time_stamp() {
  time_stamp_ = 0;
}
inline double PredictionObstacle::time_stamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.time_stamp)
  return time_stamp_;
}
inline void PredictionObstacle::set_time_stamp(double value) {
  
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.time_stamp)
}

// double predicted_period = 3;
inline void PredictionObstacle::clear_predicted_period() {
  predicted_period_ = 0;
}
inline double PredictionObstacle::predicted_period() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.predicted_period)
  return predicted_period_;
}
inline void PredictionObstacle::set_predicted_period(double value) {
  
  predicted_period_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.predicted_period)
}

// repeated .apollo.prediction.Trajectory trajectory = 4;
inline int PredictionObstacle::trajectory_size() const {
  return trajectory_.size();
}
inline void PredictionObstacle::clear_trajectory() {
  trajectory_.Clear();
}
inline ::apollo::prediction::Trajectory* PredictionObstacle::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >*
PredictionObstacle::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacle.trajectory)
  return &trajectory_;
}
inline const ::apollo::prediction::Trajectory& PredictionObstacle::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Get(index);
}
inline ::apollo::prediction::Trajectory* PredictionObstacle::add_trajectory() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >&
PredictionObstacle::trajectory() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_;
}

// -------------------------------------------------------------------

// PredictionObstacles

// .apollo.common.Header header = 1;
inline bool PredictionObstacles::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::apollo::common::Header& PredictionObstacles::_internal_header() const {
  return *header_;
}
inline const ::apollo::common::Header& PredictionObstacles::header() const {
  const ::apollo::common::Header* p = header_;
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.header)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::common::Header*>(
      &::apollo::common::_Header_default_instance_);
}
inline ::apollo::common::Header* PredictionObstacles::release_header() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacles.header)
  
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::apollo::common::Header* PredictionObstacles::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::common::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.header)
  return header_;
}
inline void PredictionObstacles::set_allocated_header(::apollo::common::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacles.header)
}

// repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
inline int PredictionObstacles::prediction_obstacle_size() const {
  return prediction_obstacle_.size();
}
inline void PredictionObstacles::clear_prediction_obstacle() {
  prediction_obstacle_.Clear();
}
inline ::apollo::prediction::PredictionObstacle* PredictionObstacles::mutable_prediction_obstacle(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >*
PredictionObstacles::mutable_prediction_obstacle() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return &prediction_obstacle_;
}
inline const ::apollo::prediction::PredictionObstacle& PredictionObstacles::prediction_obstacle(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Get(index);
}
inline ::apollo::prediction::PredictionObstacle* PredictionObstacles::add_prediction_obstacle() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >&
PredictionObstacles::prediction_obstacle() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_;
}

// .apollo.perception.PerceptionErrorCode perception_error_code = 3;
inline void PredictionObstacles::clear_perception_error_code() {
  perception_error_code_ = 0;
}
inline ::apollo::perception::PerceptionErrorCode PredictionObstacles::perception_error_code() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.perception_error_code)
  return static_cast< ::apollo::perception::PerceptionErrorCode >(perception_error_code_);
}
inline void PredictionObstacles::set_perception_error_code(::apollo::perception::PerceptionErrorCode value) {
  
  perception_error_code_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacles.perception_error_code)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto
