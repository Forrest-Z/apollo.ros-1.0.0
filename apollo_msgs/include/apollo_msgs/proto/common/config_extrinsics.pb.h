// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/common/config_extrinsics.proto

#ifndef PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto
#define PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "apollo_msgs/proto/common/geometry.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto 

namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto
namespace apollo {
namespace common {
namespace config {
class Extrinsics;
class ExtrinsicsDefaultTypeInternal;
extern ExtrinsicsDefaultTypeInternal _Extrinsics_default_instance_;
class Transform;
class TransformDefaultTypeInternal;
extern TransformDefaultTypeInternal _Transform_default_instance_;
}  // namespace config
}  // namespace common
}  // namespace apollo
namespace google {
namespace protobuf {
template<> ::apollo::common::config::Extrinsics* Arena::CreateMaybeMessage<::apollo::common::config::Extrinsics>(Arena*);
template<> ::apollo::common::config::Transform* Arena::CreateMaybeMessage<::apollo::common::config::Transform>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace apollo {
namespace common {
namespace config {

// ===================================================================

class Transform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.config.Transform) */ {
 public:
  Transform();
  virtual ~Transform();

  Transform(const Transform& from);

  inline Transform& operator=(const Transform& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transform(Transform&& from) noexcept
    : Transform() {
    *this = ::std::move(from);
  }

  inline Transform& operator=(Transform&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transform& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transform* internal_default_instance() {
    return reinterpret_cast<const Transform*>(
               &_Transform_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Transform* other);
  friend void swap(Transform& a, Transform& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transform* New() const final {
    return CreateMaybeMessage<Transform>(NULL);
  }

  Transform* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Transform>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Transform& from);
  void MergeFrom(const Transform& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Transform* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes source_frame = 1;
  void clear_source_frame();
  static const int kSourceFrameFieldNumber = 1;
  const ::std::string& source_frame() const;
  void set_source_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_source_frame(::std::string&& value);
  #endif
  void set_source_frame(const char* value);
  void set_source_frame(const void* value, size_t size);
  ::std::string* mutable_source_frame();
  ::std::string* release_source_frame();
  void set_allocated_source_frame(::std::string* source_frame);

  // bytes target_frame = 2;
  void clear_target_frame();
  static const int kTargetFrameFieldNumber = 2;
  const ::std::string& target_frame() const;
  void set_target_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_target_frame(::std::string&& value);
  #endif
  void set_target_frame(const char* value);
  void set_target_frame(const void* value, size_t size);
  ::std::string* mutable_target_frame();
  ::std::string* release_target_frame();
  void set_allocated_target_frame(::std::string* target_frame);

  // .apollo.common.Point3D translation = 3;
  bool has_translation() const;
  void clear_translation();
  static const int kTranslationFieldNumber = 3;
  private:
  const ::apollo::common::Point3D& _internal_translation() const;
  public:
  const ::apollo::common::Point3D& translation() const;
  ::apollo::common::Point3D* release_translation();
  ::apollo::common::Point3D* mutable_translation();
  void set_allocated_translation(::apollo::common::Point3D* translation);

  // .apollo.common.Quaternion rotation = 4;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 4;
  private:
  const ::apollo::common::Quaternion& _internal_rotation() const;
  public:
  const ::apollo::common::Quaternion& rotation() const;
  ::apollo::common::Quaternion* release_rotation();
  ::apollo::common::Quaternion* mutable_rotation();
  void set_allocated_rotation(::apollo::common::Quaternion* rotation);

  // @@protoc_insertion_point(class_scope:apollo.common.config.Transform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_frame_;
  ::google::protobuf::internal::ArenaStringPtr target_frame_;
  ::apollo::common::Point3D* translation_;
  ::apollo::common::Quaternion* rotation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Extrinsics : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.config.Extrinsics) */ {
 public:
  Extrinsics();
  virtual ~Extrinsics();

  Extrinsics(const Extrinsics& from);

  inline Extrinsics& operator=(const Extrinsics& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Extrinsics(Extrinsics&& from) noexcept
    : Extrinsics() {
    *this = ::std::move(from);
  }

  inline Extrinsics& operator=(Extrinsics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Extrinsics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Extrinsics* internal_default_instance() {
    return reinterpret_cast<const Extrinsics*>(
               &_Extrinsics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Extrinsics* other);
  friend void swap(Extrinsics& a, Extrinsics& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Extrinsics* New() const final {
    return CreateMaybeMessage<Extrinsics>(NULL);
  }

  Extrinsics* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Extrinsics>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Extrinsics& from);
  void MergeFrom(const Extrinsics& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Extrinsics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.common.config.Transform tansforms = 1;
  int tansforms_size() const;
  void clear_tansforms();
  static const int kTansformsFieldNumber = 1;
  ::apollo::common::config::Transform* mutable_tansforms(int index);
  ::google::protobuf::RepeatedPtrField< ::apollo::common::config::Transform >*
      mutable_tansforms();
  const ::apollo::common::config::Transform& tansforms(int index) const;
  ::apollo::common::config::Transform* add_tansforms();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::config::Transform >&
      tansforms() const;

  // @@protoc_insertion_point(class_scope:apollo.common.config.Extrinsics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::config::Transform > tansforms_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Transform

// bytes source_frame = 1;
inline void Transform::clear_source_frame() {
  source_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transform::source_frame() const {
  // @@protoc_insertion_point(field_get:apollo.common.config.Transform.source_frame)
  return source_frame_.GetNoArena();
}
inline void Transform::set_source_frame(const ::std::string& value) {
  
  source_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.common.config.Transform.source_frame)
}
#if LANG_CXX11
inline void Transform::set_source_frame(::std::string&& value) {
  
  source_frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.common.config.Transform.source_frame)
}
#endif
inline void Transform::set_source_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.common.config.Transform.source_frame)
}
inline void Transform::set_source_frame(const void* value, size_t size) {
  
  source_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.common.config.Transform.source_frame)
}
inline ::std::string* Transform::mutable_source_frame() {
  
  // @@protoc_insertion_point(field_mutable:apollo.common.config.Transform.source_frame)
  return source_frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transform::release_source_frame() {
  // @@protoc_insertion_point(field_release:apollo.common.config.Transform.source_frame)
  
  return source_frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transform::set_allocated_source_frame(::std::string* source_frame) {
  if (source_frame != NULL) {
    
  } else {
    
  }
  source_frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_frame);
  // @@protoc_insertion_point(field_set_allocated:apollo.common.config.Transform.source_frame)
}

// bytes target_frame = 2;
inline void Transform::clear_target_frame() {
  target_frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transform::target_frame() const {
  // @@protoc_insertion_point(field_get:apollo.common.config.Transform.target_frame)
  return target_frame_.GetNoArena();
}
inline void Transform::set_target_frame(const ::std::string& value) {
  
  target_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.common.config.Transform.target_frame)
}
#if LANG_CXX11
inline void Transform::set_target_frame(::std::string&& value) {
  
  target_frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.common.config.Transform.target_frame)
}
#endif
inline void Transform::set_target_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.common.config.Transform.target_frame)
}
inline void Transform::set_target_frame(const void* value, size_t size) {
  
  target_frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.common.config.Transform.target_frame)
}
inline ::std::string* Transform::mutable_target_frame() {
  
  // @@protoc_insertion_point(field_mutable:apollo.common.config.Transform.target_frame)
  return target_frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transform::release_target_frame() {
  // @@protoc_insertion_point(field_release:apollo.common.config.Transform.target_frame)
  
  return target_frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transform::set_allocated_target_frame(::std::string* target_frame) {
  if (target_frame != NULL) {
    
  } else {
    
  }
  target_frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_frame);
  // @@protoc_insertion_point(field_set_allocated:apollo.common.config.Transform.target_frame)
}

// .apollo.common.Point3D translation = 3;
inline bool Transform::has_translation() const {
  return this != internal_default_instance() && translation_ != NULL;
}
inline const ::apollo::common::Point3D& Transform::_internal_translation() const {
  return *translation_;
}
inline const ::apollo::common::Point3D& Transform::translation() const {
  const ::apollo::common::Point3D* p = translation_;
  // @@protoc_insertion_point(field_get:apollo.common.config.Transform.translation)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::common::Point3D*>(
      &::apollo::common::_Point3D_default_instance_);
}
inline ::apollo::common::Point3D* Transform::release_translation() {
  // @@protoc_insertion_point(field_release:apollo.common.config.Transform.translation)
  
  ::apollo::common::Point3D* temp = translation_;
  translation_ = NULL;
  return temp;
}
inline ::apollo::common::Point3D* Transform::mutable_translation() {
  
  if (translation_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::common::Point3D>(GetArenaNoVirtual());
    translation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.common.config.Transform.translation)
  return translation_;
}
inline void Transform::set_allocated_translation(::apollo::common::Point3D* translation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(translation_);
  }
  if (translation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      translation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, translation, submessage_arena);
    }
    
  } else {
    
  }
  translation_ = translation;
  // @@protoc_insertion_point(field_set_allocated:apollo.common.config.Transform.translation)
}

// .apollo.common.Quaternion rotation = 4;
inline bool Transform::has_rotation() const {
  return this != internal_default_instance() && rotation_ != NULL;
}
inline const ::apollo::common::Quaternion& Transform::_internal_rotation() const {
  return *rotation_;
}
inline const ::apollo::common::Quaternion& Transform::rotation() const {
  const ::apollo::common::Quaternion* p = rotation_;
  // @@protoc_insertion_point(field_get:apollo.common.config.Transform.rotation)
  return p != NULL ? *p : *reinterpret_cast<const ::apollo::common::Quaternion*>(
      &::apollo::common::_Quaternion_default_instance_);
}
inline ::apollo::common::Quaternion* Transform::release_rotation() {
  // @@protoc_insertion_point(field_release:apollo.common.config.Transform.rotation)
  
  ::apollo::common::Quaternion* temp = rotation_;
  rotation_ = NULL;
  return temp;
}
inline ::apollo::common::Quaternion* Transform::mutable_rotation() {
  
  if (rotation_ == NULL) {
    auto* p = CreateMaybeMessage<::apollo::common::Quaternion>(GetArenaNoVirtual());
    rotation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:apollo.common.config.Transform.rotation)
  return rotation_;
}
inline void Transform::set_allocated_rotation(::apollo::common::Quaternion* rotation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rotation_);
  }
  if (rotation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rotation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:apollo.common.config.Transform.rotation)
}

// -------------------------------------------------------------------

// Extrinsics

// repeated .apollo.common.config.Transform tansforms = 1;
inline int Extrinsics::tansforms_size() const {
  return tansforms_.size();
}
inline void Extrinsics::clear_tansforms() {
  tansforms_.Clear();
}
inline ::apollo::common::config::Transform* Extrinsics::mutable_tansforms(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.config.Extrinsics.tansforms)
  return tansforms_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::config::Transform >*
Extrinsics::mutable_tansforms() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.config.Extrinsics.tansforms)
  return &tansforms_;
}
inline const ::apollo::common::config::Transform& Extrinsics::tansforms(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.config.Extrinsics.tansforms)
  return tansforms_.Get(index);
}
inline ::apollo::common::config::Transform* Extrinsics::add_tansforms() {
  // @@protoc_insertion_point(field_add:apollo.common.config.Extrinsics.tansforms)
  return tansforms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::config::Transform >&
Extrinsics::tansforms() const {
  // @@protoc_insertion_point(field_list:apollo.common.config.Extrinsics.tansforms)
  return tansforms_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace config
}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_apollo_5fmsgs_2fproto_2fcommon_2fconfig_5fextrinsics_2eproto
