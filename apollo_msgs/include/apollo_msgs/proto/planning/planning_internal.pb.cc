// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/planning/planning_internal.proto

#include "apollo_msgs/proto/planning/planning_internal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LightSignal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_MainDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Debug_DebugMessage;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_PlanningObstacle;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_PlanningData;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Trajectory;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto
namespace apollo {
namespace planning_internal {
class PlanningObstacleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanningObstacle>
      _instance;
} _PlanningObstacle_default_instance_;
class Debug_DebugMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Debug_DebugMessage>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr trace_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::internal::ArenaStringPtr warn_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::internal::ArenaStringPtr fatal_;
} _Debug_DebugMessage_default_instance_;
class DebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Debug>
      _instance;
} _Debug_default_instance_;
class PlanningDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlanningData>
      _instance;
} _PlanningData_default_instance_;
}  // namespace planning_internal
}  // namespace apollo
namespace protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto {
static void InitDefaultsPlanningObstacle() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_PlanningObstacle_default_instance_;
    new (ptr) ::apollo::planning_internal::PlanningObstacle();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::PlanningObstacle::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PlanningObstacle =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPlanningObstacle}, {
      &protobuf_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto::scc_info_Point.base,
      &protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::scc_info_Trajectory.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisionType.base,}};

static void InitDefaultsDebug_DebugMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_Debug_DebugMessage_default_instance_;
    new (ptr) ::apollo::planning_internal::Debug_DebugMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::Debug_DebugMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Debug_DebugMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDebug_DebugMessage}, {}};

static void InitDefaultsDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_Debug_default_instance_;
    new (ptr) ::apollo::planning_internal::Debug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::Debug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Debug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDebug}, {
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningData.base,
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_Debug_DebugMessage.base,}};

static void InitDefaultsPlanningData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::planning_internal::_PlanningData_default_instance_;
    new (ptr) ::apollo::planning_internal::PlanningData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::planning_internal::PlanningData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_PlanningData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsPlanningData}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::scc_info_Header.base,
      &protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainDecision.base,
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningObstacle.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LightSignal.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PlanningObstacle.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Debug_DebugMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Debug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlanningData.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, perception_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, decision_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, polygon_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, tracking_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, perception_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, perception_object_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, prediction_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, prediction_trajectory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, decision_object_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, object_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningObstacle, planning_object_decision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug_DebugMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug_DebugMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug_DebugMessage, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug_DebugMessage, id_),
  offsetof(::apollo::planning_internal::Debug_DebugMessageDefaultTypeInternal, trace_),
  offsetof(::apollo::planning_internal::Debug_DebugMessageDefaultTypeInternal, info_),
  offsetof(::apollo::planning_internal::Debug_DebugMessageDefaultTypeInternal, warn_),
  offsetof(::apollo::planning_internal::Debug_DebugMessageDefaultTypeInternal, error_),
  offsetof(::apollo::planning_internal::Debug_DebugMessageDefaultTypeInternal, fatal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug_DebugMessage, debug_string_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, planning_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::Debug, debug_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, init_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, main_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, planning_obstacle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::planning_internal::PlanningData, light_signal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apollo::planning_internal::PlanningObstacle)},
  { 23, -1, sizeof(::apollo::planning_internal::Debug_DebugMessage)},
  { 36, -1, sizeof(::apollo::planning_internal::Debug)},
  { 44, -1, sizeof(::apollo::planning_internal::PlanningData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_PlanningObstacle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_Debug_DebugMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_Debug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::planning_internal::_PlanningData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "apollo_msgs/proto/planning/planning_internal.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2apollo_msgs/proto/planning/planning_in"
      "ternal.proto\022\030apollo.planning_internal\032%"
      "apollo_msgs/proto/common/header.proto\032)a"
      "pollo_msgs/proto/decision/decision.proto"
      "\0321apollo_msgs/proto/localization/localiz"
      "ation.proto\032)apollo_msgs/proto/localizat"
      "ion/pose.proto\0326apollo_msgs/proto/percep"
      "tion/perception_obstacle.proto\0326apollo_m"
      "sgs/proto/prediction/prediction_obstacle"
      ".proto\"\300\005\n\020PlanningObstacle\022\025\n\rperceptio"
      "n_id\030\001 \001(\005\022\023\n\013decision_id\030\002 \001(\t\022*\n\010posit"
      "ion\030\003 \001(\0132\030.apollo.perception.Point\022\r\n\005t"
      "heta\030\004 \001(\001\022*\n\010velocity\030\005 \001(\0132\030.apollo.pe"
      "rception.Point\022\r\n\005speed\030\006 \001(\001\022\016\n\006length\030"
      "\007 \001(\001\022\r\n\005width\030\010 \001(\001\022\016\n\006height\030\t \001(\001\022/\n\r"
      "polygon_point\030\n \003(\0132\030.apollo.perception."
      "Point\022\025\n\rtracking_time\030\013 \001(\001\022\034\n\024percepti"
      "on_timestamp\030\014 \001(\001\022J\n\026perception_object_"
      "type\030\r \001(\0162*.apollo.perception.Perceptio"
      "nObstacle.Type\022\034\n\024prediction_timestamp\030\016"
      " \001(\001\022<\n\025prediction_trajectory\030\017 \003(\0132\035.ap"
      "ollo.prediction.Trajectory\022H\n\024decision_o"
      "bject_type\030\020 \001(\0162*.apollo.decision.Objec"
      "tDecision.ObjectType\022<\n\017object_decision\030"
      "\021 \001(\0132#.apollo.decision.ObjectDecisionTy"
      "pe\022E\n\030planning_object_decision\030\022 \003(\0132#.a"
      "pollo.decision.ObjectDecisionType\"\232\004\n\005De"
      "bug\022=\n\nerror_code\030\001 \001(\0162).apollo.plannin"
      "g_internal.Debug.ErrorCode\022=\n\rplanning_d"
      "ata\030\002 \001(\0132&.apollo.planning_internal.Pla"
      "nningData\022C\n\rdebug_message\030\003 \003(\0132,.apoll"
      "o.planning_internal.Debug.DebugMessage\032\274"
      "\001\n\014DebugMessage\022=\n\nerror_code\030\001 \001(\0162).ap"
      "ollo.planning_internal.Debug.ErrorCode\022\n"
      "\n\002id\030\002 \001(\005\022\017\n\005trace\030\003 \001(\tH\000\022\016\n\004info\030\004 \001("
      "\tH\000\022\016\n\004warn\030\005 \001(\tH\000\022\017\n\005error\030\006 \001(\tH\000\022\017\n\005"
      "fatal\030\007 \001(\tH\000B\016\n\014debug_string\"\216\001\n\tErrorC"
      "ode\022\006\n\002OK\020\000\022\021\n\rERR_NOT_READY\020\001\022\r\n\tERR_ES"
      "TOP\020\002\022\026\n\022ERR_PATH_OPTIMIZER\020\003\022\027\n\023ERR_SPE"
      "ED_OPTIMIZER\020\004\022\020\n\014ERR_ST_GRAPH\020\005\022\024\n\020ERR_"
      "SANITY_CHECK\020\006\"\226\002\n\014PlanningData\022%\n\006heade"
      "r\030\001 \001(\0132\025.apollo.common.Header\022.\n\013init_s"
      "tatus\030\002 \001(\0132\031.apollo.localization.Pose\0224"
      "\n\rmain_decision\030\003 \001(\0132\035.apollo.decision."
      "MainDecision\022E\n\021planning_obstacle\030\004 \003(\0132"
      "*.apollo.planning_internal.PlanningObsta"
      "cle\0222\n\014light_signal\030\005 \001(\0132\034.apollo.decis"
      "ion.LightSignalb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1903);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apollo_msgs/proto/planning/planning_internal.proto", &protobuf_RegisterTypes);
  ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2flocalization_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2flocalization_2fpose_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto
namespace apollo {
namespace planning_internal {
const ::google::protobuf::EnumDescriptor* Debug_ErrorCode_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_enum_descriptors[0];
}
bool Debug_ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Debug_ErrorCode Debug::OK;
const Debug_ErrorCode Debug::ERR_NOT_READY;
const Debug_ErrorCode Debug::ERR_ESTOP;
const Debug_ErrorCode Debug::ERR_PATH_OPTIMIZER;
const Debug_ErrorCode Debug::ERR_SPEED_OPTIMIZER;
const Debug_ErrorCode Debug::ERR_ST_GRAPH;
const Debug_ErrorCode Debug::ERR_SANITY_CHECK;
const Debug_ErrorCode Debug::ErrorCode_MIN;
const Debug_ErrorCode Debug::ErrorCode_MAX;
const int Debug::ErrorCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PlanningObstacle::InitAsDefaultInstance() {
  ::apollo::planning_internal::_PlanningObstacle_default_instance_._instance.get_mutable()->position_ = const_cast< ::apollo::perception::Point*>(
      ::apollo::perception::Point::internal_default_instance());
  ::apollo::planning_internal::_PlanningObstacle_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::apollo::perception::Point*>(
      ::apollo::perception::Point::internal_default_instance());
  ::apollo::planning_internal::_PlanningObstacle_default_instance_._instance.get_mutable()->object_decision_ = const_cast< ::apollo::decision::ObjectDecisionType*>(
      ::apollo::decision::ObjectDecisionType::internal_default_instance());
}
void PlanningObstacle::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void PlanningObstacle::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
}
void PlanningObstacle::clear_polygon_point() {
  polygon_point_.Clear();
}
void PlanningObstacle::clear_prediction_trajectory() {
  prediction_trajectory_.Clear();
}
void PlanningObstacle::clear_object_decision() {
  if (GetArenaNoVirtual() == NULL && object_decision_ != NULL) {
    delete object_decision_;
  }
  object_decision_ = NULL;
}
void PlanningObstacle::clear_planning_object_decision() {
  planning_object_decision_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanningObstacle::kPerceptionIdFieldNumber;
const int PlanningObstacle::kDecisionIdFieldNumber;
const int PlanningObstacle::kPositionFieldNumber;
const int PlanningObstacle::kThetaFieldNumber;
const int PlanningObstacle::kVelocityFieldNumber;
const int PlanningObstacle::kSpeedFieldNumber;
const int PlanningObstacle::kLengthFieldNumber;
const int PlanningObstacle::kWidthFieldNumber;
const int PlanningObstacle::kHeightFieldNumber;
const int PlanningObstacle::kPolygonPointFieldNumber;
const int PlanningObstacle::kTrackingTimeFieldNumber;
const int PlanningObstacle::kPerceptionTimestampFieldNumber;
const int PlanningObstacle::kPerceptionObjectTypeFieldNumber;
const int PlanningObstacle::kPredictionTimestampFieldNumber;
const int PlanningObstacle::kPredictionTrajectoryFieldNumber;
const int PlanningObstacle::kDecisionObjectTypeFieldNumber;
const int PlanningObstacle::kObjectDecisionFieldNumber;
const int PlanningObstacle::kPlanningObjectDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanningObstacle::PlanningObstacle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningObstacle.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.PlanningObstacle)
}
PlanningObstacle::PlanningObstacle(const PlanningObstacle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygon_point_(from.polygon_point_),
      prediction_trajectory_(from.prediction_trajectory_),
      planning_object_decision_(from.planning_object_decision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  decision_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.decision_id().size() > 0) {
    decision_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decision_id_);
  }
  if (from.has_position()) {
    position_ = new ::apollo::perception::Point(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::apollo::perception::Point(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_object_decision()) {
    object_decision_ = new ::apollo::decision::ObjectDecisionType(*from.object_decision_);
  } else {
    object_decision_ = NULL;
  }
  ::memcpy(&theta_, &from.theta_,
    static_cast<size_t>(reinterpret_cast<char*>(&decision_object_type_) -
    reinterpret_cast<char*>(&theta_)) + sizeof(decision_object_type_));
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.PlanningObstacle)
}

void PlanningObstacle::SharedCtor() {
  decision_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&decision_object_type_) -
      reinterpret_cast<char*>(&position_)) + sizeof(decision_object_type_));
}

PlanningObstacle::~PlanningObstacle() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.PlanningObstacle)
  SharedDtor();
}

void PlanningObstacle::SharedDtor() {
  decision_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete object_decision_;
}

void PlanningObstacle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanningObstacle::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanningObstacle& PlanningObstacle::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningObstacle.base);
  return *internal_default_instance();
}


void PlanningObstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.PlanningObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygon_point_.Clear();
  prediction_trajectory_.Clear();
  planning_object_decision_.Clear();
  decision_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && object_decision_ != NULL) {
    delete object_decision_;
  }
  object_decision_ = NULL;
  ::memset(&theta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&decision_object_type_) -
      reinterpret_cast<char*>(&theta_)) + sizeof(decision_object_type_));
  _internal_metadata_.Clear();
}

bool PlanningObstacle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.PlanningObstacle)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 perception_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &perception_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string decision_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_decision_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->decision_id().data(), static_cast<int>(this->decision_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.PlanningObstacle.decision_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.perception.Point position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double theta = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.perception.Point velocity = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double height = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.perception.Point polygon_point = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygon_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double tracking_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &tracking_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double perception_timestamp = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &perception_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.perception.PerceptionObstacle.Type perception_object_type = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_perception_object_type(static_cast< ::apollo::perception::PerceptionObstacle_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double prediction_timestamp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prediction_timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.prediction.Trajectory prediction_trajectory = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_prediction_trajectory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectDecision.ObjectType decision_object_type = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_decision_object_type(static_cast< ::apollo::decision::ObjectDecision_ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectDecisionType object_decision = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.decision.ObjectDecisionType planning_object_decision = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_planning_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.PlanningObstacle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.PlanningObstacle)
  return false;
#undef DO_
}

void PlanningObstacle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.PlanningObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 perception_id = 1;
  if (this->perception_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->perception_id(), output);
  }

  // string decision_id = 2;
  if (this->decision_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decision_id().data(), static_cast<int>(this->decision_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.PlanningObstacle.decision_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->decision_id(), output);
  }

  // .apollo.perception.Point position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // double theta = 4;
  if (this->theta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->theta(), output);
  }

  // .apollo.perception.Point velocity = 5;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_velocity(), output);
  }

  // double speed = 6;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->speed(), output);
  }

  // double length = 7;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->length(), output);
  }

  // double width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->width(), output);
  }

  // double height = 9;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->height(), output);
  }

  // repeated .apollo.perception.Point polygon_point = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->polygon_point(static_cast<int>(i)),
      output);
  }

  // double tracking_time = 11;
  if (this->tracking_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->tracking_time(), output);
  }

  // double perception_timestamp = 12;
  if (this->perception_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->perception_timestamp(), output);
  }

  // .apollo.perception.PerceptionObstacle.Type perception_object_type = 13;
  if (this->perception_object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->perception_object_type(), output);
  }

  // double prediction_timestamp = 14;
  if (this->prediction_timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->prediction_timestamp(), output);
  }

  // repeated .apollo.prediction.Trajectory prediction_trajectory = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_trajectory_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->prediction_trajectory(static_cast<int>(i)),
      output);
  }

  // .apollo.decision.ObjectDecision.ObjectType decision_object_type = 16;
  if (this->decision_object_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->decision_object_type(), output);
  }

  // .apollo.decision.ObjectDecisionType object_decision = 17;
  if (this->has_object_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_object_decision(), output);
  }

  // repeated .apollo.decision.ObjectDecisionType planning_object_decision = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->planning_object_decision_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->planning_object_decision(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.PlanningObstacle)
}

::google::protobuf::uint8* PlanningObstacle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.PlanningObstacle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 perception_id = 1;
  if (this->perception_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->perception_id(), target);
  }

  // string decision_id = 2;
  if (this->decision_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->decision_id().data(), static_cast<int>(this->decision_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.PlanningObstacle.decision_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->decision_id(), target);
  }

  // .apollo.perception.Point position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // double theta = 4;
  if (this->theta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->theta(), target);
  }

  // .apollo.perception.Point velocity = 5;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_velocity(), deterministic, target);
  }

  // double speed = 6;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->speed(), target);
  }

  // double length = 7;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->length(), target);
  }

  // double width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->width(), target);
  }

  // double height = 9;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->height(), target);
  }

  // repeated .apollo.perception.Point polygon_point = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygon_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->polygon_point(static_cast<int>(i)), deterministic, target);
  }

  // double tracking_time = 11;
  if (this->tracking_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->tracking_time(), target);
  }

  // double perception_timestamp = 12;
  if (this->perception_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->perception_timestamp(), target);
  }

  // .apollo.perception.PerceptionObstacle.Type perception_object_type = 13;
  if (this->perception_object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->perception_object_type(), target);
  }

  // double prediction_timestamp = 14;
  if (this->prediction_timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->prediction_timestamp(), target);
  }

  // repeated .apollo.prediction.Trajectory prediction_trajectory = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->prediction_trajectory_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->prediction_trajectory(static_cast<int>(i)), deterministic, target);
  }

  // .apollo.decision.ObjectDecision.ObjectType decision_object_type = 16;
  if (this->decision_object_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->decision_object_type(), target);
  }

  // .apollo.decision.ObjectDecisionType object_decision = 17;
  if (this->has_object_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_object_decision(), deterministic, target);
  }

  // repeated .apollo.decision.ObjectDecisionType planning_object_decision = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->planning_object_decision_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->planning_object_decision(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.PlanningObstacle)
  return target;
}

size_t PlanningObstacle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.PlanningObstacle)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.perception.Point polygon_point = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->polygon_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygon_point(static_cast<int>(i)));
    }
  }

  // repeated .apollo.prediction.Trajectory prediction_trajectory = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->prediction_trajectory_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->prediction_trajectory(static_cast<int>(i)));
    }
  }

  // repeated .apollo.decision.ObjectDecisionType planning_object_decision = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->planning_object_decision_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->planning_object_decision(static_cast<int>(i)));
    }
  }

  // string decision_id = 2;
  if (this->decision_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->decision_id());
  }

  // .apollo.perception.Point position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .apollo.perception.Point velocity = 5;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  // .apollo.decision.ObjectDecisionType object_decision = 17;
  if (this->has_object_decision()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_decision_);
  }

  // double theta = 4;
  if (this->theta() != 0) {
    total_size += 1 + 8;
  }

  // double speed = 6;
  if (this->speed() != 0) {
    total_size += 1 + 8;
  }

  // double length = 7;
  if (this->length() != 0) {
    total_size += 1 + 8;
  }

  // int32 perception_id = 1;
  if (this->perception_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->perception_id());
  }

  // .apollo.perception.PerceptionObstacle.Type perception_object_type = 13;
  if (this->perception_object_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->perception_object_type());
  }

  // double width = 8;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double height = 9;
  if (this->height() != 0) {
    total_size += 1 + 8;
  }

  // double tracking_time = 11;
  if (this->tracking_time() != 0) {
    total_size += 1 + 8;
  }

  // double perception_timestamp = 12;
  if (this->perception_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // double prediction_timestamp = 14;
  if (this->prediction_timestamp() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.ObjectDecision.ObjectType decision_object_type = 16;
  if (this->decision_object_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->decision_object_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningObstacle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.PlanningObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningObstacle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanningObstacle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.PlanningObstacle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.PlanningObstacle)
    MergeFrom(*source);
  }
}

void PlanningObstacle::MergeFrom(const PlanningObstacle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.PlanningObstacle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygon_point_.MergeFrom(from.polygon_point_);
  prediction_trajectory_.MergeFrom(from.prediction_trajectory_);
  planning_object_decision_.MergeFrom(from.planning_object_decision_);
  if (from.decision_id().size() > 0) {

    decision_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decision_id_);
  }
  if (from.has_position()) {
    mutable_position()->::apollo::perception::Point::MergeFrom(from.position());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::apollo::perception::Point::MergeFrom(from.velocity());
  }
  if (from.has_object_decision()) {
    mutable_object_decision()->::apollo::decision::ObjectDecisionType::MergeFrom(from.object_decision());
  }
  if (from.theta() != 0) {
    set_theta(from.theta());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.perception_id() != 0) {
    set_perception_id(from.perception_id());
  }
  if (from.perception_object_type() != 0) {
    set_perception_object_type(from.perception_object_type());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.tracking_time() != 0) {
    set_tracking_time(from.tracking_time());
  }
  if (from.perception_timestamp() != 0) {
    set_perception_timestamp(from.perception_timestamp());
  }
  if (from.prediction_timestamp() != 0) {
    set_prediction_timestamp(from.prediction_timestamp());
  }
  if (from.decision_object_type() != 0) {
    set_decision_object_type(from.decision_object_type());
  }
}

void PlanningObstacle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.PlanningObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningObstacle::CopyFrom(const PlanningObstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.PlanningObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningObstacle::IsInitialized() const {
  return true;
}

void PlanningObstacle::Swap(PlanningObstacle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanningObstacle::InternalSwap(PlanningObstacle* other) {
  using std::swap;
  CastToBase(&polygon_point_)->InternalSwap(CastToBase(&other->polygon_point_));
  CastToBase(&prediction_trajectory_)->InternalSwap(CastToBase(&other->prediction_trajectory_));
  CastToBase(&planning_object_decision_)->InternalSwap(CastToBase(&other->planning_object_decision_));
  decision_id_.Swap(&other->decision_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(velocity_, other->velocity_);
  swap(object_decision_, other->object_decision_);
  swap(theta_, other->theta_);
  swap(speed_, other->speed_);
  swap(length_, other->length_);
  swap(perception_id_, other->perception_id_);
  swap(perception_object_type_, other->perception_object_type_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(tracking_time_, other->tracking_time_);
  swap(perception_timestamp_, other->perception_timestamp_);
  swap(prediction_timestamp_, other->prediction_timestamp_);
  swap(decision_object_type_, other->decision_object_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanningObstacle::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Debug_DebugMessage::InitAsDefaultInstance() {
  ::apollo::planning_internal::_Debug_DebugMessage_default_instance_.trace_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::apollo::planning_internal::_Debug_DebugMessage_default_instance_.info_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::apollo::planning_internal::_Debug_DebugMessage_default_instance_.warn_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::apollo::planning_internal::_Debug_DebugMessage_default_instance_.error_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::apollo::planning_internal::_Debug_DebugMessage_default_instance_.fatal_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debug_DebugMessage::kErrorCodeFieldNumber;
const int Debug_DebugMessage::kIdFieldNumber;
const int Debug_DebugMessage::kTraceFieldNumber;
const int Debug_DebugMessage::kInfoFieldNumber;
const int Debug_DebugMessage::kWarnFieldNumber;
const int Debug_DebugMessage::kErrorFieldNumber;
const int Debug_DebugMessage::kFatalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debug_DebugMessage::Debug_DebugMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_Debug_DebugMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.Debug.DebugMessage)
}
Debug_DebugMessage::Debug_DebugMessage(const Debug_DebugMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&error_code_, &from.error_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&error_code_)) + sizeof(id_));
  clear_has_debug_string();
  switch (from.debug_string_case()) {
    case kTrace: {
      set_trace(from.trace());
      break;
    }
    case kInfo: {
      set_info(from.info());
      break;
    }
    case kWarn: {
      set_warn(from.warn());
      break;
    }
    case kError: {
      set_error(from.error());
      break;
    }
    case kFatal: {
      set_fatal(from.fatal());
      break;
    }
    case DEBUG_STRING_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.Debug.DebugMessage)
}

void Debug_DebugMessage::SharedCtor() {
  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(id_));
  clear_has_debug_string();
}

Debug_DebugMessage::~Debug_DebugMessage() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.Debug.DebugMessage)
  SharedDtor();
}

void Debug_DebugMessage::SharedDtor() {
  if (has_debug_string()) {
    clear_debug_string();
  }
}

void Debug_DebugMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Debug_DebugMessage::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Debug_DebugMessage& Debug_DebugMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_Debug_DebugMessage.base);
  return *internal_default_instance();
}


void Debug_DebugMessage::clear_debug_string() {
// @@protoc_insertion_point(one_of_clear_start:apollo.planning_internal.Debug.DebugMessage)
  switch (debug_string_case()) {
    case kTrace: {
      debug_string_.trace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInfo: {
      debug_string_.info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kWarn: {
      debug_string_.warn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kError: {
      debug_string_.error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFatal: {
      debug_string_.fatal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case DEBUG_STRING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DEBUG_STRING_NOT_SET;
}


void Debug_DebugMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.Debug.DebugMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&error_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&error_code_)) + sizeof(id_));
  clear_debug_string();
  _internal_metadata_.Clear();
}

bool Debug_DebugMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.Debug.DebugMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::apollo::planning_internal::Debug_ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trace().data(), static_cast<int>(this->trace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.Debug.DebugMessage.trace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->info().data(), static_cast<int>(this->info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.Debug.DebugMessage.info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string warn = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_warn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->warn().data(), static_cast<int>(this->warn().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.Debug.DebugMessage.warn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.Debug.DebugMessage.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fatal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fatal()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fatal().data(), static_cast<int>(this->fatal().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.planning_internal.Debug.DebugMessage.fatal"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.Debug.DebugMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.Debug.DebugMessage)
  return false;
#undef DO_
}

void Debug_DebugMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.Debug.DebugMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // string trace = 3;
  if (has_trace()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace().data(), static_cast<int>(this->trace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.trace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->trace(), output);
  }

  // string info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->info(), output);
  }

  // string warn = 5;
  if (has_warn()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warn().data(), static_cast<int>(this->warn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.warn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->warn(), output);
  }

  // string error = 6;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->error(), output);
  }

  // string fatal = 7;
  if (has_fatal()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fatal().data(), static_cast<int>(this->fatal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.fatal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->fatal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.Debug.DebugMessage)
}

::google::protobuf::uint8* Debug_DebugMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.Debug.DebugMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // string trace = 3;
  if (has_trace()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trace().data(), static_cast<int>(this->trace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.trace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->trace(), target);
  }

  // string info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->info().data(), static_cast<int>(this->info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->info(), target);
  }

  // string warn = 5;
  if (has_warn()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->warn().data(), static_cast<int>(this->warn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.warn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->warn(), target);
  }

  // string error = 6;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->error(), target);
  }

  // string fatal = 7;
  if (has_fatal()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fatal().data(), static_cast<int>(this->fatal().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.planning_internal.Debug.DebugMessage.fatal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->fatal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.Debug.DebugMessage)
  return target;
}

size_t Debug_DebugMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.Debug.DebugMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  switch (debug_string_case()) {
    // string trace = 3;
    case kTrace: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trace());
      break;
    }
    // string info = 4;
    case kInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->info());
      break;
    }
    // string warn = 5;
    case kWarn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->warn());
      break;
    }
    // string error = 6;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
      break;
    }
    // string fatal = 7;
    case kFatal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fatal());
      break;
    }
    case DEBUG_STRING_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Debug_DebugMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.Debug.DebugMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Debug_DebugMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debug_DebugMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.Debug.DebugMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.Debug.DebugMessage)
    MergeFrom(*source);
  }
}

void Debug_DebugMessage::MergeFrom(const Debug_DebugMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.Debug.DebugMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  switch (from.debug_string_case()) {
    case kTrace: {
      set_trace(from.trace());
      break;
    }
    case kInfo: {
      set_info(from.info());
      break;
    }
    case kWarn: {
      set_warn(from.warn());
      break;
    }
    case kError: {
      set_error(from.error());
      break;
    }
    case kFatal: {
      set_fatal(from.fatal());
      break;
    }
    case DEBUG_STRING_NOT_SET: {
      break;
    }
  }
}

void Debug_DebugMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.Debug.DebugMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debug_DebugMessage::CopyFrom(const Debug_DebugMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.Debug.DebugMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug_DebugMessage::IsInitialized() const {
  return true;
}

void Debug_DebugMessage::Swap(Debug_DebugMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debug_DebugMessage::InternalSwap(Debug_DebugMessage* other) {
  using std::swap;
  swap(error_code_, other->error_code_);
  swap(id_, other->id_);
  swap(debug_string_, other->debug_string_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Debug_DebugMessage::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Debug::InitAsDefaultInstance() {
  ::apollo::planning_internal::_Debug_default_instance_._instance.get_mutable()->planning_data_ = const_cast< ::apollo::planning_internal::PlanningData*>(
      ::apollo::planning_internal::PlanningData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debug::kErrorCodeFieldNumber;
const int Debug::kPlanningDataFieldNumber;
const int Debug::kDebugMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debug::Debug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_Debug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.Debug)
}
Debug::Debug(const Debug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      debug_message_(from.debug_message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_planning_data()) {
    planning_data_ = new ::apollo::planning_internal::PlanningData(*from.planning_data_);
  } else {
    planning_data_ = NULL;
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.Debug)
}

void Debug::SharedCtor() {
  ::memset(&planning_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&planning_data_)) + sizeof(error_code_));
}

Debug::~Debug() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.Debug)
  SharedDtor();
}

void Debug::SharedDtor() {
  if (this != internal_default_instance()) delete planning_data_;
}

void Debug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Debug::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Debug& Debug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_Debug.base);
  return *internal_default_instance();
}


void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  debug_message_.Clear();
  if (GetArenaNoVirtual() == NULL && planning_data_ != NULL) {
    delete planning_data_;
  }
  planning_data_ = NULL;
  error_code_ = 0;
  _internal_metadata_.Clear();
}

bool Debug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.Debug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::apollo::planning_internal::Debug_ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.planning_internal.PlanningData planning_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_planning_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.Debug.DebugMessage debug_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_debug_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.Debug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.Debug)
  return false;
#undef DO_
}

void Debug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // .apollo.planning_internal.PlanningData planning_data = 2;
  if (this->has_planning_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_planning_data(), output);
  }

  // repeated .apollo.planning_internal.Debug.DebugMessage debug_message = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->debug_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->debug_message(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.Debug)
}

::google::protobuf::uint8* Debug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // .apollo.planning_internal.PlanningData planning_data = 2;
  if (this->has_planning_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_planning_data(), deterministic, target);
  }

  // repeated .apollo.planning_internal.Debug.DebugMessage debug_message = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->debug_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->debug_message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.Debug)
  return target;
}

size_t Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.Debug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.planning_internal.Debug.DebugMessage debug_message = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->debug_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->debug_message(static_cast<int>(i)));
    }
  }

  // .apollo.planning_internal.PlanningData planning_data = 2;
  if (this->has_planning_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *planning_data_);
  }

  // .apollo.planning_internal.Debug.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Debug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  const Debug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.Debug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.Debug)
    MergeFrom(*source);
  }
}

void Debug::MergeFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  debug_message_.MergeFrom(from.debug_message_);
  if (from.has_planning_data()) {
    mutable_planning_data()->::apollo::planning_internal::PlanningData::MergeFrom(from.planning_data());
  }
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
}

void Debug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug::IsInitialized() const {
  return true;
}

void Debug::Swap(Debug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debug::InternalSwap(Debug* other) {
  using std::swap;
  CastToBase(&debug_message_)->InternalSwap(CastToBase(&other->debug_message_));
  swap(planning_data_, other->planning_data_);
  swap(error_code_, other->error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Debug::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlanningData::InitAsDefaultInstance() {
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->init_status_ = const_cast< ::apollo::localization::Pose*>(
      ::apollo::localization::Pose::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->main_decision_ = const_cast< ::apollo::decision::MainDecision*>(
      ::apollo::decision::MainDecision::internal_default_instance());
  ::apollo::planning_internal::_PlanningData_default_instance_._instance.get_mutable()->light_signal_ = const_cast< ::apollo::decision::LightSignal*>(
      ::apollo::decision::LightSignal::internal_default_instance());
}
void PlanningData::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void PlanningData::clear_init_status() {
  if (GetArenaNoVirtual() == NULL && init_status_ != NULL) {
    delete init_status_;
  }
  init_status_ = NULL;
}
void PlanningData::clear_main_decision() {
  if (GetArenaNoVirtual() == NULL && main_decision_ != NULL) {
    delete main_decision_;
  }
  main_decision_ = NULL;
}
void PlanningData::clear_light_signal() {
  if (GetArenaNoVirtual() == NULL && light_signal_ != NULL) {
    delete light_signal_;
  }
  light_signal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlanningData::kHeaderFieldNumber;
const int PlanningData::kInitStatusFieldNumber;
const int PlanningData::kMainDecisionFieldNumber;
const int PlanningData::kPlanningObstacleFieldNumber;
const int PlanningData::kLightSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlanningData::PlanningData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.planning_internal.PlanningData)
}
PlanningData::PlanningData(const PlanningData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      planning_obstacle_(from.planning_obstacle_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_init_status()) {
    init_status_ = new ::apollo::localization::Pose(*from.init_status_);
  } else {
    init_status_ = NULL;
  }
  if (from.has_main_decision()) {
    main_decision_ = new ::apollo::decision::MainDecision(*from.main_decision_);
  } else {
    main_decision_ = NULL;
  }
  if (from.has_light_signal()) {
    light_signal_ = new ::apollo::decision::LightSignal(*from.light_signal_);
  } else {
    light_signal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.planning_internal.PlanningData)
}

void PlanningData::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&light_signal_) -
      reinterpret_cast<char*>(&header_)) + sizeof(light_signal_));
}

PlanningData::~PlanningData() {
  // @@protoc_insertion_point(destructor:apollo.planning_internal.PlanningData)
  SharedDtor();
}

void PlanningData::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete init_status_;
  if (this != internal_default_instance()) delete main_decision_;
  if (this != internal_default_instance()) delete light_signal_;
}

void PlanningData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlanningData::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlanningData& PlanningData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::scc_info_PlanningData.base);
  return *internal_default_instance();
}


void PlanningData::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  planning_obstacle_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && init_status_ != NULL) {
    delete init_status_;
  }
  init_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && main_decision_ != NULL) {
    delete main_decision_;
  }
  main_decision_ = NULL;
  if (GetArenaNoVirtual() == NULL && light_signal_ != NULL) {
    delete light_signal_;
  }
  light_signal_ = NULL;
  _internal_metadata_.Clear();
}

bool PlanningData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.planning_internal.PlanningData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.localization.Pose init_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainDecision main_decision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_main_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.planning_internal.PlanningObstacle planning_obstacle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_planning_obstacle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.LightSignal light_signal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_light_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.planning_internal.PlanningData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.planning_internal.PlanningData)
  return false;
#undef DO_
}

void PlanningData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .apollo.localization.Pose init_status = 2;
  if (this->has_init_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_init_status(), output);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_main_decision(), output);
  }

  // repeated .apollo.planning_internal.PlanningObstacle planning_obstacle = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->planning_obstacle_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->planning_obstacle(static_cast<int>(i)),
      output);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_light_signal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.planning_internal.PlanningData)
}

::google::protobuf::uint8* PlanningData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.planning_internal.PlanningData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .apollo.localization.Pose init_status = 2;
  if (this->has_init_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_init_status(), deterministic, target);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_main_decision(), deterministic, target);
  }

  // repeated .apollo.planning_internal.PlanningObstacle planning_obstacle = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->planning_obstacle_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->planning_obstacle(static_cast<int>(i)), deterministic, target);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_light_signal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.planning_internal.PlanningData)
  return target;
}

size_t PlanningData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.planning_internal.PlanningData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.planning_internal.PlanningObstacle planning_obstacle = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->planning_obstacle_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->planning_obstacle(static_cast<int>(i)));
    }
  }

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .apollo.localization.Pose init_status = 2;
  if (this->has_init_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *init_status_);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *main_decision_);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *light_signal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlanningData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlanningData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlanningData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.planning_internal.PlanningData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.planning_internal.PlanningData)
    MergeFrom(*source);
  }
}

void PlanningData::MergeFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.planning_internal.PlanningData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  planning_obstacle_.MergeFrom(from.planning_obstacle_);
  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
  if (from.has_init_status()) {
    mutable_init_status()->::apollo::localization::Pose::MergeFrom(from.init_status());
  }
  if (from.has_main_decision()) {
    mutable_main_decision()->::apollo::decision::MainDecision::MergeFrom(from.main_decision());
  }
  if (from.has_light_signal()) {
    mutable_light_signal()->::apollo::decision::LightSignal::MergeFrom(from.light_signal());
  }
}

void PlanningData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlanningData::CopyFrom(const PlanningData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.planning_internal.PlanningData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlanningData::IsInitialized() const {
  return true;
}

void PlanningData::Swap(PlanningData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlanningData::InternalSwap(PlanningData* other) {
  using std::swap;
  CastToBase(&planning_obstacle_)->InternalSwap(CastToBase(&other->planning_obstacle_));
  swap(header_, other->header_);
  swap(init_status_, other->init_status_);
  swap(main_decision_, other->main_decision_);
  swap(light_signal_, other->light_signal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlanningData::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fplanning_2fplanning_5finternal_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace planning_internal
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::PlanningObstacle* Arena::CreateMaybeMessage< ::apollo::planning_internal::PlanningObstacle >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::PlanningObstacle >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::Debug_DebugMessage* Arena::CreateMaybeMessage< ::apollo::planning_internal::Debug_DebugMessage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::Debug_DebugMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::Debug* Arena::CreateMaybeMessage< ::apollo::planning_internal::Debug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::Debug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::planning_internal::PlanningData* Arena::CreateMaybeMessage< ::apollo::planning_internal::PlanningData >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::planning_internal::PlanningData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
