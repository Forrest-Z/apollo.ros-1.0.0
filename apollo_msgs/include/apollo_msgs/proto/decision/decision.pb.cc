// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/decision/decision.proto

#include "apollo_msgs/proto/decision/decision.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_apollo_5fmsgs_2fproto_2fcanbus_2fchassis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcanbus_2fchassis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Signal;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcanbus_2fchassis_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3D;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointENU;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Header;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopCruiseToStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopHardBrake;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LatencyStats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LightSignal;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainCruise;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainMissionComplete;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MainNotReady;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModuleDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectAvoid;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ObjectIgnore;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StopLine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TargetLane;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MainParking;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecisions;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectNudge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ObjectSidePass;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Stats;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MainChangeLane;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MainEmergencyStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MainStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MasterVehicleDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDebug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectFollow;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectOvertake;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectStop;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ObjectYield;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Debug;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_MainDecision;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto
namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PredictionObstacle;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto
namespace apollo {
namespace decision {
class RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Range>
      _instance;
} _Range_default_instance_;
class TargetLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetLane>
      _instance;
} _TargetLane_default_instance_;
class ObjectIgnoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectIgnore>
      _instance;
} _ObjectIgnore_default_instance_;
class ObjectStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectStop>
      _instance;
} _ObjectStop_default_instance_;
class ObjectNudgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectNudge>
      _instance;
} _ObjectNudge_default_instance_;
class ObjectYieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectYield>
      _instance;
} _ObjectYield_default_instance_;
class ObjectFollowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectFollow>
      _instance;
} _ObjectFollow_default_instance_;
class ObjectOvertakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectOvertake>
      _instance;
} _ObjectOvertake_default_instance_;
class ObjectSidePassDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectSidePass>
      _instance;
} _ObjectSidePass_default_instance_;
class ObjectAvoidDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectAvoid>
      _instance;
} _ObjectAvoid_default_instance_;
class ObjectDecisionTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecisionType>
      _instance;
  const ::apollo::decision::ObjectIgnore* ignore_;
  const ::apollo::decision::ObjectStop* stop_;
  const ::apollo::decision::ObjectFollow* follow_;
  const ::apollo::decision::ObjectYield* yield_;
  const ::apollo::decision::ObjectOvertake* overtake_;
  const ::apollo::decision::ObjectNudge* nudge_;
  const ::apollo::decision::ObjectSidePass* sidepass_;
  const ::apollo::decision::ObjectAvoid* avoid_;
} _ObjectDecisionType_default_instance_;
class ObjectDecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecision>
      _instance;
} _ObjectDecision_default_instance_;
class ObjectDecisionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDecisions>
      _instance;
} _ObjectDecisions_default_instance_;
class StopLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StopLine>
      _instance;
} _StopLine_default_instance_;
class MainStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainStop>
      _instance;
} _MainStop_default_instance_;
class EmergencyStopHardBrakeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmergencyStopHardBrake>
      _instance;
} _EmergencyStopHardBrake_default_instance_;
class EmergencyStopCruiseToStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmergencyStopCruiseToStop>
      _instance;
} _EmergencyStopCruiseToStop_default_instance_;
class MainEmergencyStopDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainEmergencyStop>
      _instance;
  const ::apollo::decision::EmergencyStopHardBrake* hard_brake_;
  const ::apollo::decision::EmergencyStopCruiseToStop* cruise_to_stop_;
} _MainEmergencyStop_default_instance_;
class MainCruiseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainCruise>
      _instance;
} _MainCruise_default_instance_;
class MainChangeLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainChangeLane>
      _instance;
} _MainChangeLane_default_instance_;
class MainMissionCompleteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainMissionComplete>
      _instance;
} _MainMissionComplete_default_instance_;
class MainNotReadyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainNotReady>
      _instance;
} _MainNotReady_default_instance_;
class MainParkingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainParking>
      _instance;
} _MainParking_default_instance_;
class MainDecisionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainDecision>
      _instance;
  const ::apollo::decision::MainCruise* cruise_;
  const ::apollo::decision::MainStop* stop_;
  const ::apollo::decision::MainEmergencyStop* estop_;
  const ::apollo::decision::MainChangeLane* change_lane_;
  const ::apollo::decision::MainMissionComplete* mission_complete_;
  const ::apollo::decision::MainNotReady* not_ready_;
  const ::apollo::decision::MainParking* parking_;
} _MainDecision_default_instance_;
class MasterVehicleDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MasterVehicleDebug>
      _instance;
} _MasterVehicleDebug_default_instance_;
class ObjectDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectDebug>
      _instance;
} _ObjectDebug_default_instance_;
class LatencyStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LatencyStats>
      _instance;
} _LatencyStats_default_instance_;
class StatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stats>
      _instance;
} _Stats_default_instance_;
class ModuleDebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModuleDebug>
      _instance;
} _ModuleDebug_default_instance_;
class DebugDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Debug>
      _instance;
} _Debug_default_instance_;
class LightSignalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LightSignal>
      _instance;
} _LightSignal_default_instance_;
class DecisionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DecisionResult>
      _instance;
} _DecisionResult_default_instance_;
}  // namespace decision
}  // namespace apollo
namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto {
static void InitDefaultsRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_Range_default_instance_;
    new (ptr) ::apollo::decision::Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRange}, {}};

static void InitDefaultsTargetLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_TargetLane_default_instance_;
    new (ptr) ::apollo::decision::TargetLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::TargetLane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TargetLane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTargetLane}, {}};

static void InitDefaultsObjectIgnore() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectIgnore_default_instance_;
    new (ptr) ::apollo::decision::ObjectIgnore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectIgnore::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectIgnore =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectIgnore}, {}};

static void InitDefaultsObjectStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectStop_default_instance_;
    new (ptr) ::apollo::decision::ObjectStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectStop}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectNudge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectNudge_default_instance_;
    new (ptr) ::apollo::decision::ObjectNudge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectNudge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectNudge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectNudge}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,}};

static void InitDefaultsObjectYield() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectYield_default_instance_;
    new (ptr) ::apollo::decision::ObjectYield();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectYield::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectYield =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectYield}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectFollow() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectFollow_default_instance_;
    new (ptr) ::apollo::decision::ObjectFollow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectFollow::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectFollow =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectFollow}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectOvertake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectOvertake_default_instance_;
    new (ptr) ::apollo::decision::ObjectOvertake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectOvertake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectOvertake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectOvertake}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsObjectSidePass() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectSidePass_default_instance_;
    new (ptr) ::apollo::decision::ObjectSidePass();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectSidePass::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectSidePass =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectSidePass}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,}};

static void InitDefaultsObjectAvoid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectAvoid_default_instance_;
    new (ptr) ::apollo::decision::ObjectAvoid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectAvoid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectAvoid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectAvoid}, {}};

static void InitDefaultsObjectDecisionType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectDecisionType_default_instance_;
    new (ptr) ::apollo::decision::ObjectDecisionType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectDecisionType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_ObjectDecisionType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsObjectDecisionType}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectIgnore.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectStop.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectFollow.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectYield.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectOvertake.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectNudge.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectSidePass.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectAvoid.base,}};

static void InitDefaultsObjectDecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectDecision_default_instance_;
    new (ptr) ::apollo::decision::ObjectDecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectDecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectDecision}, {
      &protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::scc_info_PredictionObstacle.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisionType.base,}};

static void InitDefaultsObjectDecisions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectDecisions_default_instance_;
    new (ptr) ::apollo::decision::ObjectDecisions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectDecisions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ObjectDecisions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsObjectDecisions}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecision.base,}};

static void InitDefaultsStopLine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_StopLine_default_instance_;
    new (ptr) ::apollo::decision::StopLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::StopLine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StopLine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStopLine}, {}};

static void InitDefaultsMainStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainStop_default_instance_;
    new (ptr) ::apollo::decision::MainStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MainStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMainStop}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_StopLine.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsEmergencyStopHardBrake() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_EmergencyStopHardBrake_default_instance_;
    new (ptr) ::apollo::decision::EmergencyStopHardBrake();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::EmergencyStopHardBrake::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopHardBrake =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmergencyStopHardBrake}, {}};

static void InitDefaultsEmergencyStopCruiseToStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_EmergencyStopCruiseToStop_default_instance_;
    new (ptr) ::apollo::decision::EmergencyStopCruiseToStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::EmergencyStopCruiseToStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmergencyStopCruiseToStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmergencyStopCruiseToStop}, {}};

static void InitDefaultsMainEmergencyStop() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainEmergencyStop_default_instance_;
    new (ptr) ::apollo::decision::MainEmergencyStop();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainEmergencyStop::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MainEmergencyStop =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMainEmergencyStop}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base,}};

static void InitDefaultsMainCruise() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainCruise_default_instance_;
    new (ptr) ::apollo::decision::MainCruise();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainCruise::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainCruise =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainCruise}, {}};

static void InitDefaultsMainChangeLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainChangeLane_default_instance_;
    new (ptr) ::apollo::decision::MainChangeLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainChangeLane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MainChangeLane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMainChangeLane}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_TargetLane.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainStop.base,}};

static void InitDefaultsMainMissionComplete() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainMissionComplete_default_instance_;
    new (ptr) ::apollo::decision::MainMissionComplete();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainMissionComplete::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainMissionComplete =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainMissionComplete}, {}};

static void InitDefaultsMainNotReady() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainNotReady_default_instance_;
    new (ptr) ::apollo::decision::MainNotReady();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainNotReady::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MainNotReady =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMainNotReady}, {}};

static void InitDefaultsMainParking() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainParking_default_instance_;
    new (ptr) ::apollo::decision::MainParking();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainParking::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MainParking =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMainParking}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,}};

static void InitDefaultsMainDecision() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MainDecision_default_instance_;
    new (ptr) ::apollo::decision::MainDecision();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MainDecision::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_MainDecision =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsMainDecision}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainCruise.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainStop.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainEmergencyStop.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainChangeLane.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainMissionComplete.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainNotReady.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainParking.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_TargetLane.base,}};

static void InitDefaultsMasterVehicleDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_MasterVehicleDebug_default_instance_;
    new (ptr) ::apollo::decision::MasterVehicleDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::MasterVehicleDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MasterVehicleDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMasterVehicleDebug}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_PointENU.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,}};

static void InitDefaultsObjectDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ObjectDebug_default_instance_;
    new (ptr) ::apollo::decision::ObjectDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ObjectDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ObjectDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsObjectDebug}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::scc_info_Point3D.base,}};

static void InitDefaultsLatencyStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_LatencyStats_default_instance_;
    new (ptr) ::apollo::decision::LatencyStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::LatencyStats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LatencyStats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLatencyStats}, {}};

static void InitDefaultsStats() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_Stats_default_instance_;
    new (ptr) ::apollo::decision::Stats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::Stats::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Stats =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStats}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LatencyStats.base,}};

static void InitDefaultsModuleDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_ModuleDebug_default_instance_;
    new (ptr) ::apollo::decision::ModuleDebug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::ModuleDebug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModuleDebug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModuleDebug}, {}};

static void InitDefaultsDebug() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_Debug_default_instance_;
    new (ptr) ::apollo::decision::Debug();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::Debug::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Debug =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsDebug}, {
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MasterVehicleDebug.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainDecision.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDebug.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ModuleDebug.base,}};

static void InitDefaultsLightSignal() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_LightSignal_default_instance_;
    new (ptr) ::apollo::decision::LightSignal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::LightSignal::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LightSignal =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLightSignal}, {}};

static void InitDefaultsDecisionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::decision::_DecisionResult_default_instance_;
    new (ptr) ::apollo::decision::DecisionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::decision::DecisionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_DecisionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsDecisionResult}, {
      &protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::scc_info_Header.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisions.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainDecision.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Debug.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Stats.base,
      &protobuf_apollo_5fmsgs_2fproto_2fcanbus_2fchassis_2eproto::scc_info_Signal.base,
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LightSignal.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargetLane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectIgnore.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectNudge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectYield.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectFollow.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectOvertake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectSidePass.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectAvoid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecisionType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDecisions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StopLine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmergencyStopHardBrake.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmergencyStopCruiseToStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainEmergencyStop.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainCruise.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainChangeLane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainMissionComplete.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainNotReady.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainParking.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MainDecision.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MasterVehicleDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LatencyStats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Stats.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModuleDebug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Debug.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LightSignal.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DecisionResult.base);
}

::google::protobuf::Metadata file_level_metadata[32];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Range, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Range, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::TargetLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::TargetLane, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::TargetLane, start_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::TargetLane, end_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::TargetLane, speed_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectIgnore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectStop, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectStop, preferred_distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectStop, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectStop, stop_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectNudge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectNudge, distance_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectNudge, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectNudge, preferred_distance_l_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectYield, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectYield, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectYield, preferred_distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectYield, yield_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectFollow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectFollow, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectFollow, preferred_distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectFollow, follow_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectOvertake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectOvertake, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectOvertake, preferred_distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectOvertake, overtake_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectSidePass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectSidePass, distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectSidePass, preferred_distance_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectSidePass, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectAvoid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecisionType, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecisionType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, ignore_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, stop_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, follow_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, yield_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, overtake_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, nudge_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, sidepass_),
  offsetof(::apollo::decision::ObjectDecisionTypeDefaultTypeInternal, avoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecisionType, object_tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, prediction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecision, object_decision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecisions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDecisions, decision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::StopLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::StopLine, lane_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::StopLine, distance_s_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, enforced_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, preferred_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, preferred_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, reason_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, stop_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainStop, stop_heading_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::EmergencyStopHardBrake, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::EmergencyStopCruiseToStop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainEmergencyStop, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainEmergencyStop, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainEmergencyStop, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainEmergencyStop, reason_code_),
  offsetof(::apollo::decision::MainEmergencyStopDefaultTypeInternal, hard_brake_),
  offsetof(::apollo::decision::MainEmergencyStopDefaultTypeInternal, cruise_to_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainEmergencyStop, task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainCruise, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainChangeLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainChangeLane, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainChangeLane, default_lane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainChangeLane, default_lane_stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainChangeLane, target_lane_stop_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainMissionComplete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainNotReady, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainNotReady, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainParking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainParking, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainParking, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainParking, stop_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainParking, parking_polygon_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainDecision, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainDecision, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, cruise_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, stop_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, estop_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, change_lane_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, mission_complete_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, not_ready_),
  offsetof(::apollo::decision::MainDecisionDefaultTypeInternal, parking_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainDecision, target_lane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MainDecision, task_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, current_lane_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, lane_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, lane_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, route_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, route_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, heading_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, heading_acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, route_s_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::MasterVehicleDebug, route_l_range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, path_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, route_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, route_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, on_route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, lane_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, lane_s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, on_lane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, path_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ObjectDebug, st_region_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, total_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, sensor_read_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, adc_prepare_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, obj_prepare_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, world_rule_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, st_graph_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, gateway_receive_delay_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, perception_receive_delay_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, prediction_receive_delay_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, signal_receive_delay_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, perception_interval_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LatencyStats, prediction_interval_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Stats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Stats, latency_stats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ModuleDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ModuleDebug, gateway_sequence_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ModuleDebug, perception_sequence_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ModuleDebug, prediction_sequence_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::ModuleDebug, signal_sequence_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, master_vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, original_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, map_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, decision_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::Debug, module_debug_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LightSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LightSignal, emergency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::LightSignal, turn_signal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, object_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, main_decision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, debug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, signal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::apollo::decision::DecisionResult, light_signal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apollo::decision::Range)},
  { 7, -1, sizeof(::apollo::decision::TargetLane)},
  { 16, -1, sizeof(::apollo::decision::ObjectIgnore)},
  { 21, -1, sizeof(::apollo::decision::ObjectStop)},
  { 30, -1, sizeof(::apollo::decision::ObjectNudge)},
  { 38, -1, sizeof(::apollo::decision::ObjectYield)},
  { 46, -1, sizeof(::apollo::decision::ObjectFollow)},
  { 54, -1, sizeof(::apollo::decision::ObjectOvertake)},
  { 62, -1, sizeof(::apollo::decision::ObjectSidePass)},
  { 70, -1, sizeof(::apollo::decision::ObjectAvoid)},
  { 75, -1, sizeof(::apollo::decision::ObjectDecisionType)},
  { 89, -1, sizeof(::apollo::decision::ObjectDecision)},
  { 99, -1, sizeof(::apollo::decision::ObjectDecisions)},
  { 105, -1, sizeof(::apollo::decision::StopLine)},
  { 112, -1, sizeof(::apollo::decision::MainStop)},
  { 124, -1, sizeof(::apollo::decision::EmergencyStopHardBrake)},
  { 129, -1, sizeof(::apollo::decision::EmergencyStopCruiseToStop)},
  { 134, -1, sizeof(::apollo::decision::MainEmergencyStop)},
  { 144, -1, sizeof(::apollo::decision::MainCruise)},
  { 149, -1, sizeof(::apollo::decision::MainChangeLane)},
  { 158, -1, sizeof(::apollo::decision::MainMissionComplete)},
  { 163, -1, sizeof(::apollo::decision::MainNotReady)},
  { 169, -1, sizeof(::apollo::decision::MainParking)},
  { 178, -1, sizeof(::apollo::decision::MainDecision)},
  { 192, -1, sizeof(::apollo::decision::MasterVehicleDebug)},
  { 208, -1, sizeof(::apollo::decision::ObjectDebug)},
  { 223, -1, sizeof(::apollo::decision::LatencyStats)},
  { 240, -1, sizeof(::apollo::decision::Stats)},
  { 246, -1, sizeof(::apollo::decision::ModuleDebug)},
  { 255, -1, sizeof(::apollo::decision::Debug)},
  { 266, -1, sizeof(::apollo::decision::LightSignal)},
  { 273, -1, sizeof(::apollo::decision::DecisionResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_TargetLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectIgnore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectNudge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectYield_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectFollow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectOvertake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectSidePass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectAvoid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectDecisionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectDecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectDecisions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_StopLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_EmergencyStopHardBrake_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_EmergencyStopCruiseToStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainEmergencyStop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainCruise_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainChangeLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainMissionComplete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainNotReady_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainParking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MainDecision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_MasterVehicleDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ObjectDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_LatencyStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_Stats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_ModuleDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_Debug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_LightSignal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::apollo::decision::_DecisionResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "apollo_msgs/proto/decision/decision.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n)apollo_msgs/proto/decision/decision.pr"
      "oto\022\017apollo.decision\032%apollo_msgs/proto/"
      "common/header.proto\032\'apollo_msgs/proto/c"
      "ommon/geometry.proto\0326apollo_msgs/proto/"
      "prediction/prediction_obstacle.proto\032&ap"
      "ollo_msgs/proto/canbus/chassis.proto\"#\n\005"
      "Range\022\r\n\005start\030\001 \001(\001\022\013\n\003end\030\002 \001(\001\"M\n\nTar"
      "getLane\022\n\n\002id\030\001 \001(\t\022\017\n\007start_s\030\002 \001(\001\022\r\n\005"
      "end_s\030\003 \001(\001\022\023\n\013speed_limit\030\004 \001(\001\"\016\n\014Obje"
      "ctIgnore\"\271\001\n\nObjectStop\022\022\n\ndistance_s\030\001 "
      "\001(\001\0224\n\024preferred_distance_s\030\002 \001(\0132\026.apol"
      "lo.decision.Range\0224\n\013reason_code\030\003 \001(\0162\037"
      ".apollo.decision.StopReasonCode\022+\n\nstop_"
      "point\030\004 \001(\0132\027.apollo.common.PointENU\"\261\001\n"
      "\013ObjectNudge\022\022\n\ndistance_l\030\001 \001(\001\022/\n\004type"
      "\030\002 \001(\0162!.apollo.decision.ObjectNudge.Typ"
      "e\0224\n\024preferred_distance_l\030\003 \001(\0132\026.apollo"
      ".decision.Range\"\'\n\004Type\022\016\n\nLEFT_NUDGE\020\000\022"
      "\017\n\013RIGHT_NUDGE\020\001\"\205\001\n\013ObjectYield\022\022\n\ndist"
      "ance_s\030\001 \001(\001\0224\n\024preferred_distance_s\030\002 \001"
      "(\0132\026.apollo.decision.Range\022,\n\013yield_poin"
      "t\030\003 \001(\0132\027.apollo.common.PointENU\"\207\001\n\014Obj"
      "ectFollow\022\022\n\ndistance_s\030\001 \001(\001\0224\n\024preferr"
      "ed_distance_s\030\002 \001(\0132\026.apollo.decision.Ra"
      "nge\022-\n\014follow_point\030\003 \001(\0132\027.apollo.commo"
      "n.PointENU\"\213\001\n\016ObjectOvertake\022\022\n\ndistanc"
      "e_s\030\001 \001(\001\0224\n\024preferred_distance_s\030\002 \001(\0132"
      "\026.apollo.decision.Range\022/\n\016overtake_poin"
      "t\030\003 \001(\0132\027.apollo.common.PointENU\"\254\001\n\016Obj"
      "ectSidePass\022\022\n\ndistance_s\030\001 \001(\001\0224\n\024prefe"
      "rred_distance_s\030\002 \001(\0132\026.apollo.decision."
      "Range\0222\n\004type\030\003 \001(\0162$.apollo.decision.Ob"
      "jectSidePass.Type\"\034\n\004Type\022\n\n\006FOLLOW\020\000\022\010\n"
      "\004LEAD\020\001\"\r\n\013ObjectAvoid\"\250\003\n\022ObjectDecisio"
      "nType\022/\n\006ignore\030\001 \001(\0132\035.apollo.decision."
      "ObjectIgnoreH\000\022+\n\004stop\030\002 \001(\0132\033.apollo.de"
      "cision.ObjectStopH\000\022/\n\006follow\030\003 \001(\0132\035.ap"
      "ollo.decision.ObjectFollowH\000\022-\n\005yield\030\004 "
      "\001(\0132\034.apollo.decision.ObjectYieldH\000\0223\n\010o"
      "vertake\030\005 \001(\0132\037.apollo.decision.ObjectOv"
      "ertakeH\000\022-\n\005nudge\030\006 \001(\0132\034.apollo.decisio"
      "n.ObjectNudgeH\000\0223\n\010sidepass\030\007 \001(\0132\037.apol"
      "lo.decision.ObjectSidePassH\000\022-\n\005avoid\030\010 "
      "\001(\0132\034.apollo.decision.ObjectAvoidH\000B\014\n\no"
      "bject_tag\"\301\002\n\016ObjectDecision\0229\n\npredicti"
      "on\030\001 \001(\0132%.apollo.prediction.PredictionO"
      "bstacle\022\n\n\002id\030\002 \001(\t\0228\n\004type\030\003 \001(\0162*.apol"
      "lo.decision.ObjectDecision.ObjectType\0225\n"
      "\010decision\030\004 \001(\0132#.apollo.decision.Object"
      "DecisionType\022<\n\017object_decision\030\005 \003(\0132#."
      "apollo.decision.ObjectDecisionType\"9\n\nOb"
      "jectType\022\016\n\nPREDICTION\020\000\022\016\n\nPERCEPTION\020\001"
      "\022\013\n\007VIRTUAL\020\002\"D\n\017ObjectDecisions\0221\n\010deci"
      "sion\030\001 \003(\0132\037.apollo.decision.ObjectDecis"
      "ion\"/\n\010StopLine\022\017\n\007lane_id\030\001 \001(\t\022\022\n\ndist"
      "ance_s\030\002 \001(\001\"\253\002\n\010MainStop\0220\n\renforced_li"
      "ne\030\001 \001(\0132\031.apollo.decision.StopLine\0222\n\017p"
      "referred_start\030\002 \001(\0132\031.apollo.decision.S"
      "topLine\0220\n\rpreferred_end\030\003 \001(\0132\031.apollo."
      "decision.StopLine\022\016\n\006reason\030\004 \001(\t\0224\n\013rea"
      "son_code\030\005 \001(\0162\037.apollo.decision.StopRea"
      "sonCode\022+\n\nstop_point\030\006 \001(\0132\027.apollo.com"
      "mon.PointENU\022\024\n\014stop_heading\030\007 \001(\001\"\030\n\026Em"
      "ergencyStopHardBrake\"\033\n\031EmergencyStopCru"
      "iseToStop\"\237\003\n\021MainEmergencyStop\022\016\n\006reaso"
      "n\030\001 \001(\t\022B\n\013reason_code\030\002 \001(\0162-.apollo.de"
      "cision.MainEmergencyStop.ReasonCode\022=\n\nh"
      "ard_brake\030\003 \001(\0132\'.apollo.decision.Emerge"
      "ncyStopHardBrakeH\000\022D\n\016cruise_to_stop\030\004 \001"
      "(\0132*.apollo.decision.EmergencyStopCruise"
      "ToStopH\000\"\250\001\n\nReasonCode\022\035\n\031ESTOP_REASON_"
      "INTERNAL_ERR\020\000\022\032\n\026ESTOP_REASON_COLLISION"
      "\020\001\022\035\n\031ESTOP_REASON_ST_FIND_PATH\020\002\022!\n\035EST"
      "OP_REASON_ST_MAKE_DECISION\020\003\022\035\n\031ESTOP_RE"
      "ASON_SENSOR_ERROR\020\004B\006\n\004task\"\014\n\nMainCruis"
      "e\"\377\001\n\016MainChangeLane\0222\n\004type\030\001 \001(\0162$.apo"
      "llo.decision.MainChangeLane.Type\0221\n\014defa"
      "ult_lane\030\002 \003(\0132\033.apollo.decision.TargetL"
      "ane\0224\n\021default_lane_stop\030\003 \001(\0132\031.apollo."
      "decision.MainStop\0223\n\020target_lane_stop\030\004 "
      "\001(\0132\031.apollo.decision.MainStop\"\033\n\004Type\022\010"
      "\n\004LEFT\020\000\022\t\n\005RIGHT\020\001\"\025\n\023MainMissionComple"
      "te\"\036\n\014MainNotReady\022\016\n\006reason\030\001 \001(\t\"\340\001\n\013M"
      "ainParking\022/\n\004type\030\001 \001(\0162!.apollo.decisi"
      "on.MainParking.Type\022\017\n\007heading\030\002 \001(\001\022+\n\n"
      "stop_point\030\003 \001(\0132\027.apollo.common.PointEN"
      "U\0220\n\017parking_polygon\030\004 \003(\0132\027.apollo.comm"
      "on.PointENU\"0\n\004Type\022\023\n\017FORWARD_PARKING\020\000"
      "\022\023\n\017REVERSE_PARKING\020\001\"\266\003\n\014MainDecision\022-"
      "\n\006cruise\030\001 \001(\0132\033.apollo.decision.MainCru"
      "iseH\000\022)\n\004stop\030\002 \001(\0132\031.apollo.decision.Ma"
      "inStopH\000\0223\n\005estop\030\003 \001(\0132\".apollo.decisio"
      "n.MainEmergencyStopH\000\0226\n\013change_lane\030\004 \001"
      "(\0132\037.apollo.decision.MainChangeLaneH\000\022@\n"
      "\020mission_complete\030\006 \001(\0132$.apollo.decisio"
      "n.MainMissionCompleteH\000\0222\n\tnot_ready\030\007 \001"
      "(\0132\035.apollo.decision.MainNotReadyH\000\022/\n\007p"
      "arking\030\010 \001(\0132\034.apollo.decision.MainParki"
      "ngH\000\0220\n\013target_lane\030\005 \003(\0132\033.apollo.decis"
      "ion.TargetLaneB\006\n\004task\"\276\002\n\022MasterVehicle"
      "Debug\022)\n\010position\030\001 \001(\0132\027.apollo.common."
      "PointENU\022\027\n\017current_lane_id\030\002 \001(\t\022\016\n\006lan"
      "e_s\030\003 \001(\001\022\016\n\006lane_l\030\004 \001(\001\022\017\n\007route_s\030\005 \001"
      "(\001\022\017\n\007route_l\030\006 \001(\001\022\017\n\007heading\030\007 \001(\001\022\025\n\r"
      "heading_speed\030\010 \001(\001\022\034\n\024heading_accelerat"
      "ion\030\t \001(\001\022-\n\rroute_s_range\030\n \001(\0132\026.apoll"
      "o.decision.Range\022-\n\rroute_l_range\030\013 \001(\0132"
      "\026.apollo.decision.Range\"\377\001\n\013ObjectDebug\022"
      "\n\n\002id\030\001 \001(\t\022\017\n\007path_id\030\002 \001(\t\022\'\n\007route_s\030"
      "\003 \001(\0132\026.apollo.decision.Range\022\'\n\007route_l"
      "\030\004 \001(\0132\026.apollo.decision.Range\022\020\n\010on_rou"
      "te\030\005 \001(\010\022\017\n\007lane_id\030\006 \001(\t\022\016\n\006lane_s\030\007 \001("
      "\001\022\017\n\007on_lane\030\010 \001(\010\022\022\n\npath_speed\030\t \001(\001\022)"
      "\n\tst_region\030\n \003(\0132\026.apollo.common.Point3"
      "D\"\377\002\n\014LatencyStats\022\025\n\rtotal_time_ms\030\001 \001("
      "\001\022\033\n\023sensor_read_time_ms\030\002 \001(\001\022\033\n\023adc_pr"
      "epare_time_ms\030\003 \001(\001\022\033\n\023obj_prepare_time_"
      "ms\030\004 \001(\001\022\032\n\022world_rule_time_ms\030\005 \001(\001\022\030\n\020"
      "st_graph_time_ms\030\006 \001(\001\022 \n\030gateway_receiv"
      "e_delay_ms\030\010 \001(\001\022#\n\033perception_receive_d"
      "elay_ms\030\t \001(\001\022#\n\033prediction_receive_dela"
      "y_ms\030\n \001(\001\022\037\n\027signal_receive_delay_ms\030\013 "
      "\001(\001\022\036\n\026perception_interval_ms\030\014 \001(\001\022\036\n\026p"
      "rediction_interval_ms\030\r \001(\001\"=\n\005Stats\0224\n\r"
      "latency_stats\030\001 \001(\0132\035.apollo.decision.La"
      "tencyStats\"\212\001\n\013ModuleDebug\022\034\n\024gateway_se"
      "quence_num\030\001 \001(\r\022\037\n\027perception_sequence_"
      "num\030\002 \001(\r\022\037\n\027prediction_sequence_num\030\003 \001"
      "(\r\022\033\n\023signal_sequence_num\030\004 \001(\r\"\217\002\n\005Debu"
      "g\022;\n\016master_vehicle\030\001 \001(\0132#.apollo.decis"
      "ion.MasterVehicleDebug\0228\n\021original_decis"
      "ion\030\002 \001(\0132\035.apollo.decision.MainDecision"
      "\022,\n\006object\030\003 \003(\0132\034.apollo.decision.Objec"
      "tDebug\022\023\n\013map_version\030\005 \001(\014\022\030\n\020decision_"
      "version\030\007 \001(\014\0222\n\014module_debug\030\006 \001(\0132\034.ap"
      "ollo.decision.ModuleDebug\"\230\001\n\013LightSigna"
      "l\022\021\n\temergency\030\001 \001(\010\022<\n\013turn_signal\030\002 \001("
      "\0162\'.apollo.decision.LightSignal.TurnSign"
      "al\"8\n\nTurnSignal\022\013\n\007NO_TURN\020\000\022\r\n\tLEFT_TU"
      "RN\020\001\022\016\n\nRIGHT_TURN\020\002\"\321\002\n\016DecisionResult\022"
      "%\n\006header\030\001 \001(\0132\025.apollo.common.Header\0229"
      "\n\017object_decision\030\002 \001(\0132 .apollo.decisio"
      "n.ObjectDecisions\0224\n\rmain_decision\030\003 \001(\013"
      "2\035.apollo.decision.MainDecision\022%\n\005debug"
      "\030\004 \001(\0132\026.apollo.decision.Debug\022%\n\005stats\030"
      "\006 \001(\0132\026.apollo.decision.Stats\022%\n\006signal\030"
      "\007 \001(\0132\025.apollo.canbus.Signal\0222\n\014light_si"
      "gnal\030\005 \001(\0132\034.apollo.decision.LightSignal"
      "*\243\002\n\016StopReasonCode\022\034\n\030STOP_REASON_HEAD_"
      "VEHICLE\020\000\022\033\n\027STOP_REASON_DESTINATION\020\001\022\032"
      "\n\026STOP_REASON_PEDESTRIAN\020\002\022\030\n\024STOP_REASO"
      "N_OBSTACLE\020\003\022\032\n\026STOP_REASON_PREPARKING\020\004"
      "\022\026\n\022STOP_REASON_SIGNAL\020d\022\031\n\025STOP_REASON_"
      "STOP_SIGN\020e\022\032\n\026STOP_REASON_YIELD_SIGN\020f\022"
      "\032\n\026STOP_REASON_CLEAR_ZONE\020g\022\031\n\025STOP_REAS"
      "ON_CROSSWALK\020hb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6222);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apollo_msgs/proto/decision/decision.proto", &protobuf_RegisterTypes);
  ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto::AddDescriptors();
  ::protobuf_apollo_5fmsgs_2fproto_2fcanbus_2fchassis_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto
namespace apollo {
namespace decision {
const ::google::protobuf::EnumDescriptor* ObjectNudge_Type_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[0];
}
bool ObjectNudge_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjectNudge_Type ObjectNudge::LEFT_NUDGE;
const ObjectNudge_Type ObjectNudge::RIGHT_NUDGE;
const ObjectNudge_Type ObjectNudge::Type_MIN;
const ObjectNudge_Type ObjectNudge::Type_MAX;
const int ObjectNudge::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObjectSidePass_Type_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[1];
}
bool ObjectSidePass_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjectSidePass_Type ObjectSidePass::FOLLOW;
const ObjectSidePass_Type ObjectSidePass::LEAD;
const ObjectSidePass_Type ObjectSidePass::Type_MIN;
const ObjectSidePass_Type ObjectSidePass::Type_MAX;
const int ObjectSidePass::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ObjectDecision_ObjectType_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[2];
}
bool ObjectDecision_ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ObjectDecision_ObjectType ObjectDecision::PREDICTION;
const ObjectDecision_ObjectType ObjectDecision::PERCEPTION;
const ObjectDecision_ObjectType ObjectDecision::VIRTUAL;
const ObjectDecision_ObjectType ObjectDecision::ObjectType_MIN;
const ObjectDecision_ObjectType ObjectDecision::ObjectType_MAX;
const int ObjectDecision::ObjectType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainEmergencyStop_ReasonCode_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[3];
}
bool MainEmergencyStop_ReasonCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_INTERNAL_ERR;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_COLLISION;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_ST_FIND_PATH;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_ST_MAKE_DECISION;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ESTOP_REASON_SENSOR_ERROR;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ReasonCode_MIN;
const MainEmergencyStop_ReasonCode MainEmergencyStop::ReasonCode_MAX;
const int MainEmergencyStop::ReasonCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainChangeLane_Type_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[4];
}
bool MainChangeLane_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainChangeLane_Type MainChangeLane::LEFT;
const MainChangeLane_Type MainChangeLane::RIGHT;
const MainChangeLane_Type MainChangeLane::Type_MIN;
const MainChangeLane_Type MainChangeLane::Type_MAX;
const int MainChangeLane::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MainParking_Type_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[5];
}
bool MainParking_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MainParking_Type MainParking::FORWARD_PARKING;
const MainParking_Type MainParking::REVERSE_PARKING;
const MainParking_Type MainParking::Type_MIN;
const MainParking_Type MainParking::Type_MAX;
const int MainParking::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LightSignal_TurnSignal_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[6];
}
bool LightSignal_TurnSignal_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LightSignal_TurnSignal LightSignal::NO_TURN;
const LightSignal_TurnSignal LightSignal::LEFT_TURN;
const LightSignal_TurnSignal LightSignal::RIGHT_TURN;
const LightSignal_TurnSignal LightSignal::TurnSignal_MIN;
const LightSignal_TurnSignal LightSignal::TurnSignal_MAX;
const int LightSignal::TurnSignal_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* StopReasonCode_descriptor() {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_enum_descriptors[7];
}
bool StopReasonCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kStartFieldNumber;
const int Range::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&start_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.Range)
}

void Range::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:apollo.decision.Range)
  SharedDtor();
}

void Range::SharedDtor() {
}

void Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Range& Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Range.base);
  return *internal_default_instance();
}


void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&start_)) + sizeof(end_));
  _internal_metadata_.Clear();
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->start(), output);
  }

  // double end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double start = 1;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->start(), target);
  }

  // double end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double start = 1;
  if (this->start() != 0) {
    total_size += 1 + 8;
  }

  // double end = 2;
  if (this->end() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TargetLane::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetLane::kIdFieldNumber;
const int TargetLane::kStartSFieldNumber;
const int TargetLane::kEndSFieldNumber;
const int TargetLane::kSpeedLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetLane::TargetLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_TargetLane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.TargetLane)
}
TargetLane::TargetLane(const TargetLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  ::memcpy(&start_s_, &from.start_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_limit_) -
    reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.TargetLane)
}

void TargetLane::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_limit_) -
      reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
}

TargetLane::~TargetLane() {
  // @@protoc_insertion_point(destructor:apollo.decision.TargetLane)
  SharedDtor();
}

void TargetLane::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetLane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TargetLane::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetLane& TargetLane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_TargetLane.base);
  return *internal_default_instance();
}


void TargetLane::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_limit_) -
      reinterpret_cast<char*>(&start_s_)) + sizeof(speed_limit_));
  _internal_metadata_.Clear();
}

bool TargetLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.TargetLane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.TargetLane.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double start_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double end_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &end_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.TargetLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.TargetLane)
  return false;
#undef DO_
}

void TargetLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.TargetLane.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // double start_s = 2;
  if (this->start_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->start_s(), output);
  }

  // double end_s = 3;
  if (this->end_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->end_s(), output);
  }

  // double speed_limit = 4;
  if (this->speed_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->speed_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.TargetLane)
}

::google::protobuf::uint8* TargetLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.TargetLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.TargetLane.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // double start_s = 2;
  if (this->start_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->start_s(), target);
  }

  // double end_s = 3;
  if (this->end_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->end_s(), target);
  }

  // double speed_limit = 4;
  if (this->speed_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->speed_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.TargetLane)
  return target;
}

size_t TargetLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.TargetLane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // double start_s = 2;
  if (this->start_s() != 0) {
    total_size += 1 + 8;
  }

  // double end_s = 3;
  if (this->end_s() != 0) {
    total_size += 1 + 8;
  }

  // double speed_limit = 4;
  if (this->speed_limit() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.TargetLane)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.TargetLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.TargetLane)
    MergeFrom(*source);
  }
}

void TargetLane::MergeFrom(const TargetLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.TargetLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.start_s() != 0) {
    set_start_s(from.start_s());
  }
  if (from.end_s() != 0) {
    set_end_s(from.end_s());
  }
  if (from.speed_limit() != 0) {
    set_speed_limit(from.speed_limit());
  }
}

void TargetLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.TargetLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetLane::CopyFrom(const TargetLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.TargetLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetLane::IsInitialized() const {
  return true;
}

void TargetLane::Swap(TargetLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetLane::InternalSwap(TargetLane* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_s_, other->start_s_);
  swap(end_s_, other->end_s_);
  swap(speed_limit_, other->speed_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TargetLane::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectIgnore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectIgnore::ObjectIgnore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectIgnore.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectIgnore)
}
ObjectIgnore::ObjectIgnore(const ObjectIgnore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectIgnore)
}

void ObjectIgnore::SharedCtor() {
}

ObjectIgnore::~ObjectIgnore() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectIgnore)
  SharedDtor();
}

void ObjectIgnore::SharedDtor() {
}

void ObjectIgnore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectIgnore::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectIgnore& ObjectIgnore::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectIgnore.base);
  return *internal_default_instance();
}


void ObjectIgnore::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ObjectIgnore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectIgnore)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectIgnore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectIgnore)
  return false;
#undef DO_
}

void ObjectIgnore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectIgnore)
}

::google::protobuf::uint8* ObjectIgnore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectIgnore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectIgnore)
  return target;
}

size_t ObjectIgnore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectIgnore)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectIgnore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectIgnore)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectIgnore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectIgnore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectIgnore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectIgnore)
    MergeFrom(*source);
  }
}

void ObjectIgnore::MergeFrom(const ObjectIgnore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectIgnore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectIgnore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectIgnore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectIgnore::CopyFrom(const ObjectIgnore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectIgnore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectIgnore::IsInitialized() const {
  return true;
}

void ObjectIgnore::Swap(ObjectIgnore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectIgnore::InternalSwap(ObjectIgnore* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectIgnore::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectStop::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectStop_default_instance_._instance.get_mutable()->preferred_distance_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_ObjectStop_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectStop::clear_stop_point() {
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectStop::kDistanceSFieldNumber;
const int ObjectStop::kPreferredDistanceSFieldNumber;
const int ObjectStop::kReasonCodeFieldNumber;
const int ObjectStop::kStopPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectStop::ObjectStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectStop)
}
ObjectStop::ObjectStop(const ObjectStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_s()) {
    preferred_distance_s_ = new ::apollo::decision::Range(*from.preferred_distance_s_);
  } else {
    preferred_distance_s_ = NULL;
  }
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_code_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(reason_code_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectStop)
}

void ObjectStop::SharedCtor() {
  ::memset(&preferred_distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_code_) -
      reinterpret_cast<char*>(&preferred_distance_s_)) + sizeof(reason_code_));
}

ObjectStop::~ObjectStop() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectStop)
  SharedDtor();
}

void ObjectStop::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_s_;
  if (this != internal_default_instance()) delete stop_point_;
}

void ObjectStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectStop::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectStop& ObjectStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectStop.base);
  return *internal_default_instance();
}


void ObjectStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_s_ != NULL) {
    delete preferred_distance_s_;
  }
  preferred_distance_s_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
  ::memset(&distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_code_) -
      reinterpret_cast<char*>(&distance_s_)) + sizeof(reason_code_));
  _internal_metadata_.Clear();
}

bool ObjectStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.StopReasonCode reason_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason_code(static_cast< ::apollo::decision::StopReasonCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU stop_point = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectStop)
  return false;
#undef DO_
}

void ObjectStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_distance_s(), output);
  }

  // .apollo.decision.StopReasonCode reason_code = 3;
  if (this->reason_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason_code(), output);
  }

  // .apollo.common.PointENU stop_point = 4;
  if (this->has_stop_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_stop_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectStop)
}

::google::protobuf::uint8* ObjectStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_distance_s(), deterministic, target);
  }

  // .apollo.decision.StopReasonCode reason_code = 3;
  if (this->reason_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason_code(), target);
  }

  // .apollo.common.PointENU stop_point = 4;
  if (this->has_stop_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_stop_point(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectStop)
  return target;
}

size_t ObjectStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectStop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_s_);
  }

  // .apollo.common.PointENU stop_point = 4;
  if (this->has_stop_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stop_point_);
  }

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.StopReasonCode reason_code = 3;
  if (this->reason_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectStop)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectStop)
    MergeFrom(*source);
  }
}

void ObjectStop::MergeFrom(const ObjectStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_s()) {
    mutable_preferred_distance_s()->::apollo::decision::Range::MergeFrom(from.preferred_distance_s());
  }
  if (from.has_stop_point()) {
    mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
  if (from.reason_code() != 0) {
    set_reason_code(from.reason_code());
  }
}

void ObjectStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectStop::CopyFrom(const ObjectStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectStop::IsInitialized() const {
  return true;
}

void ObjectStop::Swap(ObjectStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectStop::InternalSwap(ObjectStop* other) {
  using std::swap;
  swap(preferred_distance_s_, other->preferred_distance_s_);
  swap(stop_point_, other->stop_point_);
  swap(distance_s_, other->distance_s_);
  swap(reason_code_, other->reason_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectStop::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectNudge::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectNudge_default_instance_._instance.get_mutable()->preferred_distance_l_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectNudge::kDistanceLFieldNumber;
const int ObjectNudge::kTypeFieldNumber;
const int ObjectNudge::kPreferredDistanceLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectNudge::ObjectNudge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectNudge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectNudge)
}
ObjectNudge::ObjectNudge(const ObjectNudge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_l()) {
    preferred_distance_l_ = new ::apollo::decision::Range(*from.preferred_distance_l_);
  } else {
    preferred_distance_l_ = NULL;
  }
  ::memcpy(&distance_l_, &from.distance_l_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&distance_l_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectNudge)
}

void ObjectNudge::SharedCtor() {
  ::memset(&preferred_distance_l_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&preferred_distance_l_)) + sizeof(type_));
}

ObjectNudge::~ObjectNudge() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectNudge)
  SharedDtor();
}

void ObjectNudge::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_l_;
}

void ObjectNudge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectNudge::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectNudge& ObjectNudge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectNudge.base);
  return *internal_default_instance();
}


void ObjectNudge::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_l_ != NULL) {
    delete preferred_distance_l_;
  }
  preferred_distance_l_ = NULL;
  ::memset(&distance_l_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&distance_l_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ObjectNudge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectNudge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_l = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectNudge.Type type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::decision::ObjectNudge_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_l = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectNudge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectNudge)
  return false;
#undef DO_
}

void ObjectNudge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_l = 1;
  if (this->distance_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_l(), output);
  }

  // .apollo.decision.ObjectNudge.Type type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .apollo.decision.Range preferred_distance_l = 3;
  if (this->has_preferred_distance_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_preferred_distance_l(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectNudge)
}

::google::protobuf::uint8* ObjectNudge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectNudge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_l = 1;
  if (this->distance_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_l(), target);
  }

  // .apollo.decision.ObjectNudge.Type type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .apollo.decision.Range preferred_distance_l = 3;
  if (this->has_preferred_distance_l()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_preferred_distance_l(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectNudge)
  return target;
}

size_t ObjectNudge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectNudge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_l = 3;
  if (this->has_preferred_distance_l()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_l_);
  }

  // double distance_l = 1;
  if (this->distance_l() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.ObjectNudge.Type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectNudge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectNudge)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectNudge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectNudge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectNudge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectNudge)
    MergeFrom(*source);
  }
}

void ObjectNudge::MergeFrom(const ObjectNudge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectNudge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_l()) {
    mutable_preferred_distance_l()->::apollo::decision::Range::MergeFrom(from.preferred_distance_l());
  }
  if (from.distance_l() != 0) {
    set_distance_l(from.distance_l());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ObjectNudge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectNudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectNudge::CopyFrom(const ObjectNudge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectNudge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectNudge::IsInitialized() const {
  return true;
}

void ObjectNudge::Swap(ObjectNudge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectNudge::InternalSwap(ObjectNudge* other) {
  using std::swap;
  swap(preferred_distance_l_, other->preferred_distance_l_);
  swap(distance_l_, other->distance_l_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectNudge::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectYield::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectYield_default_instance_._instance.get_mutable()->preferred_distance_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_ObjectYield_default_instance_._instance.get_mutable()->yield_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectYield::clear_yield_point() {
  if (GetArenaNoVirtual() == NULL && yield_point_ != NULL) {
    delete yield_point_;
  }
  yield_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectYield::kDistanceSFieldNumber;
const int ObjectYield::kPreferredDistanceSFieldNumber;
const int ObjectYield::kYieldPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectYield::ObjectYield()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectYield.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectYield)
}
ObjectYield::ObjectYield(const ObjectYield& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_s()) {
    preferred_distance_s_ = new ::apollo::decision::Range(*from.preferred_distance_s_);
  } else {
    preferred_distance_s_ = NULL;
  }
  if (from.has_yield_point()) {
    yield_point_ = new ::apollo::common::PointENU(*from.yield_point_);
  } else {
    yield_point_ = NULL;
  }
  distance_s_ = from.distance_s_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectYield)
}

void ObjectYield::SharedCtor() {
  ::memset(&preferred_distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_s_) -
      reinterpret_cast<char*>(&preferred_distance_s_)) + sizeof(distance_s_));
}

ObjectYield::~ObjectYield() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectYield)
  SharedDtor();
}

void ObjectYield::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_s_;
  if (this != internal_default_instance()) delete yield_point_;
}

void ObjectYield::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectYield::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectYield& ObjectYield::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectYield.base);
  return *internal_default_instance();
}


void ObjectYield::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_s_ != NULL) {
    delete preferred_distance_s_;
  }
  preferred_distance_s_ = NULL;
  if (GetArenaNoVirtual() == NULL && yield_point_ != NULL) {
    delete yield_point_;
  }
  yield_point_ = NULL;
  distance_s_ = 0;
  _internal_metadata_.Clear();
}

bool ObjectYield::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectYield)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU yield_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yield_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectYield)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectYield)
  return false;
#undef DO_
}

void ObjectYield::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_distance_s(), output);
  }

  // .apollo.common.PointENU yield_point = 3;
  if (this->has_yield_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_yield_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectYield)
}

::google::protobuf::uint8* ObjectYield::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectYield)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_distance_s(), deterministic, target);
  }

  // .apollo.common.PointENU yield_point = 3;
  if (this->has_yield_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_yield_point(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectYield)
  return target;
}

size_t ObjectYield::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectYield)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_s_);
  }

  // .apollo.common.PointENU yield_point = 3;
  if (this->has_yield_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *yield_point_);
  }

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectYield::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectYield)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectYield* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectYield>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectYield)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectYield)
    MergeFrom(*source);
  }
}

void ObjectYield::MergeFrom(const ObjectYield& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectYield)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_s()) {
    mutable_preferred_distance_s()->::apollo::decision::Range::MergeFrom(from.preferred_distance_s());
  }
  if (from.has_yield_point()) {
    mutable_yield_point()->::apollo::common::PointENU::MergeFrom(from.yield_point());
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
}

void ObjectYield::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectYield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectYield::CopyFrom(const ObjectYield& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectYield)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectYield::IsInitialized() const {
  return true;
}

void ObjectYield::Swap(ObjectYield* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectYield::InternalSwap(ObjectYield* other) {
  using std::swap;
  swap(preferred_distance_s_, other->preferred_distance_s_);
  swap(yield_point_, other->yield_point_);
  swap(distance_s_, other->distance_s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectYield::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectFollow::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectFollow_default_instance_._instance.get_mutable()->preferred_distance_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_ObjectFollow_default_instance_._instance.get_mutable()->follow_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectFollow::clear_follow_point() {
  if (GetArenaNoVirtual() == NULL && follow_point_ != NULL) {
    delete follow_point_;
  }
  follow_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectFollow::kDistanceSFieldNumber;
const int ObjectFollow::kPreferredDistanceSFieldNumber;
const int ObjectFollow::kFollowPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectFollow::ObjectFollow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectFollow.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectFollow)
}
ObjectFollow::ObjectFollow(const ObjectFollow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_s()) {
    preferred_distance_s_ = new ::apollo::decision::Range(*from.preferred_distance_s_);
  } else {
    preferred_distance_s_ = NULL;
  }
  if (from.has_follow_point()) {
    follow_point_ = new ::apollo::common::PointENU(*from.follow_point_);
  } else {
    follow_point_ = NULL;
  }
  distance_s_ = from.distance_s_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectFollow)
}

void ObjectFollow::SharedCtor() {
  ::memset(&preferred_distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_s_) -
      reinterpret_cast<char*>(&preferred_distance_s_)) + sizeof(distance_s_));
}

ObjectFollow::~ObjectFollow() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectFollow)
  SharedDtor();
}

void ObjectFollow::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_s_;
  if (this != internal_default_instance()) delete follow_point_;
}

void ObjectFollow::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectFollow::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectFollow& ObjectFollow::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectFollow.base);
  return *internal_default_instance();
}


void ObjectFollow::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_s_ != NULL) {
    delete preferred_distance_s_;
  }
  preferred_distance_s_ = NULL;
  if (GetArenaNoVirtual() == NULL && follow_point_ != NULL) {
    delete follow_point_;
  }
  follow_point_ = NULL;
  distance_s_ = 0;
  _internal_metadata_.Clear();
}

bool ObjectFollow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectFollow)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU follow_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_follow_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectFollow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectFollow)
  return false;
#undef DO_
}

void ObjectFollow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_distance_s(), output);
  }

  // .apollo.common.PointENU follow_point = 3;
  if (this->has_follow_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_follow_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectFollow)
}

::google::protobuf::uint8* ObjectFollow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectFollow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_distance_s(), deterministic, target);
  }

  // .apollo.common.PointENU follow_point = 3;
  if (this->has_follow_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_follow_point(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectFollow)
  return target;
}

size_t ObjectFollow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectFollow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_s_);
  }

  // .apollo.common.PointENU follow_point = 3;
  if (this->has_follow_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *follow_point_);
  }

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectFollow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectFollow)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectFollow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectFollow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectFollow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectFollow)
    MergeFrom(*source);
  }
}

void ObjectFollow::MergeFrom(const ObjectFollow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectFollow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_s()) {
    mutable_preferred_distance_s()->::apollo::decision::Range::MergeFrom(from.preferred_distance_s());
  }
  if (from.has_follow_point()) {
    mutable_follow_point()->::apollo::common::PointENU::MergeFrom(from.follow_point());
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
}

void ObjectFollow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectFollow::CopyFrom(const ObjectFollow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectFollow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectFollow::IsInitialized() const {
  return true;
}

void ObjectFollow::Swap(ObjectFollow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectFollow::InternalSwap(ObjectFollow* other) {
  using std::swap;
  swap(preferred_distance_s_, other->preferred_distance_s_);
  swap(follow_point_, other->follow_point_);
  swap(distance_s_, other->distance_s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectFollow::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectOvertake::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectOvertake_default_instance_._instance.get_mutable()->preferred_distance_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_ObjectOvertake_default_instance_._instance.get_mutable()->overtake_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void ObjectOvertake::clear_overtake_point() {
  if (GetArenaNoVirtual() == NULL && overtake_point_ != NULL) {
    delete overtake_point_;
  }
  overtake_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectOvertake::kDistanceSFieldNumber;
const int ObjectOvertake::kPreferredDistanceSFieldNumber;
const int ObjectOvertake::kOvertakePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectOvertake::ObjectOvertake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectOvertake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectOvertake)
}
ObjectOvertake::ObjectOvertake(const ObjectOvertake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_s()) {
    preferred_distance_s_ = new ::apollo::decision::Range(*from.preferred_distance_s_);
  } else {
    preferred_distance_s_ = NULL;
  }
  if (from.has_overtake_point()) {
    overtake_point_ = new ::apollo::common::PointENU(*from.overtake_point_);
  } else {
    overtake_point_ = NULL;
  }
  distance_s_ = from.distance_s_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectOvertake)
}

void ObjectOvertake::SharedCtor() {
  ::memset(&preferred_distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&distance_s_) -
      reinterpret_cast<char*>(&preferred_distance_s_)) + sizeof(distance_s_));
}

ObjectOvertake::~ObjectOvertake() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectOvertake)
  SharedDtor();
}

void ObjectOvertake::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_s_;
  if (this != internal_default_instance()) delete overtake_point_;
}

void ObjectOvertake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectOvertake::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectOvertake& ObjectOvertake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectOvertake.base);
  return *internal_default_instance();
}


void ObjectOvertake::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_s_ != NULL) {
    delete preferred_distance_s_;
  }
  preferred_distance_s_ = NULL;
  if (GetArenaNoVirtual() == NULL && overtake_point_ != NULL) {
    delete overtake_point_;
  }
  overtake_point_ = NULL;
  distance_s_ = 0;
  _internal_metadata_.Clear();
}

bool ObjectOvertake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectOvertake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU overtake_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_overtake_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectOvertake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectOvertake)
  return false;
#undef DO_
}

void ObjectOvertake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_distance_s(), output);
  }

  // .apollo.common.PointENU overtake_point = 3;
  if (this->has_overtake_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_overtake_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectOvertake)
}

::google::protobuf::uint8* ObjectOvertake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectOvertake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_distance_s(), deterministic, target);
  }

  // .apollo.common.PointENU overtake_point = 3;
  if (this->has_overtake_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_overtake_point(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectOvertake)
  return target;
}

size_t ObjectOvertake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectOvertake)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_s_);
  }

  // .apollo.common.PointENU overtake_point = 3;
  if (this->has_overtake_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *overtake_point_);
  }

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectOvertake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectOvertake)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectOvertake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectOvertake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectOvertake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectOvertake)
    MergeFrom(*source);
  }
}

void ObjectOvertake::MergeFrom(const ObjectOvertake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectOvertake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_s()) {
    mutable_preferred_distance_s()->::apollo::decision::Range::MergeFrom(from.preferred_distance_s());
  }
  if (from.has_overtake_point()) {
    mutable_overtake_point()->::apollo::common::PointENU::MergeFrom(from.overtake_point());
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
}

void ObjectOvertake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectOvertake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectOvertake::CopyFrom(const ObjectOvertake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectOvertake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectOvertake::IsInitialized() const {
  return true;
}

void ObjectOvertake::Swap(ObjectOvertake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectOvertake::InternalSwap(ObjectOvertake* other) {
  using std::swap;
  swap(preferred_distance_s_, other->preferred_distance_s_);
  swap(overtake_point_, other->overtake_point_);
  swap(distance_s_, other->distance_s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectOvertake::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectSidePass::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectSidePass_default_instance_._instance.get_mutable()->preferred_distance_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectSidePass::kDistanceSFieldNumber;
const int ObjectSidePass::kPreferredDistanceSFieldNumber;
const int ObjectSidePass::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectSidePass::ObjectSidePass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectSidePass.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectSidePass)
}
ObjectSidePass::ObjectSidePass(const ObjectSidePass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_preferred_distance_s()) {
    preferred_distance_s_ = new ::apollo::decision::Range(*from.preferred_distance_s_);
  } else {
    preferred_distance_s_ = NULL;
  }
  ::memcpy(&distance_s_, &from.distance_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&distance_s_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectSidePass)
}

void ObjectSidePass::SharedCtor() {
  ::memset(&preferred_distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&preferred_distance_s_)) + sizeof(type_));
}

ObjectSidePass::~ObjectSidePass() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectSidePass)
  SharedDtor();
}

void ObjectSidePass::SharedDtor() {
  if (this != internal_default_instance()) delete preferred_distance_s_;
}

void ObjectSidePass::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectSidePass::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectSidePass& ObjectSidePass::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectSidePass.base);
  return *internal_default_instance();
}


void ObjectSidePass::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && preferred_distance_s_ != NULL) {
    delete preferred_distance_s_;
  }
  preferred_distance_s_ = NULL;
  ::memset(&distance_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&distance_s_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool ObjectSidePass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectSidePass)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double distance_s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range preferred_distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_distance_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectSidePass.Type type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::decision::ObjectSidePass_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectSidePass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectSidePass)
  return false;
#undef DO_
}

void ObjectSidePass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->distance_s(), output);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_distance_s(), output);
  }

  // .apollo.decision.ObjectSidePass.Type type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectSidePass)
}

::google::protobuf::uint8* ObjectSidePass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectSidePass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->distance_s(), target);
  }

  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_distance_s(), deterministic, target);
  }

  // .apollo.decision.ObjectSidePass.Type type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectSidePass)
  return target;
}

size_t ObjectSidePass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectSidePass)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.Range preferred_distance_s = 2;
  if (this->has_preferred_distance_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_distance_s_);
  }

  // double distance_s = 1;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.ObjectSidePass.Type type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectSidePass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectSidePass)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectSidePass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectSidePass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectSidePass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectSidePass)
    MergeFrom(*source);
  }
}

void ObjectSidePass::MergeFrom(const ObjectSidePass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectSidePass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_preferred_distance_s()) {
    mutable_preferred_distance_s()->::apollo::decision::Range::MergeFrom(from.preferred_distance_s());
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ObjectSidePass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectSidePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectSidePass::CopyFrom(const ObjectSidePass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectSidePass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectSidePass::IsInitialized() const {
  return true;
}

void ObjectSidePass::Swap(ObjectSidePass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectSidePass::InternalSwap(ObjectSidePass* other) {
  using std::swap;
  swap(preferred_distance_s_, other->preferred_distance_s_);
  swap(distance_s_, other->distance_s_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectSidePass::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectAvoid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectAvoid::ObjectAvoid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectAvoid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectAvoid)
}
ObjectAvoid::ObjectAvoid(const ObjectAvoid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectAvoid)
}

void ObjectAvoid::SharedCtor() {
}

ObjectAvoid::~ObjectAvoid() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectAvoid)
  SharedDtor();
}

void ObjectAvoid::SharedDtor() {
}

void ObjectAvoid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectAvoid::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectAvoid& ObjectAvoid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectAvoid.base);
  return *internal_default_instance();
}


void ObjectAvoid::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ObjectAvoid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectAvoid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectAvoid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectAvoid)
  return false;
#undef DO_
}

void ObjectAvoid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectAvoid)
}

::google::protobuf::uint8* ObjectAvoid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectAvoid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectAvoid)
  return target;
}

size_t ObjectAvoid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectAvoid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectAvoid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectAvoid)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectAvoid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectAvoid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectAvoid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectAvoid)
    MergeFrom(*source);
  }
}

void ObjectAvoid::MergeFrom(const ObjectAvoid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectAvoid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ObjectAvoid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectAvoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectAvoid::CopyFrom(const ObjectAvoid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectAvoid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectAvoid::IsInitialized() const {
  return true;
}

void ObjectAvoid::Swap(ObjectAvoid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectAvoid::InternalSwap(ObjectAvoid* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectAvoid::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecisionType::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectDecisionType_default_instance_.ignore_ = const_cast< ::apollo::decision::ObjectIgnore*>(
      ::apollo::decision::ObjectIgnore::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.stop_ = const_cast< ::apollo::decision::ObjectStop*>(
      ::apollo::decision::ObjectStop::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.follow_ = const_cast< ::apollo::decision::ObjectFollow*>(
      ::apollo::decision::ObjectFollow::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.yield_ = const_cast< ::apollo::decision::ObjectYield*>(
      ::apollo::decision::ObjectYield::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.overtake_ = const_cast< ::apollo::decision::ObjectOvertake*>(
      ::apollo::decision::ObjectOvertake::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.nudge_ = const_cast< ::apollo::decision::ObjectNudge*>(
      ::apollo::decision::ObjectNudge::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.sidepass_ = const_cast< ::apollo::decision::ObjectSidePass*>(
      ::apollo::decision::ObjectSidePass::internal_default_instance());
  ::apollo::decision::_ObjectDecisionType_default_instance_.avoid_ = const_cast< ::apollo::decision::ObjectAvoid*>(
      ::apollo::decision::ObjectAvoid::internal_default_instance());
}
void ObjectDecisionType::set_allocated_ignore(::apollo::decision::ObjectIgnore* ignore) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (ignore) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ignore = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ignore, submessage_arena);
    }
    set_has_ignore();
    object_tag_.ignore_ = ignore;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.ignore)
}
void ObjectDecisionType::set_allocated_stop(::apollo::decision::ObjectStop* stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stop, submessage_arena);
    }
    set_has_stop();
    object_tag_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.stop)
}
void ObjectDecisionType::set_allocated_follow(::apollo::decision::ObjectFollow* follow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (follow) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      follow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, follow, submessage_arena);
    }
    set_has_follow();
    object_tag_.follow_ = follow;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.follow)
}
void ObjectDecisionType::set_allocated_yield(::apollo::decision::ObjectYield* yield) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (yield) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      yield = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, yield, submessage_arena);
    }
    set_has_yield();
    object_tag_.yield_ = yield;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.yield)
}
void ObjectDecisionType::set_allocated_overtake(::apollo::decision::ObjectOvertake* overtake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (overtake) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      overtake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, overtake, submessage_arena);
    }
    set_has_overtake();
    object_tag_.overtake_ = overtake;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.overtake)
}
void ObjectDecisionType::set_allocated_nudge(::apollo::decision::ObjectNudge* nudge) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (nudge) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nudge = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nudge, submessage_arena);
    }
    set_has_nudge();
    object_tag_.nudge_ = nudge;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.nudge)
}
void ObjectDecisionType::set_allocated_sidepass(::apollo::decision::ObjectSidePass* sidepass) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (sidepass) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sidepass = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sidepass, submessage_arena);
    }
    set_has_sidepass();
    object_tag_.sidepass_ = sidepass;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.sidepass)
}
void ObjectDecisionType::set_allocated_avoid(::apollo::decision::ObjectAvoid* avoid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_object_tag();
  if (avoid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avoid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avoid, submessage_arena);
    }
    set_has_avoid();
    object_tag_.avoid_ = avoid;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.ObjectDecisionType.avoid)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecisionType::kIgnoreFieldNumber;
const int ObjectDecisionType::kStopFieldNumber;
const int ObjectDecisionType::kFollowFieldNumber;
const int ObjectDecisionType::kYieldFieldNumber;
const int ObjectDecisionType::kOvertakeFieldNumber;
const int ObjectDecisionType::kNudgeFieldNumber;
const int ObjectDecisionType::kSidepassFieldNumber;
const int ObjectDecisionType::kAvoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecisionType::ObjectDecisionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisionType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectDecisionType)
}
ObjectDecisionType::ObjectDecisionType(const ObjectDecisionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_object_tag();
  switch (from.object_tag_case()) {
    case kIgnore: {
      mutable_ignore()->::apollo::decision::ObjectIgnore::MergeFrom(from.ignore());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::decision::ObjectStop::MergeFrom(from.stop());
      break;
    }
    case kFollow: {
      mutable_follow()->::apollo::decision::ObjectFollow::MergeFrom(from.follow());
      break;
    }
    case kYield: {
      mutable_yield()->::apollo::decision::ObjectYield::MergeFrom(from.yield());
      break;
    }
    case kOvertake: {
      mutable_overtake()->::apollo::decision::ObjectOvertake::MergeFrom(from.overtake());
      break;
    }
    case kNudge: {
      mutable_nudge()->::apollo::decision::ObjectNudge::MergeFrom(from.nudge());
      break;
    }
    case kSidepass: {
      mutable_sidepass()->::apollo::decision::ObjectSidePass::MergeFrom(from.sidepass());
      break;
    }
    case kAvoid: {
      mutable_avoid()->::apollo::decision::ObjectAvoid::MergeFrom(from.avoid());
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectDecisionType)
}

void ObjectDecisionType::SharedCtor() {
  clear_has_object_tag();
}

ObjectDecisionType::~ObjectDecisionType() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectDecisionType)
  SharedDtor();
}

void ObjectDecisionType::SharedDtor() {
  if (has_object_tag()) {
    clear_object_tag();
  }
}

void ObjectDecisionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecisionType::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecisionType& ObjectDecisionType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisionType.base);
  return *internal_default_instance();
}


void ObjectDecisionType::clear_object_tag() {
// @@protoc_insertion_point(one_of_clear_start:apollo.decision.ObjectDecisionType)
  switch (object_tag_case()) {
    case kIgnore: {
      delete object_tag_.ignore_;
      break;
    }
    case kStop: {
      delete object_tag_.stop_;
      break;
    }
    case kFollow: {
      delete object_tag_.follow_;
      break;
    }
    case kYield: {
      delete object_tag_.yield_;
      break;
    }
    case kOvertake: {
      delete object_tag_.overtake_;
      break;
    }
    case kNudge: {
      delete object_tag_.nudge_;
      break;
    }
    case kSidepass: {
      delete object_tag_.sidepass_;
      break;
    }
    case kAvoid: {
      delete object_tag_.avoid_;
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OBJECT_TAG_NOT_SET;
}


void ObjectDecisionType::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_object_tag();
  _internal_metadata_.Clear();
}

bool ObjectDecisionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectDecisionType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.ObjectIgnore ignore = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ignore()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectStop stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectFollow follow = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_follow()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectYield yield = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_yield()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectOvertake overtake = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_overtake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectNudge nudge = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nudge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectSidePass sidepass = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sidepass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectAvoid avoid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avoid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectDecisionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectDecisionType)
  return false;
#undef DO_
}

void ObjectDecisionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.ObjectIgnore ignore = 1;
  if (has_ignore()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_ignore(), output);
  }

  // .apollo.decision.ObjectStop stop = 2;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_stop(), output);
  }

  // .apollo.decision.ObjectFollow follow = 3;
  if (has_follow()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_follow(), output);
  }

  // .apollo.decision.ObjectYield yield = 4;
  if (has_yield()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_yield(), output);
  }

  // .apollo.decision.ObjectOvertake overtake = 5;
  if (has_overtake()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_overtake(), output);
  }

  // .apollo.decision.ObjectNudge nudge = 6;
  if (has_nudge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_nudge(), output);
  }

  // .apollo.decision.ObjectSidePass sidepass = 7;
  if (has_sidepass()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_sidepass(), output);
  }

  // .apollo.decision.ObjectAvoid avoid = 8;
  if (has_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_avoid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectDecisionType)
}

::google::protobuf::uint8* ObjectDecisionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectDecisionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.ObjectIgnore ignore = 1;
  if (has_ignore()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_ignore(), deterministic, target);
  }

  // .apollo.decision.ObjectStop stop = 2;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_stop(), deterministic, target);
  }

  // .apollo.decision.ObjectFollow follow = 3;
  if (has_follow()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_follow(), deterministic, target);
  }

  // .apollo.decision.ObjectYield yield = 4;
  if (has_yield()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_yield(), deterministic, target);
  }

  // .apollo.decision.ObjectOvertake overtake = 5;
  if (has_overtake()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_overtake(), deterministic, target);
  }

  // .apollo.decision.ObjectNudge nudge = 6;
  if (has_nudge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_nudge(), deterministic, target);
  }

  // .apollo.decision.ObjectSidePass sidepass = 7;
  if (has_sidepass()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_sidepass(), deterministic, target);
  }

  // .apollo.decision.ObjectAvoid avoid = 8;
  if (has_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_avoid(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectDecisionType)
  return target;
}

size_t ObjectDecisionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectDecisionType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (object_tag_case()) {
    // .apollo.decision.ObjectIgnore ignore = 1;
    case kIgnore: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.ignore_);
      break;
    }
    // .apollo.decision.ObjectStop stop = 2;
    case kStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.stop_);
      break;
    }
    // .apollo.decision.ObjectFollow follow = 3;
    case kFollow: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.follow_);
      break;
    }
    // .apollo.decision.ObjectYield yield = 4;
    case kYield: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.yield_);
      break;
    }
    // .apollo.decision.ObjectOvertake overtake = 5;
    case kOvertake: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.overtake_);
      break;
    }
    // .apollo.decision.ObjectNudge nudge = 6;
    case kNudge: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.nudge_);
      break;
    }
    // .apollo.decision.ObjectSidePass sidepass = 7;
    case kSidepass: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.sidepass_);
      break;
    }
    // .apollo.decision.ObjectAvoid avoid = 8;
    case kAvoid: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *object_tag_.avoid_);
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecisionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectDecisionType)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecisionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecisionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectDecisionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectDecisionType)
    MergeFrom(*source);
  }
}

void ObjectDecisionType::MergeFrom(const ObjectDecisionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectDecisionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.object_tag_case()) {
    case kIgnore: {
      mutable_ignore()->::apollo::decision::ObjectIgnore::MergeFrom(from.ignore());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::decision::ObjectStop::MergeFrom(from.stop());
      break;
    }
    case kFollow: {
      mutable_follow()->::apollo::decision::ObjectFollow::MergeFrom(from.follow());
      break;
    }
    case kYield: {
      mutable_yield()->::apollo::decision::ObjectYield::MergeFrom(from.yield());
      break;
    }
    case kOvertake: {
      mutable_overtake()->::apollo::decision::ObjectOvertake::MergeFrom(from.overtake());
      break;
    }
    case kNudge: {
      mutable_nudge()->::apollo::decision::ObjectNudge::MergeFrom(from.nudge());
      break;
    }
    case kSidepass: {
      mutable_sidepass()->::apollo::decision::ObjectSidePass::MergeFrom(from.sidepass());
      break;
    }
    case kAvoid: {
      mutable_avoid()->::apollo::decision::ObjectAvoid::MergeFrom(from.avoid());
      break;
    }
    case OBJECT_TAG_NOT_SET: {
      break;
    }
  }
}

void ObjectDecisionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectDecisionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecisionType::CopyFrom(const ObjectDecisionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectDecisionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecisionType::IsInitialized() const {
  return true;
}

void ObjectDecisionType::Swap(ObjectDecisionType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecisionType::InternalSwap(ObjectDecisionType* other) {
  using std::swap;
  swap(object_tag_, other->object_tag_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecisionType::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecision::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectDecision_default_instance_._instance.get_mutable()->prediction_ = const_cast< ::apollo::prediction::PredictionObstacle*>(
      ::apollo::prediction::PredictionObstacle::internal_default_instance());
  ::apollo::decision::_ObjectDecision_default_instance_._instance.get_mutable()->decision_ = const_cast< ::apollo::decision::ObjectDecisionType*>(
      ::apollo::decision::ObjectDecisionType::internal_default_instance());
}
void ObjectDecision::clear_prediction() {
  if (GetArenaNoVirtual() == NULL && prediction_ != NULL) {
    delete prediction_;
  }
  prediction_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecision::kPredictionFieldNumber;
const int ObjectDecision::kIdFieldNumber;
const int ObjectDecision::kTypeFieldNumber;
const int ObjectDecision::kDecisionFieldNumber;
const int ObjectDecision::kObjectDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecision::ObjectDecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectDecision)
}
ObjectDecision::ObjectDecision(const ObjectDecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_decision_(from.object_decision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_prediction()) {
    prediction_ = new ::apollo::prediction::PredictionObstacle(*from.prediction_);
  } else {
    prediction_ = NULL;
  }
  if (from.has_decision()) {
    decision_ = new ::apollo::decision::ObjectDecisionType(*from.decision_);
  } else {
    decision_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectDecision)
}

void ObjectDecision::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prediction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&prediction_)) + sizeof(type_));
}

ObjectDecision::~ObjectDecision() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectDecision)
  SharedDtor();
}

void ObjectDecision::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete prediction_;
  if (this != internal_default_instance()) delete decision_;
}

void ObjectDecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecision::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecision& ObjectDecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecision.base);
  return *internal_default_instance();
}


void ObjectDecision::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_decision_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prediction_ != NULL) {
    delete prediction_;
  }
  prediction_ = NULL;
  if (GetArenaNoVirtual() == NULL && decision_ != NULL) {
    delete decision_;
  }
  decision_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool ObjectDecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectDecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.prediction.PredictionObstacle prediction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prediction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.ObjectDecision.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectDecision.ObjectType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::decision::ObjectDecision_ObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectDecisionType decision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.decision.ObjectDecisionType object_decision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectDecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectDecision)
  return false;
#undef DO_
}

void ObjectDecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.prediction.PredictionObstacle prediction = 1;
  if (this->has_prediction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_prediction(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDecision.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // .apollo.decision.ObjectDecision.ObjectType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .apollo.decision.ObjectDecisionType decision = 4;
  if (this->has_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_decision(), output);
  }

  // repeated .apollo.decision.ObjectDecisionType object_decision = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_decision_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->object_decision(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectDecision)
}

::google::protobuf::uint8* ObjectDecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.prediction.PredictionObstacle prediction = 1;
  if (this->has_prediction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_prediction(), deterministic, target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDecision.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // .apollo.decision.ObjectDecision.ObjectType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .apollo.decision.ObjectDecisionType decision = 4;
  if (this->has_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_decision(), deterministic, target);
  }

  // repeated .apollo.decision.ObjectDecisionType object_decision = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_decision_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->object_decision(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectDecision)
  return target;
}

size_t ObjectDecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectDecision)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.decision.ObjectDecisionType object_decision = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->object_decision_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object_decision(static_cast<int>(i)));
    }
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .apollo.prediction.PredictionObstacle prediction = 1;
  if (this->has_prediction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prediction_);
  }

  // .apollo.decision.ObjectDecisionType decision = 4;
  if (this->has_decision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *decision_);
  }

  // .apollo.decision.ObjectDecision.ObjectType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectDecision)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectDecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectDecision)
    MergeFrom(*source);
  }
}

void ObjectDecision::MergeFrom(const ObjectDecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectDecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_decision_.MergeFrom(from.object_decision_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_prediction()) {
    mutable_prediction()->::apollo::prediction::PredictionObstacle::MergeFrom(from.prediction());
  }
  if (from.has_decision()) {
    mutable_decision()->::apollo::decision::ObjectDecisionType::MergeFrom(from.decision());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ObjectDecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecision::CopyFrom(const ObjectDecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecision::IsInitialized() const {
  return true;
}

void ObjectDecision::Swap(ObjectDecision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecision::InternalSwap(ObjectDecision* other) {
  using std::swap;
  CastToBase(&object_decision_)->InternalSwap(CastToBase(&other->object_decision_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(prediction_, other->prediction_);
  swap(decision_, other->decision_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecision::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDecisions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDecisions::kDecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDecisions::ObjectDecisions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectDecisions)
}
ObjectDecisions::ObjectDecisions(const ObjectDecisions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      decision_(from.decision_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectDecisions)
}

void ObjectDecisions::SharedCtor() {
}

ObjectDecisions::~ObjectDecisions() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectDecisions)
  SharedDtor();
}

void ObjectDecisions::SharedDtor() {
}

void ObjectDecisions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDecisions::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDecisions& ObjectDecisions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDecisions.base);
  return *internal_default_instance();
}


void ObjectDecisions::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  decision_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectDecisions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectDecisions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.decision.ObjectDecision decision = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectDecisions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectDecisions)
  return false;
#undef DO_
}

void ObjectDecisions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.decision.ObjectDecision decision = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->decision(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectDecisions)
}

::google::protobuf::uint8* ObjectDecisions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectDecisions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.decision.ObjectDecision decision = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->decision_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->decision(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectDecisions)
  return target;
}

size_t ObjectDecisions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectDecisions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.decision.ObjectDecision decision = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->decision_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->decision(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDecisions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectDecisions)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDecisions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDecisions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectDecisions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectDecisions)
    MergeFrom(*source);
  }
}

void ObjectDecisions::MergeFrom(const ObjectDecisions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectDecisions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  decision_.MergeFrom(from.decision_);
}

void ObjectDecisions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectDecisions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDecisions::CopyFrom(const ObjectDecisions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectDecisions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDecisions::IsInitialized() const {
  return true;
}

void ObjectDecisions::Swap(ObjectDecisions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDecisions::InternalSwap(ObjectDecisions* other) {
  using std::swap;
  CastToBase(&decision_)->InternalSwap(CastToBase(&other->decision_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDecisions::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StopLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopLine::kLaneIdFieldNumber;
const int StopLine::kDistanceSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopLine::StopLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_StopLine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.StopLine)
}
StopLine::StopLine(const StopLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lane_id().size() > 0) {
    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  distance_s_ = from.distance_s_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.StopLine)
}

void StopLine::SharedCtor() {
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_s_ = 0;
}

StopLine::~StopLine() {
  // @@protoc_insertion_point(destructor:apollo.decision.StopLine)
  SharedDtor();
}

void StopLine::SharedDtor() {
  lane_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StopLine::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopLine& StopLine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_StopLine.base);
  return *internal_default_instance();
}


void StopLine::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.StopLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_s_ = 0;
  _internal_metadata_.Clear();
}

bool StopLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.StopLine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string lane_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lane_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lane_id().data(), static_cast<int>(this->lane_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.StopLine.lane_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double distance_s = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.StopLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.StopLine)
  return false;
#undef DO_
}

void StopLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.StopLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string lane_id = 1;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.StopLine.lane_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lane_id(), output);
  }

  // double distance_s = 2;
  if (this->distance_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->distance_s(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.StopLine)
}

::google::protobuf::uint8* StopLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.StopLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string lane_id = 1;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.StopLine.lane_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lane_id(), target);
  }

  // double distance_s = 2;
  if (this->distance_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->distance_s(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.StopLine)
  return target;
}

size_t StopLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.StopLine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string lane_id = 1;
  if (this->lane_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lane_id());
  }

  // double distance_s = 2;
  if (this->distance_s() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StopLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.StopLine)
  GOOGLE_DCHECK_NE(&from, this);
  const StopLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.StopLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.StopLine)
    MergeFrom(*source);
  }
}

void StopLine::MergeFrom(const StopLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.StopLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_id().size() > 0) {

    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  if (from.distance_s() != 0) {
    set_distance_s(from.distance_s());
  }
}

void StopLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.StopLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopLine::CopyFrom(const StopLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.StopLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopLine::IsInitialized() const {
  return true;
}

void StopLine::Swap(StopLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopLine::InternalSwap(StopLine* other) {
  using std::swap;
  lane_id_.Swap(&other->lane_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(distance_s_, other->distance_s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StopLine::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainStop::InitAsDefaultInstance() {
  ::apollo::decision::_MainStop_default_instance_._instance.get_mutable()->enforced_line_ = const_cast< ::apollo::decision::StopLine*>(
      ::apollo::decision::StopLine::internal_default_instance());
  ::apollo::decision::_MainStop_default_instance_._instance.get_mutable()->preferred_start_ = const_cast< ::apollo::decision::StopLine*>(
      ::apollo::decision::StopLine::internal_default_instance());
  ::apollo::decision::_MainStop_default_instance_._instance.get_mutable()->preferred_end_ = const_cast< ::apollo::decision::StopLine*>(
      ::apollo::decision::StopLine::internal_default_instance());
  ::apollo::decision::_MainStop_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void MainStop::clear_stop_point() {
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainStop::kEnforcedLineFieldNumber;
const int MainStop::kPreferredStartFieldNumber;
const int MainStop::kPreferredEndFieldNumber;
const int MainStop::kReasonFieldNumber;
const int MainStop::kReasonCodeFieldNumber;
const int MainStop::kStopPointFieldNumber;
const int MainStop::kStopHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainStop::MainStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainStop)
}
MainStop::MainStop(const MainStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_enforced_line()) {
    enforced_line_ = new ::apollo::decision::StopLine(*from.enforced_line_);
  } else {
    enforced_line_ = NULL;
  }
  if (from.has_preferred_start()) {
    preferred_start_ = new ::apollo::decision::StopLine(*from.preferred_start_);
  } else {
    preferred_start_ = NULL;
  }
  if (from.has_preferred_end()) {
    preferred_end_ = new ::apollo::decision::StopLine(*from.preferred_end_);
  } else {
    preferred_end_ = NULL;
  }
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  ::memcpy(&stop_heading_, &from.stop_heading_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_code_) -
    reinterpret_cast<char*>(&stop_heading_)) + sizeof(reason_code_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainStop)
}

void MainStop::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&enforced_line_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_code_) -
      reinterpret_cast<char*>(&enforced_line_)) + sizeof(reason_code_));
}

MainStop::~MainStop() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainStop)
  SharedDtor();
}

void MainStop::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete enforced_line_;
  if (this != internal_default_instance()) delete preferred_start_;
  if (this != internal_default_instance()) delete preferred_end_;
  if (this != internal_default_instance()) delete stop_point_;
}

void MainStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainStop::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainStop& MainStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainStop.base);
  return *internal_default_instance();
}


void MainStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && enforced_line_ != NULL) {
    delete enforced_line_;
  }
  enforced_line_ = NULL;
  if (GetArenaNoVirtual() == NULL && preferred_start_ != NULL) {
    delete preferred_start_;
  }
  preferred_start_ = NULL;
  if (GetArenaNoVirtual() == NULL && preferred_end_ != NULL) {
    delete preferred_end_;
  }
  preferred_end_ = NULL;
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
  ::memset(&stop_heading_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_code_) -
      reinterpret_cast<char*>(&stop_heading_)) + sizeof(reason_code_));
  _internal_metadata_.Clear();
}

bool MainStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.StopLine enforced_line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enforced_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.StopLine preferred_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.StopLine preferred_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preferred_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.MainStop.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.StopReasonCode reason_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason_code(static_cast< ::apollo::decision::StopReasonCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU stop_point = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double stop_heading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stop_heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainStop)
  return false;
#undef DO_
}

void MainStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.StopLine enforced_line = 1;
  if (this->has_enforced_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_enforced_line(), output);
  }

  // .apollo.decision.StopLine preferred_start = 2;
  if (this->has_preferred_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_preferred_start(), output);
  }

  // .apollo.decision.StopLine preferred_end = 3;
  if (this->has_preferred_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_preferred_end(), output);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainStop.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  // .apollo.decision.StopReasonCode reason_code = 5;
  if (this->reason_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->reason_code(), output);
  }

  // .apollo.common.PointENU stop_point = 6;
  if (this->has_stop_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_stop_point(), output);
  }

  // double stop_heading = 7;
  if (this->stop_heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->stop_heading(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainStop)
}

::google::protobuf::uint8* MainStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.StopLine enforced_line = 1;
  if (this->has_enforced_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_enforced_line(), deterministic, target);
  }

  // .apollo.decision.StopLine preferred_start = 2;
  if (this->has_preferred_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_preferred_start(), deterministic, target);
  }

  // .apollo.decision.StopLine preferred_end = 3;
  if (this->has_preferred_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_preferred_end(), deterministic, target);
  }

  // string reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainStop.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reason(), target);
  }

  // .apollo.decision.StopReasonCode reason_code = 5;
  if (this->reason_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->reason_code(), target);
  }

  // .apollo.common.PointENU stop_point = 6;
  if (this->has_stop_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_stop_point(), deterministic, target);
  }

  // double stop_heading = 7;
  if (this->stop_heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->stop_heading(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainStop)
  return target;
}

size_t MainStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainStop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .apollo.decision.StopLine enforced_line = 1;
  if (this->has_enforced_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *enforced_line_);
  }

  // .apollo.decision.StopLine preferred_start = 2;
  if (this->has_preferred_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_start_);
  }

  // .apollo.decision.StopLine preferred_end = 3;
  if (this->has_preferred_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preferred_end_);
  }

  // .apollo.common.PointENU stop_point = 6;
  if (this->has_stop_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stop_point_);
  }

  // double stop_heading = 7;
  if (this->stop_heading() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.StopReasonCode reason_code = 5;
  if (this->reason_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainStop)
  GOOGLE_DCHECK_NE(&from, this);
  const MainStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainStop)
    MergeFrom(*source);
  }
}

void MainStop::MergeFrom(const MainStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_enforced_line()) {
    mutable_enforced_line()->::apollo::decision::StopLine::MergeFrom(from.enforced_line());
  }
  if (from.has_preferred_start()) {
    mutable_preferred_start()->::apollo::decision::StopLine::MergeFrom(from.preferred_start());
  }
  if (from.has_preferred_end()) {
    mutable_preferred_end()->::apollo::decision::StopLine::MergeFrom(from.preferred_end());
  }
  if (from.has_stop_point()) {
    mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
  }
  if (from.stop_heading() != 0) {
    set_stop_heading(from.stop_heading());
  }
  if (from.reason_code() != 0) {
    set_reason_code(from.reason_code());
  }
}

void MainStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainStop::CopyFrom(const MainStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainStop::IsInitialized() const {
  return true;
}

void MainStop::Swap(MainStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainStop::InternalSwap(MainStop* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(enforced_line_, other->enforced_line_);
  swap(preferred_start_, other->preferred_start_);
  swap(preferred_end_, other->preferred_end_);
  swap(stop_point_, other->stop_point_);
  swap(stop_heading_, other->stop_heading_);
  swap(reason_code_, other->reason_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainStop::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmergencyStopHardBrake::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmergencyStopHardBrake::EmergencyStopHardBrake()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.EmergencyStopHardBrake)
}
EmergencyStopHardBrake::EmergencyStopHardBrake(const EmergencyStopHardBrake& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.EmergencyStopHardBrake)
}

void EmergencyStopHardBrake::SharedCtor() {
}

EmergencyStopHardBrake::~EmergencyStopHardBrake() {
  // @@protoc_insertion_point(destructor:apollo.decision.EmergencyStopHardBrake)
  SharedDtor();
}

void EmergencyStopHardBrake::SharedDtor() {
}

void EmergencyStopHardBrake::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmergencyStopHardBrake::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmergencyStopHardBrake& EmergencyStopHardBrake::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopHardBrake.base);
  return *internal_default_instance();
}


void EmergencyStopHardBrake::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EmergencyStopHardBrake::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.EmergencyStopHardBrake)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.EmergencyStopHardBrake)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.EmergencyStopHardBrake)
  return false;
#undef DO_
}

void EmergencyStopHardBrake::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.EmergencyStopHardBrake)
}

::google::protobuf::uint8* EmergencyStopHardBrake::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.EmergencyStopHardBrake)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.EmergencyStopHardBrake)
  return target;
}

size_t EmergencyStopHardBrake::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.EmergencyStopHardBrake)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmergencyStopHardBrake::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.EmergencyStopHardBrake)
  GOOGLE_DCHECK_NE(&from, this);
  const EmergencyStopHardBrake* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmergencyStopHardBrake>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.EmergencyStopHardBrake)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.EmergencyStopHardBrake)
    MergeFrom(*source);
  }
}

void EmergencyStopHardBrake::MergeFrom(const EmergencyStopHardBrake& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.EmergencyStopHardBrake)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmergencyStopHardBrake::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.EmergencyStopHardBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmergencyStopHardBrake::CopyFrom(const EmergencyStopHardBrake& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.EmergencyStopHardBrake)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmergencyStopHardBrake::IsInitialized() const {
  return true;
}

void EmergencyStopHardBrake::Swap(EmergencyStopHardBrake* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmergencyStopHardBrake::InternalSwap(EmergencyStopHardBrake* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmergencyStopHardBrake::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmergencyStopCruiseToStop::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmergencyStopCruiseToStop::EmergencyStopCruiseToStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.EmergencyStopCruiseToStop)
}
EmergencyStopCruiseToStop::EmergencyStopCruiseToStop(const EmergencyStopCruiseToStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.EmergencyStopCruiseToStop)
}

void EmergencyStopCruiseToStop::SharedCtor() {
}

EmergencyStopCruiseToStop::~EmergencyStopCruiseToStop() {
  // @@protoc_insertion_point(destructor:apollo.decision.EmergencyStopCruiseToStop)
  SharedDtor();
}

void EmergencyStopCruiseToStop::SharedDtor() {
}

void EmergencyStopCruiseToStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmergencyStopCruiseToStop::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmergencyStopCruiseToStop& EmergencyStopCruiseToStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_EmergencyStopCruiseToStop.base);
  return *internal_default_instance();
}


void EmergencyStopCruiseToStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EmergencyStopCruiseToStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.EmergencyStopCruiseToStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.EmergencyStopCruiseToStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.EmergencyStopCruiseToStop)
  return false;
#undef DO_
}

void EmergencyStopCruiseToStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.EmergencyStopCruiseToStop)
}

::google::protobuf::uint8* EmergencyStopCruiseToStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.EmergencyStopCruiseToStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.EmergencyStopCruiseToStop)
  return target;
}

size_t EmergencyStopCruiseToStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.EmergencyStopCruiseToStop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmergencyStopCruiseToStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.EmergencyStopCruiseToStop)
  GOOGLE_DCHECK_NE(&from, this);
  const EmergencyStopCruiseToStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmergencyStopCruiseToStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.EmergencyStopCruiseToStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.EmergencyStopCruiseToStop)
    MergeFrom(*source);
  }
}

void EmergencyStopCruiseToStop::MergeFrom(const EmergencyStopCruiseToStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.EmergencyStopCruiseToStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EmergencyStopCruiseToStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.EmergencyStopCruiseToStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmergencyStopCruiseToStop::CopyFrom(const EmergencyStopCruiseToStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.EmergencyStopCruiseToStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmergencyStopCruiseToStop::IsInitialized() const {
  return true;
}

void EmergencyStopCruiseToStop::Swap(EmergencyStopCruiseToStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmergencyStopCruiseToStop::InternalSwap(EmergencyStopCruiseToStop* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmergencyStopCruiseToStop::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainEmergencyStop::InitAsDefaultInstance() {
  ::apollo::decision::_MainEmergencyStop_default_instance_.hard_brake_ = const_cast< ::apollo::decision::EmergencyStopHardBrake*>(
      ::apollo::decision::EmergencyStopHardBrake::internal_default_instance());
  ::apollo::decision::_MainEmergencyStop_default_instance_.cruise_to_stop_ = const_cast< ::apollo::decision::EmergencyStopCruiseToStop*>(
      ::apollo::decision::EmergencyStopCruiseToStop::internal_default_instance());
}
void MainEmergencyStop::set_allocated_hard_brake(::apollo::decision::EmergencyStopHardBrake* hard_brake) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (hard_brake) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hard_brake = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hard_brake, submessage_arena);
    }
    set_has_hard_brake();
    task_.hard_brake_ = hard_brake;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainEmergencyStop.hard_brake)
}
void MainEmergencyStop::set_allocated_cruise_to_stop(::apollo::decision::EmergencyStopCruiseToStop* cruise_to_stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (cruise_to_stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cruise_to_stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cruise_to_stop, submessage_arena);
    }
    set_has_cruise_to_stop();
    task_.cruise_to_stop_ = cruise_to_stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainEmergencyStop.cruise_to_stop)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainEmergencyStop::kReasonFieldNumber;
const int MainEmergencyStop::kReasonCodeFieldNumber;
const int MainEmergencyStop::kHardBrakeFieldNumber;
const int MainEmergencyStop::kCruiseToStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainEmergencyStop::MainEmergencyStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainEmergencyStop.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainEmergencyStop)
}
MainEmergencyStop::MainEmergencyStop(const MainEmergencyStop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  reason_code_ = from.reason_code_;
  clear_has_task();
  switch (from.task_case()) {
    case kHardBrake: {
      mutable_hard_brake()->::apollo::decision::EmergencyStopHardBrake::MergeFrom(from.hard_brake());
      break;
    }
    case kCruiseToStop: {
      mutable_cruise_to_stop()->::apollo::decision::EmergencyStopCruiseToStop::MergeFrom(from.cruise_to_stop());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainEmergencyStop)
}

void MainEmergencyStop::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_code_ = 0;
  clear_has_task();
}

MainEmergencyStop::~MainEmergencyStop() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainEmergencyStop)
  SharedDtor();
}

void MainEmergencyStop::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_task()) {
    clear_task();
  }
}

void MainEmergencyStop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainEmergencyStop::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainEmergencyStop& MainEmergencyStop::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainEmergencyStop.base);
  return *internal_default_instance();
}


void MainEmergencyStop::clear_task() {
// @@protoc_insertion_point(one_of_clear_start:apollo.decision.MainEmergencyStop)
  switch (task_case()) {
    case kHardBrake: {
      delete task_.hard_brake_;
      break;
    }
    case kCruiseToStop: {
      delete task_.cruise_to_stop_;
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TASK_NOT_SET;
}


void MainEmergencyStop::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_code_ = 0;
  clear_task();
  _internal_metadata_.Clear();
}

bool MainEmergencyStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainEmergencyStop)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.MainEmergencyStop.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainEmergencyStop.ReasonCode reason_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason_code(static_cast< ::apollo::decision::MainEmergencyStop_ReasonCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.EmergencyStopHardBrake hard_brake = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hard_brake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.EmergencyStopCruiseToStop cruise_to_stop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cruise_to_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainEmergencyStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainEmergencyStop)
  return false;
#undef DO_
}

void MainEmergencyStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainEmergencyStop.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reason(), output);
  }

  // .apollo.decision.MainEmergencyStop.ReasonCode reason_code = 2;
  if (this->reason_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason_code(), output);
  }

  // .apollo.decision.EmergencyStopHardBrake hard_brake = 3;
  if (has_hard_brake()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_hard_brake(), output);
  }

  // .apollo.decision.EmergencyStopCruiseToStop cruise_to_stop = 4;
  if (has_cruise_to_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_cruise_to_stop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainEmergencyStop)
}

::google::protobuf::uint8* MainEmergencyStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainEmergencyStop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainEmergencyStop.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reason(), target);
  }

  // .apollo.decision.MainEmergencyStop.ReasonCode reason_code = 2;
  if (this->reason_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason_code(), target);
  }

  // .apollo.decision.EmergencyStopHardBrake hard_brake = 3;
  if (has_hard_brake()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_hard_brake(), deterministic, target);
  }

  // .apollo.decision.EmergencyStopCruiseToStop cruise_to_stop = 4;
  if (has_cruise_to_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_cruise_to_stop(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainEmergencyStop)
  return target;
}

size_t MainEmergencyStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainEmergencyStop)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 1;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .apollo.decision.MainEmergencyStop.ReasonCode reason_code = 2;
  if (this->reason_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason_code());
  }

  switch (task_case()) {
    // .apollo.decision.EmergencyStopHardBrake hard_brake = 3;
    case kHardBrake: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.hard_brake_);
      break;
    }
    // .apollo.decision.EmergencyStopCruiseToStop cruise_to_stop = 4;
    case kCruiseToStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.cruise_to_stop_);
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainEmergencyStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainEmergencyStop)
  GOOGLE_DCHECK_NE(&from, this);
  const MainEmergencyStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainEmergencyStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainEmergencyStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainEmergencyStop)
    MergeFrom(*source);
  }
}

void MainEmergencyStop::MergeFrom(const MainEmergencyStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainEmergencyStop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.reason_code() != 0) {
    set_reason_code(from.reason_code());
  }
  switch (from.task_case()) {
    case kHardBrake: {
      mutable_hard_brake()->::apollo::decision::EmergencyStopHardBrake::MergeFrom(from.hard_brake());
      break;
    }
    case kCruiseToStop: {
      mutable_cruise_to_stop()->::apollo::decision::EmergencyStopCruiseToStop::MergeFrom(from.cruise_to_stop());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
}

void MainEmergencyStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainEmergencyStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainEmergencyStop::CopyFrom(const MainEmergencyStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainEmergencyStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainEmergencyStop::IsInitialized() const {
  return true;
}

void MainEmergencyStop::Swap(MainEmergencyStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainEmergencyStop::InternalSwap(MainEmergencyStop* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(reason_code_, other->reason_code_);
  swap(task_, other->task_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainEmergencyStop::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainCruise::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainCruise::MainCruise()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainCruise.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainCruise)
}
MainCruise::MainCruise(const MainCruise& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainCruise)
}

void MainCruise::SharedCtor() {
}

MainCruise::~MainCruise() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainCruise)
  SharedDtor();
}

void MainCruise::SharedDtor() {
}

void MainCruise::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainCruise::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainCruise& MainCruise::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainCruise.base);
  return *internal_default_instance();
}


void MainCruise::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MainCruise::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainCruise)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainCruise)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainCruise)
  return false;
#undef DO_
}

void MainCruise::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainCruise)
}

::google::protobuf::uint8* MainCruise::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainCruise)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainCruise)
  return target;
}

size_t MainCruise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainCruise)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainCruise::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainCruise)
  GOOGLE_DCHECK_NE(&from, this);
  const MainCruise* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainCruise>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainCruise)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainCruise)
    MergeFrom(*source);
  }
}

void MainCruise::MergeFrom(const MainCruise& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainCruise)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MainCruise::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainCruise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainCruise::CopyFrom(const MainCruise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainCruise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCruise::IsInitialized() const {
  return true;
}

void MainCruise::Swap(MainCruise* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainCruise::InternalSwap(MainCruise* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainCruise::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainChangeLane::InitAsDefaultInstance() {
  ::apollo::decision::_MainChangeLane_default_instance_._instance.get_mutable()->default_lane_stop_ = const_cast< ::apollo::decision::MainStop*>(
      ::apollo::decision::MainStop::internal_default_instance());
  ::apollo::decision::_MainChangeLane_default_instance_._instance.get_mutable()->target_lane_stop_ = const_cast< ::apollo::decision::MainStop*>(
      ::apollo::decision::MainStop::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainChangeLane::kTypeFieldNumber;
const int MainChangeLane::kDefaultLaneFieldNumber;
const int MainChangeLane::kDefaultLaneStopFieldNumber;
const int MainChangeLane::kTargetLaneStopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainChangeLane::MainChangeLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainChangeLane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainChangeLane)
}
MainChangeLane::MainChangeLane(const MainChangeLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      default_lane_(from.default_lane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_default_lane_stop()) {
    default_lane_stop_ = new ::apollo::decision::MainStop(*from.default_lane_stop_);
  } else {
    default_lane_stop_ = NULL;
  }
  if (from.has_target_lane_stop()) {
    target_lane_stop_ = new ::apollo::decision::MainStop(*from.target_lane_stop_);
  } else {
    target_lane_stop_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainChangeLane)
}

void MainChangeLane::SharedCtor() {
  ::memset(&default_lane_stop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&default_lane_stop_)) + sizeof(type_));
}

MainChangeLane::~MainChangeLane() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainChangeLane)
  SharedDtor();
}

void MainChangeLane::SharedDtor() {
  if (this != internal_default_instance()) delete default_lane_stop_;
  if (this != internal_default_instance()) delete target_lane_stop_;
}

void MainChangeLane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainChangeLane::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainChangeLane& MainChangeLane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainChangeLane.base);
  return *internal_default_instance();
}


void MainChangeLane::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  default_lane_.Clear();
  if (GetArenaNoVirtual() == NULL && default_lane_stop_ != NULL) {
    delete default_lane_stop_;
  }
  default_lane_stop_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_lane_stop_ != NULL) {
    delete target_lane_stop_;
  }
  target_lane_stop_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool MainChangeLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainChangeLane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.MainChangeLane.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::decision::MainChangeLane_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.decision.TargetLane default_lane = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_default_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainStop default_lane_stop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_lane_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainStop target_lane_stop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_lane_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainChangeLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainChangeLane)
  return false;
#undef DO_
}

void MainChangeLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainChangeLane.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // repeated .apollo.decision.TargetLane default_lane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->default_lane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->default_lane(static_cast<int>(i)),
      output);
  }

  // .apollo.decision.MainStop default_lane_stop = 3;
  if (this->has_default_lane_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_default_lane_stop(), output);
  }

  // .apollo.decision.MainStop target_lane_stop = 4;
  if (this->has_target_lane_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_target_lane_stop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainChangeLane)
}

::google::protobuf::uint8* MainChangeLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainChangeLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainChangeLane.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // repeated .apollo.decision.TargetLane default_lane = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->default_lane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->default_lane(static_cast<int>(i)), deterministic, target);
  }

  // .apollo.decision.MainStop default_lane_stop = 3;
  if (this->has_default_lane_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_default_lane_stop(), deterministic, target);
  }

  // .apollo.decision.MainStop target_lane_stop = 4;
  if (this->has_target_lane_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_target_lane_stop(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainChangeLane)
  return target;
}

size_t MainChangeLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainChangeLane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.decision.TargetLane default_lane = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->default_lane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->default_lane(static_cast<int>(i)));
    }
  }

  // .apollo.decision.MainStop default_lane_stop = 3;
  if (this->has_default_lane_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *default_lane_stop_);
  }

  // .apollo.decision.MainStop target_lane_stop = 4;
  if (this->has_target_lane_stop()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *target_lane_stop_);
  }

  // .apollo.decision.MainChangeLane.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainChangeLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainChangeLane)
  GOOGLE_DCHECK_NE(&from, this);
  const MainChangeLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainChangeLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainChangeLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainChangeLane)
    MergeFrom(*source);
  }
}

void MainChangeLane::MergeFrom(const MainChangeLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainChangeLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  default_lane_.MergeFrom(from.default_lane_);
  if (from.has_default_lane_stop()) {
    mutable_default_lane_stop()->::apollo::decision::MainStop::MergeFrom(from.default_lane_stop());
  }
  if (from.has_target_lane_stop()) {
    mutable_target_lane_stop()->::apollo::decision::MainStop::MergeFrom(from.target_lane_stop());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MainChangeLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainChangeLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainChangeLane::CopyFrom(const MainChangeLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainChangeLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainChangeLane::IsInitialized() const {
  return true;
}

void MainChangeLane::Swap(MainChangeLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainChangeLane::InternalSwap(MainChangeLane* other) {
  using std::swap;
  CastToBase(&default_lane_)->InternalSwap(CastToBase(&other->default_lane_));
  swap(default_lane_stop_, other->default_lane_stop_);
  swap(target_lane_stop_, other->target_lane_stop_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainChangeLane::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainMissionComplete::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainMissionComplete::MainMissionComplete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainMissionComplete.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainMissionComplete)
}
MainMissionComplete::MainMissionComplete(const MainMissionComplete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainMissionComplete)
}

void MainMissionComplete::SharedCtor() {
}

MainMissionComplete::~MainMissionComplete() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainMissionComplete)
  SharedDtor();
}

void MainMissionComplete::SharedDtor() {
}

void MainMissionComplete::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainMissionComplete::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainMissionComplete& MainMissionComplete::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainMissionComplete.base);
  return *internal_default_instance();
}


void MainMissionComplete::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MainMissionComplete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainMissionComplete)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainMissionComplete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainMissionComplete)
  return false;
#undef DO_
}

void MainMissionComplete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainMissionComplete)
}

::google::protobuf::uint8* MainMissionComplete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainMissionComplete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainMissionComplete)
  return target;
}

size_t MainMissionComplete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainMissionComplete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainMissionComplete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainMissionComplete)
  GOOGLE_DCHECK_NE(&from, this);
  const MainMissionComplete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainMissionComplete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainMissionComplete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainMissionComplete)
    MergeFrom(*source);
  }
}

void MainMissionComplete::MergeFrom(const MainMissionComplete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainMissionComplete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MainMissionComplete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainMissionComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainMissionComplete::CopyFrom(const MainMissionComplete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainMissionComplete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainMissionComplete::IsInitialized() const {
  return true;
}

void MainMissionComplete::Swap(MainMissionComplete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainMissionComplete::InternalSwap(MainMissionComplete* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainMissionComplete::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainNotReady::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainNotReady::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainNotReady::MainNotReady()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainNotReady.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainNotReady)
}
MainNotReady::MainNotReady(const MainNotReady& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainNotReady)
}

void MainNotReady::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MainNotReady::~MainNotReady() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainNotReady)
  SharedDtor();
}

void MainNotReady::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MainNotReady::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainNotReady::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainNotReady& MainNotReady::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainNotReady.base);
  return *internal_default_instance();
}


void MainNotReady::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MainNotReady::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainNotReady)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.MainNotReady.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainNotReady)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainNotReady)
  return false;
#undef DO_
}

void MainNotReady::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainNotReady.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainNotReady)
}

::google::protobuf::uint8* MainNotReady::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainNotReady)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string reason = 1;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MainNotReady.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainNotReady)
  return target;
}

size_t MainNotReady::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainNotReady)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 1;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainNotReady::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainNotReady)
  GOOGLE_DCHECK_NE(&from, this);
  const MainNotReady* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainNotReady>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainNotReady)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainNotReady)
    MergeFrom(*source);
  }
}

void MainNotReady::MergeFrom(const MainNotReady& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainNotReady)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
}

void MainNotReady::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainNotReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainNotReady::CopyFrom(const MainNotReady& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainNotReady)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainNotReady::IsInitialized() const {
  return true;
}

void MainNotReady::Swap(MainNotReady* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainNotReady::InternalSwap(MainNotReady* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainNotReady::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainParking::InitAsDefaultInstance() {
  ::apollo::decision::_MainParking_default_instance_._instance.get_mutable()->stop_point_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
}
void MainParking::clear_stop_point() {
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
}
void MainParking::clear_parking_polygon() {
  parking_polygon_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainParking::kTypeFieldNumber;
const int MainParking::kHeadingFieldNumber;
const int MainParking::kStopPointFieldNumber;
const int MainParking::kParkingPolygonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainParking::MainParking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainParking.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainParking)
}
MainParking::MainParking(const MainParking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parking_polygon_(from.parking_polygon_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stop_point()) {
    stop_point_ = new ::apollo::common::PointENU(*from.stop_point_);
  } else {
    stop_point_ = NULL;
  }
  ::memcpy(&heading_, &from.heading_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&heading_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainParking)
}

void MainParking::SharedCtor() {
  ::memset(&stop_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&stop_point_)) + sizeof(type_));
}

MainParking::~MainParking() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainParking)
  SharedDtor();
}

void MainParking::SharedDtor() {
  if (this != internal_default_instance()) delete stop_point_;
}

void MainParking::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainParking::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainParking& MainParking::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainParking.base);
  return *internal_default_instance();
}


void MainParking::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parking_polygon_.Clear();
  if (GetArenaNoVirtual() == NULL && stop_point_ != NULL) {
    delete stop_point_;
  }
  stop_point_ = NULL;
  ::memset(&heading_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&heading_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MainParking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainParking)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.MainParking.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::decision::MainParking_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.common.PointENU stop_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.PointENU parking_polygon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parking_polygon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainParking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainParking)
  return false;
#undef DO_
}

void MainParking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainParking.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // double heading = 2;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->heading(), output);
  }

  // .apollo.common.PointENU stop_point = 3;
  if (this->has_stop_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_stop_point(), output);
  }

  // repeated .apollo.common.PointENU parking_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parking_polygon_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->parking_polygon(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainParking)
}

::google::protobuf::uint8* MainParking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainParking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainParking.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // double heading = 2;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->heading(), target);
  }

  // .apollo.common.PointENU stop_point = 3;
  if (this->has_stop_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_stop_point(), deterministic, target);
  }

  // repeated .apollo.common.PointENU parking_polygon = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parking_polygon_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->parking_polygon(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainParking)
  return target;
}

size_t MainParking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainParking)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.common.PointENU parking_polygon = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->parking_polygon_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parking_polygon(static_cast<int>(i)));
    }
  }

  // .apollo.common.PointENU stop_point = 3;
  if (this->has_stop_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stop_point_);
  }

  // double heading = 2;
  if (this->heading() != 0) {
    total_size += 1 + 8;
  }

  // .apollo.decision.MainParking.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainParking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainParking)
  GOOGLE_DCHECK_NE(&from, this);
  const MainParking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainParking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainParking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainParking)
    MergeFrom(*source);
  }
}

void MainParking::MergeFrom(const MainParking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainParking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parking_polygon_.MergeFrom(from.parking_polygon_);
  if (from.has_stop_point()) {
    mutable_stop_point()->::apollo::common::PointENU::MergeFrom(from.stop_point());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MainParking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainParking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainParking::CopyFrom(const MainParking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainParking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainParking::IsInitialized() const {
  return true;
}

void MainParking::Swap(MainParking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainParking::InternalSwap(MainParking* other) {
  using std::swap;
  CastToBase(&parking_polygon_)->InternalSwap(CastToBase(&other->parking_polygon_));
  swap(stop_point_, other->stop_point_);
  swap(heading_, other->heading_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainParking::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainDecision::InitAsDefaultInstance() {
  ::apollo::decision::_MainDecision_default_instance_.cruise_ = const_cast< ::apollo::decision::MainCruise*>(
      ::apollo::decision::MainCruise::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.stop_ = const_cast< ::apollo::decision::MainStop*>(
      ::apollo::decision::MainStop::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.estop_ = const_cast< ::apollo::decision::MainEmergencyStop*>(
      ::apollo::decision::MainEmergencyStop::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.change_lane_ = const_cast< ::apollo::decision::MainChangeLane*>(
      ::apollo::decision::MainChangeLane::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.mission_complete_ = const_cast< ::apollo::decision::MainMissionComplete*>(
      ::apollo::decision::MainMissionComplete::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.not_ready_ = const_cast< ::apollo::decision::MainNotReady*>(
      ::apollo::decision::MainNotReady::internal_default_instance());
  ::apollo::decision::_MainDecision_default_instance_.parking_ = const_cast< ::apollo::decision::MainParking*>(
      ::apollo::decision::MainParking::internal_default_instance());
}
void MainDecision::set_allocated_cruise(::apollo::decision::MainCruise* cruise) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (cruise) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cruise = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cruise, submessage_arena);
    }
    set_has_cruise();
    task_.cruise_ = cruise;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.cruise)
}
void MainDecision::set_allocated_stop(::apollo::decision::MainStop* stop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (stop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stop, submessage_arena);
    }
    set_has_stop();
    task_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.stop)
}
void MainDecision::set_allocated_estop(::apollo::decision::MainEmergencyStop* estop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (estop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      estop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, estop, submessage_arena);
    }
    set_has_estop();
    task_.estop_ = estop;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.estop)
}
void MainDecision::set_allocated_change_lane(::apollo::decision::MainChangeLane* change_lane) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (change_lane) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      change_lane = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, change_lane, submessage_arena);
    }
    set_has_change_lane();
    task_.change_lane_ = change_lane;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.change_lane)
}
void MainDecision::set_allocated_mission_complete(::apollo::decision::MainMissionComplete* mission_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (mission_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mission_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mission_complete, submessage_arena);
    }
    set_has_mission_complete();
    task_.mission_complete_ = mission_complete;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.mission_complete)
}
void MainDecision::set_allocated_not_ready(::apollo::decision::MainNotReady* not_ready) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (not_ready) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      not_ready = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, not_ready, submessage_arena);
    }
    set_has_not_ready();
    task_.not_ready_ = not_ready;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.not_ready)
}
void MainDecision::set_allocated_parking(::apollo::decision::MainParking* parking) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_task();
  if (parking) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parking = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parking, submessage_arena);
    }
    set_has_parking();
    task_.parking_ = parking;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.decision.MainDecision.parking)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainDecision::kCruiseFieldNumber;
const int MainDecision::kStopFieldNumber;
const int MainDecision::kEstopFieldNumber;
const int MainDecision::kChangeLaneFieldNumber;
const int MainDecision::kMissionCompleteFieldNumber;
const int MainDecision::kNotReadyFieldNumber;
const int MainDecision::kParkingFieldNumber;
const int MainDecision::kTargetLaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainDecision::MainDecision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainDecision.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MainDecision)
}
MainDecision::MainDecision(const MainDecision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      target_lane_(from.target_lane_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_task();
  switch (from.task_case()) {
    case kCruise: {
      mutable_cruise()->::apollo::decision::MainCruise::MergeFrom(from.cruise());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::decision::MainStop::MergeFrom(from.stop());
      break;
    }
    case kEstop: {
      mutable_estop()->::apollo::decision::MainEmergencyStop::MergeFrom(from.estop());
      break;
    }
    case kChangeLane: {
      mutable_change_lane()->::apollo::decision::MainChangeLane::MergeFrom(from.change_lane());
      break;
    }
    case kMissionComplete: {
      mutable_mission_complete()->::apollo::decision::MainMissionComplete::MergeFrom(from.mission_complete());
      break;
    }
    case kNotReady: {
      mutable_not_ready()->::apollo::decision::MainNotReady::MergeFrom(from.not_ready());
      break;
    }
    case kParking: {
      mutable_parking()->::apollo::decision::MainParking::MergeFrom(from.parking());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MainDecision)
}

void MainDecision::SharedCtor() {
  clear_has_task();
}

MainDecision::~MainDecision() {
  // @@protoc_insertion_point(destructor:apollo.decision.MainDecision)
  SharedDtor();
}

void MainDecision::SharedDtor() {
  if (has_task()) {
    clear_task();
  }
}

void MainDecision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MainDecision::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainDecision& MainDecision::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MainDecision.base);
  return *internal_default_instance();
}


void MainDecision::clear_task() {
// @@protoc_insertion_point(one_of_clear_start:apollo.decision.MainDecision)
  switch (task_case()) {
    case kCruise: {
      delete task_.cruise_;
      break;
    }
    case kStop: {
      delete task_.stop_;
      break;
    }
    case kEstop: {
      delete task_.estop_;
      break;
    }
    case kChangeLane: {
      delete task_.change_lane_;
      break;
    }
    case kMissionComplete: {
      delete task_.mission_complete_;
      break;
    }
    case kNotReady: {
      delete task_.not_ready_;
      break;
    }
    case kParking: {
      delete task_.parking_;
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TASK_NOT_SET;
}


void MainDecision::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_lane_.Clear();
  clear_task();
  _internal_metadata_.Clear();
}

bool MainDecision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MainDecision)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.MainCruise cruise = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cruise()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainStop stop = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainEmergencyStop estop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_estop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainChangeLane change_lane = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_change_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.decision.TargetLane target_lane = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_target_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainMissionComplete mission_complete = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mission_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainNotReady not_ready = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_not_ready()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainParking parking = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parking()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MainDecision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MainDecision)
  return false;
#undef DO_
}

void MainDecision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainCruise cruise = 1;
  if (has_cruise()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cruise(), output);
  }

  // .apollo.decision.MainStop stop = 2;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_stop(), output);
  }

  // .apollo.decision.MainEmergencyStop estop = 3;
  if (has_estop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_estop(), output);
  }

  // .apollo.decision.MainChangeLane change_lane = 4;
  if (has_change_lane()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_change_lane(), output);
  }

  // repeated .apollo.decision.TargetLane target_lane = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_lane_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->target_lane(static_cast<int>(i)),
      output);
  }

  // .apollo.decision.MainMissionComplete mission_complete = 6;
  if (has_mission_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_mission_complete(), output);
  }

  // .apollo.decision.MainNotReady not_ready = 7;
  if (has_not_ready()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_not_ready(), output);
  }

  // .apollo.decision.MainParking parking = 8;
  if (has_parking()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_parking(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MainDecision)
}

::google::protobuf::uint8* MainDecision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MainDecision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MainCruise cruise = 1;
  if (has_cruise()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cruise(), deterministic, target);
  }

  // .apollo.decision.MainStop stop = 2;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_stop(), deterministic, target);
  }

  // .apollo.decision.MainEmergencyStop estop = 3;
  if (has_estop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_estop(), deterministic, target);
  }

  // .apollo.decision.MainChangeLane change_lane = 4;
  if (has_change_lane()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_change_lane(), deterministic, target);
  }

  // repeated .apollo.decision.TargetLane target_lane = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->target_lane_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->target_lane(static_cast<int>(i)), deterministic, target);
  }

  // .apollo.decision.MainMissionComplete mission_complete = 6;
  if (has_mission_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_mission_complete(), deterministic, target);
  }

  // .apollo.decision.MainNotReady not_ready = 7;
  if (has_not_ready()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_not_ready(), deterministic, target);
  }

  // .apollo.decision.MainParking parking = 8;
  if (has_parking()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_parking(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MainDecision)
  return target;
}

size_t MainDecision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MainDecision)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.decision.TargetLane target_lane = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->target_lane_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->target_lane(static_cast<int>(i)));
    }
  }

  switch (task_case()) {
    // .apollo.decision.MainCruise cruise = 1;
    case kCruise: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.cruise_);
      break;
    }
    // .apollo.decision.MainStop stop = 2;
    case kStop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.stop_);
      break;
    }
    // .apollo.decision.MainEmergencyStop estop = 3;
    case kEstop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.estop_);
      break;
    }
    // .apollo.decision.MainChangeLane change_lane = 4;
    case kChangeLane: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.change_lane_);
      break;
    }
    // .apollo.decision.MainMissionComplete mission_complete = 6;
    case kMissionComplete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.mission_complete_);
      break;
    }
    // .apollo.decision.MainNotReady not_ready = 7;
    case kNotReady: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.not_ready_);
      break;
    }
    // .apollo.decision.MainParking parking = 8;
    case kParking: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *task_.parking_);
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MainDecision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MainDecision)
  GOOGLE_DCHECK_NE(&from, this);
  const MainDecision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainDecision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MainDecision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MainDecision)
    MergeFrom(*source);
  }
}

void MainDecision::MergeFrom(const MainDecision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MainDecision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  target_lane_.MergeFrom(from.target_lane_);
  switch (from.task_case()) {
    case kCruise: {
      mutable_cruise()->::apollo::decision::MainCruise::MergeFrom(from.cruise());
      break;
    }
    case kStop: {
      mutable_stop()->::apollo::decision::MainStop::MergeFrom(from.stop());
      break;
    }
    case kEstop: {
      mutable_estop()->::apollo::decision::MainEmergencyStop::MergeFrom(from.estop());
      break;
    }
    case kChangeLane: {
      mutable_change_lane()->::apollo::decision::MainChangeLane::MergeFrom(from.change_lane());
      break;
    }
    case kMissionComplete: {
      mutable_mission_complete()->::apollo::decision::MainMissionComplete::MergeFrom(from.mission_complete());
      break;
    }
    case kNotReady: {
      mutable_not_ready()->::apollo::decision::MainNotReady::MergeFrom(from.not_ready());
      break;
    }
    case kParking: {
      mutable_parking()->::apollo::decision::MainParking::MergeFrom(from.parking());
      break;
    }
    case TASK_NOT_SET: {
      break;
    }
  }
}

void MainDecision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MainDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainDecision::CopyFrom(const MainDecision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MainDecision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainDecision::IsInitialized() const {
  return true;
}

void MainDecision::Swap(MainDecision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainDecision::InternalSwap(MainDecision* other) {
  using std::swap;
  CastToBase(&target_lane_)->InternalSwap(CastToBase(&other->target_lane_));
  swap(task_, other->task_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MainDecision::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MasterVehicleDebug::InitAsDefaultInstance() {
  ::apollo::decision::_MasterVehicleDebug_default_instance_._instance.get_mutable()->position_ = const_cast< ::apollo::common::PointENU*>(
      ::apollo::common::PointENU::internal_default_instance());
  ::apollo::decision::_MasterVehicleDebug_default_instance_._instance.get_mutable()->route_s_range_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_MasterVehicleDebug_default_instance_._instance.get_mutable()->route_l_range_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
}
void MasterVehicleDebug::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MasterVehicleDebug::kPositionFieldNumber;
const int MasterVehicleDebug::kCurrentLaneIdFieldNumber;
const int MasterVehicleDebug::kLaneSFieldNumber;
const int MasterVehicleDebug::kLaneLFieldNumber;
const int MasterVehicleDebug::kRouteSFieldNumber;
const int MasterVehicleDebug::kRouteLFieldNumber;
const int MasterVehicleDebug::kHeadingFieldNumber;
const int MasterVehicleDebug::kHeadingSpeedFieldNumber;
const int MasterVehicleDebug::kHeadingAccelerationFieldNumber;
const int MasterVehicleDebug::kRouteSRangeFieldNumber;
const int MasterVehicleDebug::kRouteLRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MasterVehicleDebug::MasterVehicleDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MasterVehicleDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.MasterVehicleDebug)
}
MasterVehicleDebug::MasterVehicleDebug(const MasterVehicleDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  current_lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.current_lane_id().size() > 0) {
    current_lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_lane_id_);
  }
  if (from.has_position()) {
    position_ = new ::apollo::common::PointENU(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_route_s_range()) {
    route_s_range_ = new ::apollo::decision::Range(*from.route_s_range_);
  } else {
    route_s_range_ = NULL;
  }
  if (from.has_route_l_range()) {
    route_l_range_ = new ::apollo::decision::Range(*from.route_l_range_);
  } else {
    route_l_range_ = NULL;
  }
  ::memcpy(&lane_s_, &from.lane_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&heading_acceleration_) -
    reinterpret_cast<char*>(&lane_s_)) + sizeof(heading_acceleration_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.MasterVehicleDebug)
}

void MasterVehicleDebug::SharedCtor() {
  current_lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_acceleration_) -
      reinterpret_cast<char*>(&position_)) + sizeof(heading_acceleration_));
}

MasterVehicleDebug::~MasterVehicleDebug() {
  // @@protoc_insertion_point(destructor:apollo.decision.MasterVehicleDebug)
  SharedDtor();
}

void MasterVehicleDebug::SharedDtor() {
  current_lane_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete route_s_range_;
  if (this != internal_default_instance()) delete route_l_range_;
}

void MasterVehicleDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MasterVehicleDebug::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MasterVehicleDebug& MasterVehicleDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_MasterVehicleDebug.base);
  return *internal_default_instance();
}


void MasterVehicleDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.MasterVehicleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  current_lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_s_range_ != NULL) {
    delete route_s_range_;
  }
  route_s_range_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_l_range_ != NULL) {
    delete route_l_range_;
  }
  route_l_range_ = NULL;
  ::memset(&lane_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heading_acceleration_) -
      reinterpret_cast<char*>(&lane_s_)) + sizeof(heading_acceleration_));
  _internal_metadata_.Clear();
}

bool MasterVehicleDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.MasterVehicleDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.common.PointENU position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string current_lane_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_current_lane_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.MasterVehicleDebug.current_lane_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double route_s = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &route_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double route_l = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &route_l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading_speed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double heading_acceleration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_acceleration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range route_s_range = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route_s_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range route_l_range = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route_l_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.MasterVehicleDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.MasterVehicleDebug)
  return false;
#undef DO_
}

void MasterVehicleDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.MasterVehicleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.PointENU position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // string current_lane_id = 2;
  if (this->current_lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MasterVehicleDebug.current_lane_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->current_lane_id(), output);
  }

  // double lane_s = 3;
  if (this->lane_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->lane_s(), output);
  }

  // double lane_l = 4;
  if (this->lane_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->lane_l(), output);
  }

  // double route_s = 5;
  if (this->route_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->route_s(), output);
  }

  // double route_l = 6;
  if (this->route_l() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->route_l(), output);
  }

  // double heading = 7;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->heading(), output);
  }

  // double heading_speed = 8;
  if (this->heading_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->heading_speed(), output);
  }

  // double heading_acceleration = 9;
  if (this->heading_acceleration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->heading_acceleration(), output);
  }

  // .apollo.decision.Range route_s_range = 10;
  if (this->has_route_s_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_route_s_range(), output);
  }

  // .apollo.decision.Range route_l_range = 11;
  if (this->has_route_l_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_route_l_range(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.MasterVehicleDebug)
}

::google::protobuf::uint8* MasterVehicleDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.MasterVehicleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.PointENU position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // string current_lane_id = 2;
  if (this->current_lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->current_lane_id().data(), static_cast<int>(this->current_lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.MasterVehicleDebug.current_lane_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->current_lane_id(), target);
  }

  // double lane_s = 3;
  if (this->lane_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->lane_s(), target);
  }

  // double lane_l = 4;
  if (this->lane_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->lane_l(), target);
  }

  // double route_s = 5;
  if (this->route_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->route_s(), target);
  }

  // double route_l = 6;
  if (this->route_l() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->route_l(), target);
  }

  // double heading = 7;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->heading(), target);
  }

  // double heading_speed = 8;
  if (this->heading_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->heading_speed(), target);
  }

  // double heading_acceleration = 9;
  if (this->heading_acceleration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->heading_acceleration(), target);
  }

  // .apollo.decision.Range route_s_range = 10;
  if (this->has_route_s_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_route_s_range(), deterministic, target);
  }

  // .apollo.decision.Range route_l_range = 11;
  if (this->has_route_l_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_route_l_range(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.MasterVehicleDebug)
  return target;
}

size_t MasterVehicleDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.MasterVehicleDebug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string current_lane_id = 2;
  if (this->current_lane_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->current_lane_id());
  }

  // .apollo.common.PointENU position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .apollo.decision.Range route_s_range = 10;
  if (this->has_route_s_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_s_range_);
  }

  // .apollo.decision.Range route_l_range = 11;
  if (this->has_route_l_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_l_range_);
  }

  // double lane_s = 3;
  if (this->lane_s() != 0) {
    total_size += 1 + 8;
  }

  // double lane_l = 4;
  if (this->lane_l() != 0) {
    total_size += 1 + 8;
  }

  // double route_s = 5;
  if (this->route_s() != 0) {
    total_size += 1 + 8;
  }

  // double route_l = 6;
  if (this->route_l() != 0) {
    total_size += 1 + 8;
  }

  // double heading = 7;
  if (this->heading() != 0) {
    total_size += 1 + 8;
  }

  // double heading_speed = 8;
  if (this->heading_speed() != 0) {
    total_size += 1 + 8;
  }

  // double heading_acceleration = 9;
  if (this->heading_acceleration() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MasterVehicleDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.MasterVehicleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const MasterVehicleDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MasterVehicleDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.MasterVehicleDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.MasterVehicleDebug)
    MergeFrom(*source);
  }
}

void MasterVehicleDebug::MergeFrom(const MasterVehicleDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.MasterVehicleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.current_lane_id().size() > 0) {

    current_lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.current_lane_id_);
  }
  if (from.has_position()) {
    mutable_position()->::apollo::common::PointENU::MergeFrom(from.position());
  }
  if (from.has_route_s_range()) {
    mutable_route_s_range()->::apollo::decision::Range::MergeFrom(from.route_s_range());
  }
  if (from.has_route_l_range()) {
    mutable_route_l_range()->::apollo::decision::Range::MergeFrom(from.route_l_range());
  }
  if (from.lane_s() != 0) {
    set_lane_s(from.lane_s());
  }
  if (from.lane_l() != 0) {
    set_lane_l(from.lane_l());
  }
  if (from.route_s() != 0) {
    set_route_s(from.route_s());
  }
  if (from.route_l() != 0) {
    set_route_l(from.route_l());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
  if (from.heading_speed() != 0) {
    set_heading_speed(from.heading_speed());
  }
  if (from.heading_acceleration() != 0) {
    set_heading_acceleration(from.heading_acceleration());
  }
}

void MasterVehicleDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.MasterVehicleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MasterVehicleDebug::CopyFrom(const MasterVehicleDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.MasterVehicleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MasterVehicleDebug::IsInitialized() const {
  return true;
}

void MasterVehicleDebug::Swap(MasterVehicleDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MasterVehicleDebug::InternalSwap(MasterVehicleDebug* other) {
  using std::swap;
  current_lane_id_.Swap(&other->current_lane_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(route_s_range_, other->route_s_range_);
  swap(route_l_range_, other->route_l_range_);
  swap(lane_s_, other->lane_s_);
  swap(lane_l_, other->lane_l_);
  swap(route_s_, other->route_s_);
  swap(route_l_, other->route_l_);
  swap(heading_, other->heading_);
  swap(heading_speed_, other->heading_speed_);
  swap(heading_acceleration_, other->heading_acceleration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MasterVehicleDebug::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectDebug::InitAsDefaultInstance() {
  ::apollo::decision::_ObjectDebug_default_instance_._instance.get_mutable()->route_s_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
  ::apollo::decision::_ObjectDebug_default_instance_._instance.get_mutable()->route_l_ = const_cast< ::apollo::decision::Range*>(
      ::apollo::decision::Range::internal_default_instance());
}
void ObjectDebug::clear_st_region() {
  st_region_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectDebug::kIdFieldNumber;
const int ObjectDebug::kPathIdFieldNumber;
const int ObjectDebug::kRouteSFieldNumber;
const int ObjectDebug::kRouteLFieldNumber;
const int ObjectDebug::kOnRouteFieldNumber;
const int ObjectDebug::kLaneIdFieldNumber;
const int ObjectDebug::kLaneSFieldNumber;
const int ObjectDebug::kOnLaneFieldNumber;
const int ObjectDebug::kPathSpeedFieldNumber;
const int ObjectDebug::kStRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectDebug::ObjectDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ObjectDebug)
}
ObjectDebug::ObjectDebug(const ObjectDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      st_region_(from.st_region_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  path_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path_id().size() > 0) {
    path_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_id_);
  }
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lane_id().size() > 0) {
    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  if (from.has_route_s()) {
    route_s_ = new ::apollo::decision::Range(*from.route_s_);
  } else {
    route_s_ = NULL;
  }
  if (from.has_route_l()) {
    route_l_ = new ::apollo::decision::Range(*from.route_l_);
  } else {
    route_l_ = NULL;
  }
  ::memcpy(&lane_s_, &from.lane_s_,
    static_cast<size_t>(reinterpret_cast<char*>(&on_lane_) -
    reinterpret_cast<char*>(&lane_s_)) + sizeof(on_lane_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ObjectDebug)
}

void ObjectDebug::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lane_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&route_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&on_lane_) -
      reinterpret_cast<char*>(&route_s_)) + sizeof(on_lane_));
}

ObjectDebug::~ObjectDebug() {
  // @@protoc_insertion_point(destructor:apollo.decision.ObjectDebug)
  SharedDtor();
}

void ObjectDebug::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lane_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete route_s_;
  if (this != internal_default_instance()) delete route_l_;
}

void ObjectDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ObjectDebug::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectDebug& ObjectDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ObjectDebug.base);
  return *internal_default_instance();
}


void ObjectDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ObjectDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  st_region_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lane_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && route_s_ != NULL) {
    delete route_s_;
  }
  route_s_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_l_ != NULL) {
    delete route_l_;
  }
  route_l_ = NULL;
  ::memset(&lane_s_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&on_lane_) -
      reinterpret_cast<char*>(&lane_s_)) + sizeof(on_lane_));
  _internal_metadata_.Clear();
}

bool ObjectDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ObjectDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.ObjectDebug.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string path_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path_id().data(), static_cast<int>(this->path_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.ObjectDebug.path_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range route_s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route_s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Range route_l = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool on_route = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &on_route_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lane_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lane_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lane_id().data(), static_cast<int>(this->lane_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "apollo.decision.ObjectDebug.lane_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double lane_s = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lane_s_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool on_lane = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &on_lane_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double path_speed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &path_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.common.Point3D st_region = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_st_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ObjectDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ObjectDebug)
  return false;
#undef DO_
}

void ObjectDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ObjectDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string path_id = 2;
  if (this->path_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_id().data(), static_cast<int>(this->path_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.path_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path_id(), output);
  }

  // .apollo.decision.Range route_s = 3;
  if (this->has_route_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_route_s(), output);
  }

  // .apollo.decision.Range route_l = 4;
  if (this->has_route_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_route_l(), output);
  }

  // bool on_route = 5;
  if (this->on_route() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->on_route(), output);
  }

  // string lane_id = 6;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.lane_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->lane_id(), output);
  }

  // double lane_s = 7;
  if (this->lane_s() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lane_s(), output);
  }

  // bool on_lane = 8;
  if (this->on_lane() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->on_lane(), output);
  }

  // double path_speed = 9;
  if (this->path_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->path_speed(), output);
  }

  // repeated .apollo.common.Point3D st_region = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_region_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->st_region(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ObjectDebug)
}

::google::protobuf::uint8* ObjectDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ObjectDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string path_id = 2;
  if (this->path_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path_id().data(), static_cast<int>(this->path_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.path_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path_id(), target);
  }

  // .apollo.decision.Range route_s = 3;
  if (this->has_route_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_route_s(), deterministic, target);
  }

  // .apollo.decision.Range route_l = 4;
  if (this->has_route_l()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_route_l(), deterministic, target);
  }

  // bool on_route = 5;
  if (this->on_route() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->on_route(), target);
  }

  // string lane_id = 6;
  if (this->lane_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lane_id().data(), static_cast<int>(this->lane_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "apollo.decision.ObjectDebug.lane_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->lane_id(), target);
  }

  // double lane_s = 7;
  if (this->lane_s() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lane_s(), target);
  }

  // bool on_lane = 8;
  if (this->on_lane() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->on_lane(), target);
  }

  // double path_speed = 9;
  if (this->path_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->path_speed(), target);
  }

  // repeated .apollo.common.Point3D st_region = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->st_region_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->st_region(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ObjectDebug)
  return target;
}

size_t ObjectDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ObjectDebug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.common.Point3D st_region = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->st_region_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->st_region(static_cast<int>(i)));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string path_id = 2;
  if (this->path_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path_id());
  }

  // string lane_id = 6;
  if (this->lane_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lane_id());
  }

  // .apollo.decision.Range route_s = 3;
  if (this->has_route_s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_s_);
  }

  // .apollo.decision.Range route_l = 4;
  if (this->has_route_l()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_l_);
  }

  // double lane_s = 7;
  if (this->lane_s() != 0) {
    total_size += 1 + 8;
  }

  // double path_speed = 9;
  if (this->path_speed() != 0) {
    total_size += 1 + 8;
  }

  // bool on_route = 5;
  if (this->on_route() != 0) {
    total_size += 1 + 1;
  }

  // bool on_lane = 8;
  if (this->on_lane() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ObjectDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ObjectDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ObjectDebug)
    MergeFrom(*source);
  }
}

void ObjectDebug::MergeFrom(const ObjectDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ObjectDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  st_region_.MergeFrom(from.st_region_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.path_id().size() > 0) {

    path_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_id_);
  }
  if (from.lane_id().size() > 0) {

    lane_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lane_id_);
  }
  if (from.has_route_s()) {
    mutable_route_s()->::apollo::decision::Range::MergeFrom(from.route_s());
  }
  if (from.has_route_l()) {
    mutable_route_l()->::apollo::decision::Range::MergeFrom(from.route_l());
  }
  if (from.lane_s() != 0) {
    set_lane_s(from.lane_s());
  }
  if (from.path_speed() != 0) {
    set_path_speed(from.path_speed());
  }
  if (from.on_route() != 0) {
    set_on_route(from.on_route());
  }
  if (from.on_lane() != 0) {
    set_on_lane(from.on_lane());
  }
}

void ObjectDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ObjectDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectDebug::CopyFrom(const ObjectDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ObjectDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectDebug::IsInitialized() const {
  return true;
}

void ObjectDebug::Swap(ObjectDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectDebug::InternalSwap(ObjectDebug* other) {
  using std::swap;
  CastToBase(&st_region_)->InternalSwap(CastToBase(&other->st_region_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  path_id_.Swap(&other->path_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lane_id_.Swap(&other->lane_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(route_s_, other->route_s_);
  swap(route_l_, other->route_l_);
  swap(lane_s_, other->lane_s_);
  swap(path_speed_, other->path_speed_);
  swap(on_route_, other->on_route_);
  swap(on_lane_, other->on_lane_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ObjectDebug::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LatencyStats::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LatencyStats::kTotalTimeMsFieldNumber;
const int LatencyStats::kSensorReadTimeMsFieldNumber;
const int LatencyStats::kAdcPrepareTimeMsFieldNumber;
const int LatencyStats::kObjPrepareTimeMsFieldNumber;
const int LatencyStats::kWorldRuleTimeMsFieldNumber;
const int LatencyStats::kStGraphTimeMsFieldNumber;
const int LatencyStats::kGatewayReceiveDelayMsFieldNumber;
const int LatencyStats::kPerceptionReceiveDelayMsFieldNumber;
const int LatencyStats::kPredictionReceiveDelayMsFieldNumber;
const int LatencyStats::kSignalReceiveDelayMsFieldNumber;
const int LatencyStats::kPerceptionIntervalMsFieldNumber;
const int LatencyStats::kPredictionIntervalMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LatencyStats::LatencyStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LatencyStats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.LatencyStats)
}
LatencyStats::LatencyStats(const LatencyStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_time_ms_, &from.total_time_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&prediction_interval_ms_) -
    reinterpret_cast<char*>(&total_time_ms_)) + sizeof(prediction_interval_ms_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.LatencyStats)
}

void LatencyStats::SharedCtor() {
  ::memset(&total_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prediction_interval_ms_) -
      reinterpret_cast<char*>(&total_time_ms_)) + sizeof(prediction_interval_ms_));
}

LatencyStats::~LatencyStats() {
  // @@protoc_insertion_point(destructor:apollo.decision.LatencyStats)
  SharedDtor();
}

void LatencyStats::SharedDtor() {
}

void LatencyStats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LatencyStats::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LatencyStats& LatencyStats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LatencyStats.base);
  return *internal_default_instance();
}


void LatencyStats::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.LatencyStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_time_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prediction_interval_ms_) -
      reinterpret_cast<char*>(&total_time_ms_)) + sizeof(prediction_interval_ms_));
  _internal_metadata_.Clear();
}

bool LatencyStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.LatencyStats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double total_time_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sensor_read_time_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sensor_read_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double adc_prepare_time_ms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &adc_prepare_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double obj_prepare_time_ms = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &obj_prepare_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double world_rule_time_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &world_rule_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double st_graph_time_ms = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &st_graph_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gateway_receive_delay_ms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gateway_receive_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double perception_receive_delay_ms = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &perception_receive_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double prediction_receive_delay_ms = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prediction_receive_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double signal_receive_delay_ms = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &signal_receive_delay_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double perception_interval_ms = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &perception_interval_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double prediction_interval_ms = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &prediction_interval_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.LatencyStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.LatencyStats)
  return false;
#undef DO_
}

void LatencyStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.LatencyStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double total_time_ms = 1;
  if (this->total_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->total_time_ms(), output);
  }

  // double sensor_read_time_ms = 2;
  if (this->sensor_read_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->sensor_read_time_ms(), output);
  }

  // double adc_prepare_time_ms = 3;
  if (this->adc_prepare_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->adc_prepare_time_ms(), output);
  }

  // double obj_prepare_time_ms = 4;
  if (this->obj_prepare_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->obj_prepare_time_ms(), output);
  }

  // double world_rule_time_ms = 5;
  if (this->world_rule_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->world_rule_time_ms(), output);
  }

  // double st_graph_time_ms = 6;
  if (this->st_graph_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->st_graph_time_ms(), output);
  }

  // double gateway_receive_delay_ms = 8;
  if (this->gateway_receive_delay_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->gateway_receive_delay_ms(), output);
  }

  // double perception_receive_delay_ms = 9;
  if (this->perception_receive_delay_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->perception_receive_delay_ms(), output);
  }

  // double prediction_receive_delay_ms = 10;
  if (this->prediction_receive_delay_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->prediction_receive_delay_ms(), output);
  }

  // double signal_receive_delay_ms = 11;
  if (this->signal_receive_delay_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->signal_receive_delay_ms(), output);
  }

  // double perception_interval_ms = 12;
  if (this->perception_interval_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->perception_interval_ms(), output);
  }

  // double prediction_interval_ms = 13;
  if (this->prediction_interval_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->prediction_interval_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.LatencyStats)
}

::google::protobuf::uint8* LatencyStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.LatencyStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double total_time_ms = 1;
  if (this->total_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->total_time_ms(), target);
  }

  // double sensor_read_time_ms = 2;
  if (this->sensor_read_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->sensor_read_time_ms(), target);
  }

  // double adc_prepare_time_ms = 3;
  if (this->adc_prepare_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->adc_prepare_time_ms(), target);
  }

  // double obj_prepare_time_ms = 4;
  if (this->obj_prepare_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->obj_prepare_time_ms(), target);
  }

  // double world_rule_time_ms = 5;
  if (this->world_rule_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->world_rule_time_ms(), target);
  }

  // double st_graph_time_ms = 6;
  if (this->st_graph_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->st_graph_time_ms(), target);
  }

  // double gateway_receive_delay_ms = 8;
  if (this->gateway_receive_delay_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->gateway_receive_delay_ms(), target);
  }

  // double perception_receive_delay_ms = 9;
  if (this->perception_receive_delay_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->perception_receive_delay_ms(), target);
  }

  // double prediction_receive_delay_ms = 10;
  if (this->prediction_receive_delay_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->prediction_receive_delay_ms(), target);
  }

  // double signal_receive_delay_ms = 11;
  if (this->signal_receive_delay_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->signal_receive_delay_ms(), target);
  }

  // double perception_interval_ms = 12;
  if (this->perception_interval_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->perception_interval_ms(), target);
  }

  // double prediction_interval_ms = 13;
  if (this->prediction_interval_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->prediction_interval_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.LatencyStats)
  return target;
}

size_t LatencyStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.LatencyStats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double total_time_ms = 1;
  if (this->total_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double sensor_read_time_ms = 2;
  if (this->sensor_read_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double adc_prepare_time_ms = 3;
  if (this->adc_prepare_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double obj_prepare_time_ms = 4;
  if (this->obj_prepare_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double world_rule_time_ms = 5;
  if (this->world_rule_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double st_graph_time_ms = 6;
  if (this->st_graph_time_ms() != 0) {
    total_size += 1 + 8;
  }

  // double gateway_receive_delay_ms = 8;
  if (this->gateway_receive_delay_ms() != 0) {
    total_size += 1 + 8;
  }

  // double perception_receive_delay_ms = 9;
  if (this->perception_receive_delay_ms() != 0) {
    total_size += 1 + 8;
  }

  // double prediction_receive_delay_ms = 10;
  if (this->prediction_receive_delay_ms() != 0) {
    total_size += 1 + 8;
  }

  // double signal_receive_delay_ms = 11;
  if (this->signal_receive_delay_ms() != 0) {
    total_size += 1 + 8;
  }

  // double perception_interval_ms = 12;
  if (this->perception_interval_ms() != 0) {
    total_size += 1 + 8;
  }

  // double prediction_interval_ms = 13;
  if (this->prediction_interval_ms() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LatencyStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.LatencyStats)
  GOOGLE_DCHECK_NE(&from, this);
  const LatencyStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LatencyStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.LatencyStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.LatencyStats)
    MergeFrom(*source);
  }
}

void LatencyStats::MergeFrom(const LatencyStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.LatencyStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total_time_ms() != 0) {
    set_total_time_ms(from.total_time_ms());
  }
  if (from.sensor_read_time_ms() != 0) {
    set_sensor_read_time_ms(from.sensor_read_time_ms());
  }
  if (from.adc_prepare_time_ms() != 0) {
    set_adc_prepare_time_ms(from.adc_prepare_time_ms());
  }
  if (from.obj_prepare_time_ms() != 0) {
    set_obj_prepare_time_ms(from.obj_prepare_time_ms());
  }
  if (from.world_rule_time_ms() != 0) {
    set_world_rule_time_ms(from.world_rule_time_ms());
  }
  if (from.st_graph_time_ms() != 0) {
    set_st_graph_time_ms(from.st_graph_time_ms());
  }
  if (from.gateway_receive_delay_ms() != 0) {
    set_gateway_receive_delay_ms(from.gateway_receive_delay_ms());
  }
  if (from.perception_receive_delay_ms() != 0) {
    set_perception_receive_delay_ms(from.perception_receive_delay_ms());
  }
  if (from.prediction_receive_delay_ms() != 0) {
    set_prediction_receive_delay_ms(from.prediction_receive_delay_ms());
  }
  if (from.signal_receive_delay_ms() != 0) {
    set_signal_receive_delay_ms(from.signal_receive_delay_ms());
  }
  if (from.perception_interval_ms() != 0) {
    set_perception_interval_ms(from.perception_interval_ms());
  }
  if (from.prediction_interval_ms() != 0) {
    set_prediction_interval_ms(from.prediction_interval_ms());
  }
}

void LatencyStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.LatencyStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LatencyStats::CopyFrom(const LatencyStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.LatencyStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LatencyStats::IsInitialized() const {
  return true;
}

void LatencyStats::Swap(LatencyStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LatencyStats::InternalSwap(LatencyStats* other) {
  using std::swap;
  swap(total_time_ms_, other->total_time_ms_);
  swap(sensor_read_time_ms_, other->sensor_read_time_ms_);
  swap(adc_prepare_time_ms_, other->adc_prepare_time_ms_);
  swap(obj_prepare_time_ms_, other->obj_prepare_time_ms_);
  swap(world_rule_time_ms_, other->world_rule_time_ms_);
  swap(st_graph_time_ms_, other->st_graph_time_ms_);
  swap(gateway_receive_delay_ms_, other->gateway_receive_delay_ms_);
  swap(perception_receive_delay_ms_, other->perception_receive_delay_ms_);
  swap(prediction_receive_delay_ms_, other->prediction_receive_delay_ms_);
  swap(signal_receive_delay_ms_, other->signal_receive_delay_ms_);
  swap(perception_interval_ms_, other->perception_interval_ms_);
  swap(prediction_interval_ms_, other->prediction_interval_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LatencyStats::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stats::InitAsDefaultInstance() {
  ::apollo::decision::_Stats_default_instance_._instance.get_mutable()->latency_stats_ = const_cast< ::apollo::decision::LatencyStats*>(
      ::apollo::decision::LatencyStats::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stats::kLatencyStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stats::Stats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Stats.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.Stats)
}
Stats::Stats(const Stats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_latency_stats()) {
    latency_stats_ = new ::apollo::decision::LatencyStats(*from.latency_stats_);
  } else {
    latency_stats_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.Stats)
}

void Stats::SharedCtor() {
  latency_stats_ = NULL;
}

Stats::~Stats() {
  // @@protoc_insertion_point(destructor:apollo.decision.Stats)
  SharedDtor();
}

void Stats::SharedDtor() {
  if (this != internal_default_instance()) delete latency_stats_;
}

void Stats::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Stats::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stats& Stats::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Stats.base);
  return *internal_default_instance();
}


void Stats::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && latency_stats_ != NULL) {
    delete latency_stats_;
  }
  latency_stats_ = NULL;
  _internal_metadata_.Clear();
}

bool Stats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.Stats)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.LatencyStats latency_stats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_latency_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.Stats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.Stats)
  return false;
#undef DO_
}

void Stats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.LatencyStats latency_stats = 1;
  if (this->has_latency_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_latency_stats(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.Stats)
}

::google::protobuf::uint8* Stats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.Stats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.LatencyStats latency_stats = 1;
  if (this->has_latency_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_latency_stats(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.Stats)
  return target;
}

size_t Stats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.Stats)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.decision.LatencyStats latency_stats = 1;
  if (this->has_latency_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *latency_stats_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Stats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  const Stats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.Stats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.Stats)
    MergeFrom(*source);
  }
}

void Stats::MergeFrom(const Stats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.Stats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_latency_stats()) {
    mutable_latency_stats()->::apollo::decision::LatencyStats::MergeFrom(from.latency_stats());
  }
}

void Stats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stats::CopyFrom(const Stats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.Stats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stats::IsInitialized() const {
  return true;
}

void Stats::Swap(Stats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stats::InternalSwap(Stats* other) {
  using std::swap;
  swap(latency_stats_, other->latency_stats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Stats::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModuleDebug::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModuleDebug::kGatewaySequenceNumFieldNumber;
const int ModuleDebug::kPerceptionSequenceNumFieldNumber;
const int ModuleDebug::kPredictionSequenceNumFieldNumber;
const int ModuleDebug::kSignalSequenceNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModuleDebug::ModuleDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ModuleDebug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.ModuleDebug)
}
ModuleDebug::ModuleDebug(const ModuleDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gateway_sequence_num_, &from.gateway_sequence_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&signal_sequence_num_) -
    reinterpret_cast<char*>(&gateway_sequence_num_)) + sizeof(signal_sequence_num_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.ModuleDebug)
}

void ModuleDebug::SharedCtor() {
  ::memset(&gateway_sequence_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_sequence_num_) -
      reinterpret_cast<char*>(&gateway_sequence_num_)) + sizeof(signal_sequence_num_));
}

ModuleDebug::~ModuleDebug() {
  // @@protoc_insertion_point(destructor:apollo.decision.ModuleDebug)
  SharedDtor();
}

void ModuleDebug::SharedDtor() {
}

void ModuleDebug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModuleDebug::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModuleDebug& ModuleDebug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_ModuleDebug.base);
  return *internal_default_instance();
}


void ModuleDebug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.ModuleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gateway_sequence_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_sequence_num_) -
      reinterpret_cast<char*>(&gateway_sequence_num_)) + sizeof(signal_sequence_num_));
  _internal_metadata_.Clear();
}

bool ModuleDebug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.ModuleDebug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gateway_sequence_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gateway_sequence_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 perception_sequence_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &perception_sequence_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prediction_sequence_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prediction_sequence_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 signal_sequence_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signal_sequence_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.ModuleDebug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.ModuleDebug)
  return false;
#undef DO_
}

void ModuleDebug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.ModuleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gateway_sequence_num = 1;
  if (this->gateway_sequence_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gateway_sequence_num(), output);
  }

  // uint32 perception_sequence_num = 2;
  if (this->perception_sequence_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->perception_sequence_num(), output);
  }

  // uint32 prediction_sequence_num = 3;
  if (this->prediction_sequence_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prediction_sequence_num(), output);
  }

  // uint32 signal_sequence_num = 4;
  if (this->signal_sequence_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->signal_sequence_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.ModuleDebug)
}

::google::protobuf::uint8* ModuleDebug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.ModuleDebug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gateway_sequence_num = 1;
  if (this->gateway_sequence_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gateway_sequence_num(), target);
  }

  // uint32 perception_sequence_num = 2;
  if (this->perception_sequence_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->perception_sequence_num(), target);
  }

  // uint32 prediction_sequence_num = 3;
  if (this->prediction_sequence_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prediction_sequence_num(), target);
  }

  // uint32 signal_sequence_num = 4;
  if (this->signal_sequence_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->signal_sequence_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.ModuleDebug)
  return target;
}

size_t ModuleDebug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.ModuleDebug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gateway_sequence_num = 1;
  if (this->gateway_sequence_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gateway_sequence_num());
  }

  // uint32 perception_sequence_num = 2;
  if (this->perception_sequence_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->perception_sequence_num());
  }

  // uint32 prediction_sequence_num = 3;
  if (this->prediction_sequence_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prediction_sequence_num());
  }

  // uint32 signal_sequence_num = 4;
  if (this->signal_sequence_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signal_sequence_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModuleDebug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.ModuleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  const ModuleDebug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModuleDebug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.ModuleDebug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.ModuleDebug)
    MergeFrom(*source);
  }
}

void ModuleDebug::MergeFrom(const ModuleDebug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.ModuleDebug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateway_sequence_num() != 0) {
    set_gateway_sequence_num(from.gateway_sequence_num());
  }
  if (from.perception_sequence_num() != 0) {
    set_perception_sequence_num(from.perception_sequence_num());
  }
  if (from.prediction_sequence_num() != 0) {
    set_prediction_sequence_num(from.prediction_sequence_num());
  }
  if (from.signal_sequence_num() != 0) {
    set_signal_sequence_num(from.signal_sequence_num());
  }
}

void ModuleDebug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.ModuleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModuleDebug::CopyFrom(const ModuleDebug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.ModuleDebug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModuleDebug::IsInitialized() const {
  return true;
}

void ModuleDebug::Swap(ModuleDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModuleDebug::InternalSwap(ModuleDebug* other) {
  using std::swap;
  swap(gateway_sequence_num_, other->gateway_sequence_num_);
  swap(perception_sequence_num_, other->perception_sequence_num_);
  swap(prediction_sequence_num_, other->prediction_sequence_num_);
  swap(signal_sequence_num_, other->signal_sequence_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModuleDebug::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Debug::InitAsDefaultInstance() {
  ::apollo::decision::_Debug_default_instance_._instance.get_mutable()->master_vehicle_ = const_cast< ::apollo::decision::MasterVehicleDebug*>(
      ::apollo::decision::MasterVehicleDebug::internal_default_instance());
  ::apollo::decision::_Debug_default_instance_._instance.get_mutable()->original_decision_ = const_cast< ::apollo::decision::MainDecision*>(
      ::apollo::decision::MainDecision::internal_default_instance());
  ::apollo::decision::_Debug_default_instance_._instance.get_mutable()->module_debug_ = const_cast< ::apollo::decision::ModuleDebug*>(
      ::apollo::decision::ModuleDebug::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Debug::kMasterVehicleFieldNumber;
const int Debug::kOriginalDecisionFieldNumber;
const int Debug::kObjectFieldNumber;
const int Debug::kMapVersionFieldNumber;
const int Debug::kDecisionVersionFieldNumber;
const int Debug::kModuleDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Debug::Debug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Debug.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.Debug)
}
Debug::Debug(const Debug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      object_(from.object_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.map_version().size() > 0) {
    map_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_version_);
  }
  decision_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.decision_version().size() > 0) {
    decision_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decision_version_);
  }
  if (from.has_master_vehicle()) {
    master_vehicle_ = new ::apollo::decision::MasterVehicleDebug(*from.master_vehicle_);
  } else {
    master_vehicle_ = NULL;
  }
  if (from.has_original_decision()) {
    original_decision_ = new ::apollo::decision::MainDecision(*from.original_decision_);
  } else {
    original_decision_ = NULL;
  }
  if (from.has_module_debug()) {
    module_debug_ = new ::apollo::decision::ModuleDebug(*from.module_debug_);
  } else {
    module_debug_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.Debug)
}

void Debug::SharedCtor() {
  map_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decision_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&master_vehicle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&module_debug_) -
      reinterpret_cast<char*>(&master_vehicle_)) + sizeof(module_debug_));
}

Debug::~Debug() {
  // @@protoc_insertion_point(destructor:apollo.decision.Debug)
  SharedDtor();
}

void Debug::SharedDtor() {
  map_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decision_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete master_vehicle_;
  if (this != internal_default_instance()) delete original_decision_;
  if (this != internal_default_instance()) delete module_debug_;
}

void Debug::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Debug::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Debug& Debug::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_Debug.base);
  return *internal_default_instance();
}


void Debug::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_.Clear();
  map_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  decision_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && master_vehicle_ != NULL) {
    delete master_vehicle_;
  }
  master_vehicle_ = NULL;
  if (GetArenaNoVirtual() == NULL && original_decision_ != NULL) {
    delete original_decision_;
  }
  original_decision_ = NULL;
  if (GetArenaNoVirtual() == NULL && module_debug_ != NULL) {
    delete module_debug_;
  }
  module_debug_ = NULL;
  _internal_metadata_.Clear();
}

bool Debug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.Debug)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.decision.MasterVehicleDebug master_vehicle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_master_vehicle()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainDecision original_decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_original_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.decision.ObjectDebug object = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes map_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_map_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ModuleDebug module_debug = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_module_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes decision_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_decision_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.Debug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.Debug)
  return false;
#undef DO_
}

void Debug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MasterVehicleDebug master_vehicle = 1;
  if (this->has_master_vehicle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_master_vehicle(), output);
  }

  // .apollo.decision.MainDecision original_decision = 2;
  if (this->has_original_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_original_decision(), output);
  }

  // repeated .apollo.decision.ObjectDebug object = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->object(static_cast<int>(i)),
      output);
  }

  // bytes map_version = 5;
  if (this->map_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->map_version(), output);
  }

  // .apollo.decision.ModuleDebug module_debug = 6;
  if (this->has_module_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_module_debug(), output);
  }

  // bytes decision_version = 7;
  if (this->decision_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->decision_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.Debug)
}

::google::protobuf::uint8* Debug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.Debug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.decision.MasterVehicleDebug master_vehicle = 1;
  if (this->has_master_vehicle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_master_vehicle(), deterministic, target);
  }

  // .apollo.decision.MainDecision original_decision = 2;
  if (this->has_original_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_original_decision(), deterministic, target);
  }

  // repeated .apollo.decision.ObjectDebug object = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->object_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->object(static_cast<int>(i)), deterministic, target);
  }

  // bytes map_version = 5;
  if (this->map_version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->map_version(), target);
  }

  // .apollo.decision.ModuleDebug module_debug = 6;
  if (this->has_module_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_module_debug(), deterministic, target);
  }

  // bytes decision_version = 7;
  if (this->decision_version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->decision_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.Debug)
  return target;
}

size_t Debug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.Debug)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .apollo.decision.ObjectDebug object = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->object_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->object(static_cast<int>(i)));
    }
  }

  // bytes map_version = 5;
  if (this->map_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->map_version());
  }

  // bytes decision_version = 7;
  if (this->decision_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->decision_version());
  }

  // .apollo.decision.MasterVehicleDebug master_vehicle = 1;
  if (this->has_master_vehicle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *master_vehicle_);
  }

  // .apollo.decision.MainDecision original_decision = 2;
  if (this->has_original_decision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *original_decision_);
  }

  // .apollo.decision.ModuleDebug module_debug = 6;
  if (this->has_module_debug()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *module_debug_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Debug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  const Debug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Debug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.Debug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.Debug)
    MergeFrom(*source);
  }
}

void Debug::MergeFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.Debug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  object_.MergeFrom(from.object_);
  if (from.map_version().size() > 0) {

    map_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_version_);
  }
  if (from.decision_version().size() > 0) {

    decision_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.decision_version_);
  }
  if (from.has_master_vehicle()) {
    mutable_master_vehicle()->::apollo::decision::MasterVehicleDebug::MergeFrom(from.master_vehicle());
  }
  if (from.has_original_decision()) {
    mutable_original_decision()->::apollo::decision::MainDecision::MergeFrom(from.original_decision());
  }
  if (from.has_module_debug()) {
    mutable_module_debug()->::apollo::decision::ModuleDebug::MergeFrom(from.module_debug());
  }
}

void Debug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Debug::CopyFrom(const Debug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.Debug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Debug::IsInitialized() const {
  return true;
}

void Debug::Swap(Debug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Debug::InternalSwap(Debug* other) {
  using std::swap;
  CastToBase(&object_)->InternalSwap(CastToBase(&other->object_));
  map_version_.Swap(&other->map_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  decision_version_.Swap(&other->decision_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(master_vehicle_, other->master_vehicle_);
  swap(original_decision_, other->original_decision_);
  swap(module_debug_, other->module_debug_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Debug::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LightSignal::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LightSignal::kEmergencyFieldNumber;
const int LightSignal::kTurnSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LightSignal::LightSignal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LightSignal.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.LightSignal)
}
LightSignal::LightSignal(const LightSignal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&emergency_, &from.emergency_,
    static_cast<size_t>(reinterpret_cast<char*>(&turn_signal_) -
    reinterpret_cast<char*>(&emergency_)) + sizeof(turn_signal_));
  // @@protoc_insertion_point(copy_constructor:apollo.decision.LightSignal)
}

void LightSignal::SharedCtor() {
  ::memset(&emergency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turn_signal_) -
      reinterpret_cast<char*>(&emergency_)) + sizeof(turn_signal_));
}

LightSignal::~LightSignal() {
  // @@protoc_insertion_point(destructor:apollo.decision.LightSignal)
  SharedDtor();
}

void LightSignal::SharedDtor() {
}

void LightSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LightSignal::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LightSignal& LightSignal::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_LightSignal.base);
  return *internal_default_instance();
}


void LightSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.LightSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&emergency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turn_signal_) -
      reinterpret_cast<char*>(&emergency_)) + sizeof(turn_signal_));
  _internal_metadata_.Clear();
}

bool LightSignal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.LightSignal)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool emergency = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &emergency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.LightSignal.TurnSignal turn_signal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_turn_signal(static_cast< ::apollo::decision::LightSignal_TurnSignal >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.LightSignal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.LightSignal)
  return false;
#undef DO_
}

void LightSignal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.LightSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool emergency = 1;
  if (this->emergency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->emergency(), output);
  }

  // .apollo.decision.LightSignal.TurnSignal turn_signal = 2;
  if (this->turn_signal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->turn_signal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.LightSignal)
}

::google::protobuf::uint8* LightSignal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.LightSignal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool emergency = 1;
  if (this->emergency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->emergency(), target);
  }

  // .apollo.decision.LightSignal.TurnSignal turn_signal = 2;
  if (this->turn_signal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->turn_signal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.LightSignal)
  return target;
}

size_t LightSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.LightSignal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool emergency = 1;
  if (this->emergency() != 0) {
    total_size += 1 + 1;
  }

  // .apollo.decision.LightSignal.TurnSignal turn_signal = 2;
  if (this->turn_signal() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->turn_signal());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LightSignal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.LightSignal)
  GOOGLE_DCHECK_NE(&from, this);
  const LightSignal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LightSignal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.LightSignal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.LightSignal)
    MergeFrom(*source);
  }
}

void LightSignal::MergeFrom(const LightSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.LightSignal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.emergency() != 0) {
    set_emergency(from.emergency());
  }
  if (from.turn_signal() != 0) {
    set_turn_signal(from.turn_signal());
  }
}

void LightSignal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.LightSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LightSignal::CopyFrom(const LightSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.LightSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LightSignal::IsInitialized() const {
  return true;
}

void LightSignal::Swap(LightSignal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LightSignal::InternalSwap(LightSignal* other) {
  using std::swap;
  swap(emergency_, other->emergency_);
  swap(turn_signal_, other->turn_signal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LightSignal::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DecisionResult::InitAsDefaultInstance() {
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->object_decision_ = const_cast< ::apollo::decision::ObjectDecisions*>(
      ::apollo::decision::ObjectDecisions::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->main_decision_ = const_cast< ::apollo::decision::MainDecision*>(
      ::apollo::decision::MainDecision::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->debug_ = const_cast< ::apollo::decision::Debug*>(
      ::apollo::decision::Debug::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->stats_ = const_cast< ::apollo::decision::Stats*>(
      ::apollo::decision::Stats::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->signal_ = const_cast< ::apollo::canbus::Signal*>(
      ::apollo::canbus::Signal::internal_default_instance());
  ::apollo::decision::_DecisionResult_default_instance_._instance.get_mutable()->light_signal_ = const_cast< ::apollo::decision::LightSignal*>(
      ::apollo::decision::LightSignal::internal_default_instance());
}
void DecisionResult::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void DecisionResult::clear_signal() {
  if (GetArenaNoVirtual() == NULL && signal_ != NULL) {
    delete signal_;
  }
  signal_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DecisionResult::kHeaderFieldNumber;
const int DecisionResult::kObjectDecisionFieldNumber;
const int DecisionResult::kMainDecisionFieldNumber;
const int DecisionResult::kDebugFieldNumber;
const int DecisionResult::kStatsFieldNumber;
const int DecisionResult::kSignalFieldNumber;
const int DecisionResult::kLightSignalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DecisionResult::DecisionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_DecisionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.decision.DecisionResult)
}
DecisionResult::DecisionResult(const DecisionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_object_decision()) {
    object_decision_ = new ::apollo::decision::ObjectDecisions(*from.object_decision_);
  } else {
    object_decision_ = NULL;
  }
  if (from.has_main_decision()) {
    main_decision_ = new ::apollo::decision::MainDecision(*from.main_decision_);
  } else {
    main_decision_ = NULL;
  }
  if (from.has_debug()) {
    debug_ = new ::apollo::decision::Debug(*from.debug_);
  } else {
    debug_ = NULL;
  }
  if (from.has_light_signal()) {
    light_signal_ = new ::apollo::decision::LightSignal(*from.light_signal_);
  } else {
    light_signal_ = NULL;
  }
  if (from.has_stats()) {
    stats_ = new ::apollo::decision::Stats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  if (from.has_signal()) {
    signal_ = new ::apollo::canbus::Signal(*from.signal_);
  } else {
    signal_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.decision.DecisionResult)
}

void DecisionResult::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&signal_) -
      reinterpret_cast<char*>(&header_)) + sizeof(signal_));
}

DecisionResult::~DecisionResult() {
  // @@protoc_insertion_point(destructor:apollo.decision.DecisionResult)
  SharedDtor();
}

void DecisionResult::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete object_decision_;
  if (this != internal_default_instance()) delete main_decision_;
  if (this != internal_default_instance()) delete debug_;
  if (this != internal_default_instance()) delete light_signal_;
  if (this != internal_default_instance()) delete stats_;
  if (this != internal_default_instance()) delete signal_;
}

void DecisionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DecisionResult::descriptor() {
  ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DecisionResult& DecisionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::scc_info_DecisionResult.base);
  return *internal_default_instance();
}


void DecisionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.decision.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && object_decision_ != NULL) {
    delete object_decision_;
  }
  object_decision_ = NULL;
  if (GetArenaNoVirtual() == NULL && main_decision_ != NULL) {
    delete main_decision_;
  }
  main_decision_ = NULL;
  if (GetArenaNoVirtual() == NULL && debug_ != NULL) {
    delete debug_;
  }
  debug_ = NULL;
  if (GetArenaNoVirtual() == NULL && light_signal_ != NULL) {
    delete light_signal_;
  }
  light_signal_ = NULL;
  if (GetArenaNoVirtual() == NULL && stats_ != NULL) {
    delete stats_;
  }
  stats_ = NULL;
  if (GetArenaNoVirtual() == NULL && signal_ != NULL) {
    delete signal_;
  }
  signal_ = NULL;
  _internal_metadata_.Clear();
}

bool DecisionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.decision.DecisionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .apollo.common.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.ObjectDecisions object_decision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.MainDecision main_decision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_main_decision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Debug debug = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_debug()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.LightSignal light_signal = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_light_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.decision.Stats stats = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .apollo.canbus.Signal signal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_signal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.decision.DecisionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.decision.DecisionResult)
  return false;
#undef DO_
}

void DecisionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.decision.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .apollo.decision.ObjectDecisions object_decision = 2;
  if (this->has_object_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_object_decision(), output);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_main_decision(), output);
  }

  // .apollo.decision.Debug debug = 4;
  if (this->has_debug()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_debug(), output);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_light_signal(), output);
  }

  // .apollo.decision.Stats stats = 6;
  if (this->has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_stats(), output);
  }

  // .apollo.canbus.Signal signal = 7;
  if (this->has_signal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_signal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.decision.DecisionResult)
}

::google::protobuf::uint8* DecisionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:apollo.decision.DecisionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .apollo.decision.ObjectDecisions object_decision = 2;
  if (this->has_object_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_object_decision(), deterministic, target);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_main_decision(), deterministic, target);
  }

  // .apollo.decision.Debug debug = 4;
  if (this->has_debug()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_debug(), deterministic, target);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_light_signal(), deterministic, target);
  }

  // .apollo.decision.Stats stats = 6;
  if (this->has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_stats(), deterministic, target);
  }

  // .apollo.canbus.Signal signal = 7;
  if (this->has_signal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_signal(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.decision.DecisionResult)
  return target;
}

size_t DecisionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.decision.DecisionResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .apollo.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .apollo.decision.ObjectDecisions object_decision = 2;
  if (this->has_object_decision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *object_decision_);
  }

  // .apollo.decision.MainDecision main_decision = 3;
  if (this->has_main_decision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *main_decision_);
  }

  // .apollo.decision.Debug debug = 4;
  if (this->has_debug()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *debug_);
  }

  // .apollo.decision.LightSignal light_signal = 5;
  if (this->has_light_signal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *light_signal_);
  }

  // .apollo.decision.Stats stats = 6;
  if (this->has_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *stats_);
  }

  // .apollo.canbus.Signal signal = 7;
  if (this->has_signal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *signal_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecisionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.decision.DecisionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const DecisionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DecisionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.decision.DecisionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.decision.DecisionResult)
    MergeFrom(*source);
  }
}

void DecisionResult::MergeFrom(const DecisionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.decision.DecisionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
  if (from.has_object_decision()) {
    mutable_object_decision()->::apollo::decision::ObjectDecisions::MergeFrom(from.object_decision());
  }
  if (from.has_main_decision()) {
    mutable_main_decision()->::apollo::decision::MainDecision::MergeFrom(from.main_decision());
  }
  if (from.has_debug()) {
    mutable_debug()->::apollo::decision::Debug::MergeFrom(from.debug());
  }
  if (from.has_light_signal()) {
    mutable_light_signal()->::apollo::decision::LightSignal::MergeFrom(from.light_signal());
  }
  if (from.has_stats()) {
    mutable_stats()->::apollo::decision::Stats::MergeFrom(from.stats());
  }
  if (from.has_signal()) {
    mutable_signal()->::apollo::canbus::Signal::MergeFrom(from.signal());
  }
}

void DecisionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.decision.DecisionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecisionResult::CopyFrom(const DecisionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.decision.DecisionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecisionResult::IsInitialized() const {
  return true;
}

void DecisionResult::Swap(DecisionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DecisionResult::InternalSwap(DecisionResult* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(object_decision_, other->object_decision_);
  swap(main_decision_, other->main_decision_);
  swap(debug_, other->debug_);
  swap(light_signal_, other->light_signal_);
  swap(stats_, other->stats_);
  swap(signal_, other->signal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DecisionResult::GetMetadata() const {
  protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_apollo_5fmsgs_2fproto_2fdecision_2fdecision_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace decision
}  // namespace apollo
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::Range* Arena::CreateMaybeMessage< ::apollo::decision::Range >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::TargetLane* Arena::CreateMaybeMessage< ::apollo::decision::TargetLane >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::TargetLane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectIgnore* Arena::CreateMaybeMessage< ::apollo::decision::ObjectIgnore >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectIgnore >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectStop* Arena::CreateMaybeMessage< ::apollo::decision::ObjectStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectNudge* Arena::CreateMaybeMessage< ::apollo::decision::ObjectNudge >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectNudge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectYield* Arena::CreateMaybeMessage< ::apollo::decision::ObjectYield >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectYield >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectFollow* Arena::CreateMaybeMessage< ::apollo::decision::ObjectFollow >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectFollow >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectOvertake* Arena::CreateMaybeMessage< ::apollo::decision::ObjectOvertake >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectOvertake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectSidePass* Arena::CreateMaybeMessage< ::apollo::decision::ObjectSidePass >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectSidePass >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectAvoid* Arena::CreateMaybeMessage< ::apollo::decision::ObjectAvoid >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectAvoid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectDecisionType* Arena::CreateMaybeMessage< ::apollo::decision::ObjectDecisionType >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectDecisionType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectDecision* Arena::CreateMaybeMessage< ::apollo::decision::ObjectDecision >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectDecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectDecisions* Arena::CreateMaybeMessage< ::apollo::decision::ObjectDecisions >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectDecisions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::StopLine* Arena::CreateMaybeMessage< ::apollo::decision::StopLine >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::StopLine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainStop* Arena::CreateMaybeMessage< ::apollo::decision::MainStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::EmergencyStopHardBrake* Arena::CreateMaybeMessage< ::apollo::decision::EmergencyStopHardBrake >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::EmergencyStopHardBrake >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::EmergencyStopCruiseToStop* Arena::CreateMaybeMessage< ::apollo::decision::EmergencyStopCruiseToStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::EmergencyStopCruiseToStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainEmergencyStop* Arena::CreateMaybeMessage< ::apollo::decision::MainEmergencyStop >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainEmergencyStop >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainCruise* Arena::CreateMaybeMessage< ::apollo::decision::MainCruise >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainCruise >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainChangeLane* Arena::CreateMaybeMessage< ::apollo::decision::MainChangeLane >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainChangeLane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainMissionComplete* Arena::CreateMaybeMessage< ::apollo::decision::MainMissionComplete >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainMissionComplete >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainNotReady* Arena::CreateMaybeMessage< ::apollo::decision::MainNotReady >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainNotReady >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainParking* Arena::CreateMaybeMessage< ::apollo::decision::MainParking >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainParking >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MainDecision* Arena::CreateMaybeMessage< ::apollo::decision::MainDecision >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MainDecision >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::MasterVehicleDebug* Arena::CreateMaybeMessage< ::apollo::decision::MasterVehicleDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::MasterVehicleDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ObjectDebug* Arena::CreateMaybeMessage< ::apollo::decision::ObjectDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ObjectDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::LatencyStats* Arena::CreateMaybeMessage< ::apollo::decision::LatencyStats >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::LatencyStats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::Stats* Arena::CreateMaybeMessage< ::apollo::decision::Stats >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::Stats >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::ModuleDebug* Arena::CreateMaybeMessage< ::apollo::decision::ModuleDebug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::ModuleDebug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::Debug* Arena::CreateMaybeMessage< ::apollo::decision::Debug >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::Debug >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::LightSignal* Arena::CreateMaybeMessage< ::apollo::decision::LightSignal >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::LightSignal >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::apollo::decision::DecisionResult* Arena::CreateMaybeMessage< ::apollo::decision::DecisionResult >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::decision::DecisionResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
